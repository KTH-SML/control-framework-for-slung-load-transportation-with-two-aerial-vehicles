(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1312154,      27930]
NotebookOptionsPosition[   1293195,      27301]
NotebookOutlinePosition[   1293533,      27316]
CellTagsIndexPosition[   1293490,      27313]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Control Framework for Slung Load Transportation with Two Aerial Vehicles\
\>", "Chapter",
 CellChangeTimes->{3.714924700079821*^9}],

Cell[CellGroupData[{

Cell["Notation", "Title",
 CellChangeTimes->{{3.714905929480489*^9, 3.7149059307716637`*^9}, 
   3.714905996331279*^9}],

Cell[CellGroupData[{

Cell["some useful functions", "Chapter",
 CellChangeTimes->{{3.7119661334484777`*^9, 3.711966138398387*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Orthogonal", " ", "Projection", " ", "Operator"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"OP", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "3", "]"}], "-", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{"x", ",", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Skew", " ", "symmetric", " ", "matrix"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Skew", "[", "\[Omega]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         RowBox[{"\[Omega]", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"\[Omega]", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Omega]", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"\[Omega]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}], 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/eaFwSr+wNeOeTM/7ADROvf/HAHRjNNtj4JoF9Wt
vMlA+viz8/wgmu9Q5dTlQFrOacEcEG1jG3ESRCuEMl4B0ZYPH3muANIdx9iD
QPTkvwfzQXTI399FIHrpbYMWEP1Kjm0aiF5++mzoaiA9/+myBBDNYnE4BUQv
uaeWBqK5djruANHbjt09AaK7TpWfBdFnugvOgejfp3z1rwHpMOlMMG0a/NXu
U8Frx1vz++xBtCMfV+vG7teORb2X+kH03qtWC0H01pqqjSC6rPfSdhCddzp2
F4jOWugy6SaQlmP1BNP89Uv+Ll8O9M8TF8YVQBoA/YSjRA==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Parametrization", " ", "of", " ", "unit", " ", "vector", " ", "with", " ",
     "psi", " ", "and", " ", "theta", " ", "angle"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"uv1", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"e1", " ", "--"}], " ", "first", " ", "canonical", " ", "basis", 
     " ", "vector"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"uv1", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"uv3", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"e3", " ", "--"}], " ", "third", " ", "canonical", " ", "basis",
       " ", "vector"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uv3", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"'", 
     RowBox[{"derivative", "'"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Duv1", "[", 
     RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"uv1", "[", 
          RowBox[{"{", 
           RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "}"}]}], "]"}], 
       ".", "\[Omega]"}], ")"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "\[Rule]", " ", 
       "\[Theta]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Duv3", "[", 
     RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"uv3", "[", 
          RowBox[{"{", 
           RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "}"}]}], "]"}], 
       ".", "\[Omega]"}], ")"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "\[Rule]", " ", 
       "\[Theta]"}], "]"}]}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6986815933639917`*^9, 3.698681596384582*^9}, 
   3.7117788293559713`*^9, {3.711966144487866*^9, 3.711966170867634*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Modeling and Problem Statement", "Title",
 CellChangeTimes->{3.71490593649788*^9}],

Cell[CellGroupData[{

Cell["Some definitions: these are dummy names for state and input", "Chapter",
 CellChangeTimes->{{3.711966108031827*^9, 3.711966113445582*^9}, {
  3.714906024840272*^9, 3.71490603233751*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"kinematic", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "=", 
     RowBox[{"{", 
      RowBox[{"px", ",", "py", ",", "pz"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P1", "=", 
     RowBox[{"{", 
      RowBox[{"p1x", ",", "p1y", ",", "p1z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P2", "=", 
     RowBox[{"{", 
      RowBox[{"p2x", ",", "p2y", ",", "p2z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zk", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"p", ",", "P1", ",", "P2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"dynamic", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", "=", 
     RowBox[{"{", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V1", "=", 
     RowBox[{"{", 
      RowBox[{"v1x", ",", "v1y", ",", "v1z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V2", "=", 
     RowBox[{"{", 
      RowBox[{"v2x", ",", "v2y", ",", "v2z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zd", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"v", ",", "V1", ",", "V2"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"zk", ",", "zd"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"input", " ", "variable"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u1", "=", 
     RowBox[{"{", 
      RowBox[{"u1x", ",", "u1y", ",", "u1z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u2", "=", 
     RowBox[{"{", 
      RowBox[{"u2x", ",", "u2y", ",", "u2z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"u1", ",", "u2"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6982351556835938`*^9, 3.698235272007811*^9}, {
   3.6982364061172447`*^9, 3.6982364062671423`*^9}, {3.698236983523291*^9, 
   3.6982370020195503`*^9}, {3.698296961499886*^9, 3.6982969962004557`*^9}, {
   3.6986792655146837`*^9, 3.698679304839809*^9}, {3.711778637434353*^9, 
   3.711778776754024*^9}, {3.7117790626399317`*^9, 3.711779080100156*^9}, {
   3.711779301401925*^9, 3.711779322842778*^9}, 3.711779526075526*^9, {
   3.711966098339126*^9, 3.711966100362759*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["physical constants", "Chapter",
 CellChangeTimes->{{3.711966181790229*^9, 3.71196619571793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Set", " ", "some", " ", "random", " ", "parameters"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PhysicalConstants", " ", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gravity", "\[Rule]", " ", "9.81"}], ",", "\[IndentingNewLine]", 
      RowBox[{"m", "\[Rule]", " ", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"L1", "\[Rule]", " ", "0.5"}], ",", 
      RowBox[{"L2", "\[Rule]", " ", "0.7"}], ",", "\[IndentingNewLine]", 
      RowBox[{"m1", "\[Rule]", " ", "1.4"}], ",", 
      RowBox[{"m2", "\[Rule]", " ", "2.0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"w1", "\[Rule]", " ", "0.4"}], ",", 
      RowBox[{"w2", "\[Rule]", " ", "0.6"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.698679336027565*^9, 3.698679372727644*^9}, {
  3.698679406840398*^9, 3.698679409140226*^9}, {3.711778833321319*^9, 
  3.711778874854208*^9}, {3.711966203686397*^9, 3.711966204313848*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["choose ration of weights (w1,w2) to be equal to ratio \
of vehicle masses (this is a choice: other choices are possible)", \
"Chapter"]], "Subchapter",
 CellChangeTimes->{{3.711966211119692*^9, 3.711966241607382*^9}, {
  3.714906049326948*^9, 3.7149060650065413`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["this means heavier vehicle will carry more load than \
lighter one", "Section"]], "Subsubsection",
 CellChangeTimes->{{3.7119662444085617`*^9, 3.711966263241006*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  FractionBox["w1", "w2"], "/.", "PhysicalConstants"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["m1", "m2"], "/.", 
  "PhysicalConstants"}], "\[IndentingNewLine]"}], "Input"],

Cell[BoxData["0.6666666666666667`"], "Output",
 CellChangeTimes->{3.711966266991043*^9, 3.711983800529978*^9, 
  3.711989255793949*^9, 3.7119901403435183`*^9, 3.7119939052156687`*^9, 
  3.71199827390203*^9, 3.712029041124114*^9, 3.713188515263769*^9, 
  3.71319361280056*^9, 3.714925291191394*^9, 3.7149294397718*^9}],

Cell[BoxData["0.7`"], "Output",
 CellChangeTimes->{3.711966266991043*^9, 3.711983800529978*^9, 
  3.711989255793949*^9, 3.7119901403435183`*^9, 3.7119939052156687`*^9, 
  3.71199827390203*^9, 3.712029041124114*^9, 3.713188515263769*^9, 
  3.71319361280056*^9, 3.714925291191394*^9, 3.714929439772785*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["state space", "Chapter",
 CellChangeTimes->{{3.711966439171474*^9, 3.711966440463851*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ZSET", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
      "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_", 
      ",", "v2z_"}], "}"}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", ".", "#"}], " ", "-", " ", 
          SuperscriptBox["L1", "2"]}], ")"}], "&"}], ")"}], "[", 
      RowBox[{"P1", "-", "p"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", ".", "#"}], " ", "-", " ", 
          SuperscriptBox["L2", "2"]}], ")"}], "&"}], ")"}], "[", 
      RowBox[{"P2", "-", "p"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", ".", "#2"}], " ", "&"}], ")"}], "[", 
      RowBox[{
       RowBox[{"P1", "-", "p"}], ",", 
       RowBox[{"V1", "-", "v"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", ".", "#2"}], " ", "&"}], ")"}], "[", 
      RowBox[{
       RowBox[{"P2", "-", "p"}], ",", 
       RowBox[{"V2", "-", "v"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["map that generates any point in state space domain ", "Chapter",
 CellChangeTimes->{3.714906085716357*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"zl", "[", "l_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "+", 
       RowBox[{"L1", " ", 
        RowBox[{"uv3", "[", 
         RowBox[{"l", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", "5"}], "]"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"uv3", "[", 
         RowBox[{"l", "[", 
          RowBox[{"[", 
           RowBox[{"6", ";;", "7"}], "]"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{"8", ";;", "10"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", "[", 
        RowBox[{"[", 
         RowBox[{"8", ";;", "10"}], "]"}], "]"}], "+", 
       RowBox[{"L1", " ", 
        RowBox[{"Duv3", "[", 
         RowBox[{
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"4", ";;", "5"}], "]"}], "]"}], ",", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"11", ";;", "12"}], "]"}], "]"}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", "[", 
        RowBox[{"[", 
         RowBox[{"8", ";;", "10"}], "]"}], "]"}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Duv3", "[", 
         RowBox[{
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"6", ";;", "7"}], "]"}], "]"}], ",", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"13", ";;", "14"}], "]"}], "]"}]}], "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"random", " ", "point"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zlR", "[", "]"}], ":=", 
  RowBox[{"zl", "[", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "14"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"zlR", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.697118200248754*^9, 3.697118239535376*^9}, {
  3.697118360659931*^9, 3.697118470468795*^9}, {3.697118689203661*^9, 
  3.6971187966698236`*^9}, {3.6971188307685328`*^9, 3.6971188421873293`*^9}, {
  3.697118878196802*^9, 3.697118974011015*^9}, {3.697119006213297*^9, 
  3.6971190396741123`*^9}, {3.6971390020228662`*^9, 3.697139009318285*^9}, {
  3.697139373346467*^9, 3.697139374878284*^9}, {3.697139414268791*^9, 
  3.697139469001493*^9}, {3.697141223768364*^9, 3.697141227711032*^9}, {
  3.69731249658494*^9, 3.697312510042843*^9}, {3.698679428090479*^9, 
  3.6986794299902067`*^9}, {3.711778874862032*^9, 3.711778961684484*^9}, {
  3.711966422363304*^9, 3.711966425826342*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01914060788550387`", ",", 
   RowBox[{"-", "0.8599276004869734`"}], ",", 
   RowBox[{"-", "0.23632364617388424`"}], ",", "0.24977144698060103`", ",", 
   RowBox[{"-", "0.4768426980076404`"}], ",", 
   RowBox[{"-", "0.012593063662929005`"}], ",", 
   RowBox[{"-", "0.23655754957183062`"}], ",", 
   RowBox[{"-", "1.33220341716701`"}], ",", "0.2126462918532942`", ",", 
   "0.9669996159155083`", ",", 
   RowBox[{"-", "0.5493037635283642`"}], ",", 
   RowBox[{"-", "0.14561433721671868`"}], ",", "1.013972813833851`", ",", 
   RowBox[{"-", "0.3884385330704447`"}], ",", 
   RowBox[{"-", "0.46947935540048424`"}], ",", "1.2478143272049034`", ",", 
   RowBox[{"-", "0.5743146628717233`"}], ",", 
   RowBox[{"-", "0.011993450228305391`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.711983800737281*^9, 3.7119892560278788`*^9, 
  3.7119901403845863`*^9, 3.711993905405161*^9, 3.7119982742302523`*^9, 
  3.712029041366111*^9, 3.713188515426042*^9, 3.713193612949038*^9, 
  3.7149252914175797`*^9, 3.71492943979605*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
verify  that point from previous map does belong to state space\
\>", "Chapter",
 CellChangeTimes->{{3.711966379613562*^9, 3.711966402314432*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"ZSET", "[", 
     RowBox[{"zlR", "[", "]"}], "]"}], "/.", "PhysicalConstants"}], "]"}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.711779017206464*^9, 3.711779045732747*^9}, {
  3.711779088100713*^9, 3.711779094388571*^9}, {3.7119663639776297`*^9, 
  3.711966385957261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711779048412737*^9, {3.711779085748933*^9, 3.711779094939752*^9}, 
   3.711873634960609*^9, 3.711879817628392*^9, 3.711891077828219*^9, 
   3.711938920997715*^9, 3.711955644675379*^9, 3.711965110632265*^9, 
   3.711966428387086*^9, 3.7119838008564167`*^9, 3.711989256119122*^9, 
   3.711990140398962*^9, 3.711993905479188*^9, 3.711998274250538*^9, 
   3.7120290414318647`*^9, 3.7131885155444517`*^9, 3.713193613060227*^9, 
   3.7149252914929247`*^9, 3.7149294398067703`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["tangent set", "Chapter",
 CellChangeTimes->{{3.711966433568219*^9, 3.711966444569922*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]p", "=", 
   RowBox[{"{", 
    RowBox[{"\[Delta]px", ",", "\[Delta]py", ",", "\[Delta]pz"}], "}"}]}], 
  ";", 
  RowBox[{"\[Delta]P1", "=", 
   RowBox[{"{", 
    RowBox[{"\[Delta]p1x", ",", "\[Delta]p1y", ",", "\[Delta]p1z"}], "}"}]}], 
  ";", 
  RowBox[{"\[Delta]P2", "=", 
   RowBox[{"{", 
    RowBox[{"\[Delta]p2x", ",", "\[Delta]p2y", ",", "\[Delta]p2z"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]v", "=", 
   RowBox[{"{", 
    RowBox[{"\[Delta]vx", ",", "\[Delta]vy", ",", "\[Delta]vz"}], "}"}]}], 
  ";", 
  RowBox[{"\[Delta]V1", "=", 
   RowBox[{"{", 
    RowBox[{"\[Delta]v1x", ",", "\[Delta]v1y", ",", "\[Delta]v1z"}], "}"}]}], 
  ";", 
  RowBox[{"\[Delta]V2", "=", 
   RowBox[{"{", 
    RowBox[{"\[Delta]v2x", ",", "\[Delta]v2y", ",", "\[Delta]v2z"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TangentZSET", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[Delta]px_", ",", "\[Delta]py_", ",", "\[Delta]pz_", ",", 
       "\[Delta]p1x_", ",", "\[Delta]p1y_", ",", "\[Delta]p1z_", ",", 
       "\[Delta]p2x_", ",", "\[Delta]p2y_", ",", "\[Delta]p2z_", ",", 
       "\[Delta]vx_", ",", "\[Delta]vy_", ",", "\[Delta]vz_", ",", 
       "\[Delta]v1x_", ",", "\[Delta]v1y_", ",", "\[Delta]v1z_", ",", 
       "\[Delta]v2x_", ",", "\[Delta]v2y_", ",", "\[Delta]v2z_"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", ".", "#2"}], " ", "&"}], ")"}], "[", 
      RowBox[{
       RowBox[{"P1", "-", "p"}], ",", 
       RowBox[{"\[Delta]P1", "-", "\[Delta]p"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", ".", "#2"}], "&"}], ")"}], "[", 
      RowBox[{
       RowBox[{"P2", "-", "p"}], ",", 
       RowBox[{"\[Delta]P2", "-", "\[Delta]p"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#3", ".", "#2"}], "+", 
         RowBox[{"#1", ".", "#4"}]}], " ", "&"}], ")"}], "[", 
      RowBox[{
       RowBox[{"P1", "-", "p"}], ",", 
       RowBox[{"V1", "-", "v"}], ",", 
       RowBox[{"\[Delta]P1", "-", "\[Delta]p"}], ",", 
       RowBox[{"\[Delta]V1", "-", "\[Delta]v"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#3", ".", "#2"}], "+", 
         RowBox[{"#1", ".", "#4"}]}], " ", "&"}], ")"}], "[", 
      RowBox[{
       RowBox[{"P2", "-", "p"}], ",", 
       RowBox[{"V2", "-", "v"}], ",", 
       RowBox[{"\[Delta]P2", "-", "\[Delta]p"}], ",", 
       RowBox[{"\[Delta]V2", "-", "\[Delta]v"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711779107552363*^9, 3.711779178021449*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["vector field", "Chapter",
 CellChangeTimes->{{3.711966456530102*^9, 3.7119664581608887`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cables", "'"}], " ", "unit", " ", "vectors", " ", "and", " ", 
    "agular", " ", "velocities"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"n1", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     FractionBox[
      RowBox[{"P1", "-", "p"}], "L1"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"n2", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     FractionBox[
      RowBox[{"P2", "-", "p"}], "L2"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]1", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Skew", "[", 
       FractionBox[
        RowBox[{"P1", "-", "p"}], "L1"], "]"}], ".", 
      FractionBox[
       RowBox[{"V1", "-", "v"}], "L1"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]2", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Skew", "[", 
       FractionBox[
        RowBox[{"P2", "-", "p"}], "L2"], "]"}], ".", 
      FractionBox[
       RowBox[{"V2", "-", "v"}], "L2"]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "defining", " ", "quatities", " ", "necessary", " ", "for", " ", 
     "computing", " ", "tension", " ", "in", " ", "cables"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MT", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["m", "m1"], ",", 
           FractionBox["m", "m2"]}], "}"}], "]"}], "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "\[Gamma]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Gamma]", ",", "1"}], "}"}]}], "}"}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"n1", "[", "zk", "]"}], ".", 
         RowBox[{"n2", "[", "zk", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
         "u2z_"}], "}"}]}], "]"}], "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"n1", "[", "zk", "]"}], ".", 
         FractionBox[
          RowBox[{"m", " ", "u1"}], "m1"]}], "+", 
        RowBox[{
         FractionBox["m", "L1"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"V1", "-", "v"}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"V1", "-", "v"}], ")"}]}]}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{
         RowBox[{"n2", "[", "zk", "]"}], ".", 
         FractionBox[
          RowBox[{"m", " ", "u2"}], "m2"]}], "+", 
        RowBox[{
         FractionBox["m", "L2"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"V2", "-", "v"}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"V2", "-", "v"}], ")"}]}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MTinv", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         FractionBox[
          RowBox[{"m", " ", 
           RowBox[{"(", 
            RowBox[{"m", " ", "+", " ", "m1", " ", "+", "m2"}], ")"}]}], 
          RowBox[{"m1", " ", "m2"}]], "+", "1", "-", 
         SuperscriptBox["\[Gamma]", "2"]}]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "+", 
            FractionBox["m", "m2"]}], ",", 
           RowBox[{"-", " ", "\[Gamma]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", " ", "\[Gamma]"}], ",", 
           RowBox[{"1", "+", 
            FractionBox["m", "m1"]}]}], "}"}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Gamma]", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"n1", "[", "zk", "]"}], ".", 
         RowBox[{"n2", "[", "zk", "]"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Tensions", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
         "u2z_"}], "}"}]}], "]"}], "=", 
     RowBox[{
      RowBox[{"MTinv", "[", "zk", "]"}], ".", 
      RowBox[{"B", "[", 
       RowBox[{"z", ",", "u"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6659978148396378`*^9, 3.665998080119095*^9}, {
   3.665998110518532*^9, 3.665998278324505*^9}, {3.665998308497686*^9, 
   3.665998465226804*^9}, {3.665998500398714*^9, 3.665998502447439*^9}, {
   3.665998892096929*^9, 3.6659988990562143`*^9}, {3.665999549406136*^9, 
   3.66599960122079*^9}, {3.66599973377428*^9, 3.665999733988308*^9}, {
   3.665999788360186*^9, 3.665999788912984*^9}, {3.665999830649588*^9, 
   3.665999857564962*^9}, {3.66599989632857*^9, 3.665999900149056*^9}, {
   3.6660000690420933`*^9, 3.666000117855301*^9}, {3.666000249282556*^9, 
   3.666000252704515*^9}, {3.666000298978229*^9, 3.666000302578197*^9}, {
   3.666006838870844*^9, 3.66600691210224*^9}, {3.6660070051386957`*^9, 
   3.666007053687189*^9}, {3.66600836473967*^9, 3.666008407645832*^9}, {
   3.666008451292897*^9, 3.666008618550889*^9}, {3.666175412585709*^9, 
   3.666175666415227*^9}, {3.6661757692832212`*^9, 3.666175773467071*^9}, {
   3.666389784038937*^9, 3.666389832368814*^9}, {3.666392786768042*^9, 
   3.6663927923755817`*^9}, {3.666393024327305*^9, 3.666393029947167*^9}, 
   3.666393296955002*^9, {3.666397333518613*^9, 3.666397336735466*^9}, {
   3.666419072009679*^9, 3.666419226443365*^9}, {3.666784766781068*^9, 
   3.6667849526470623`*^9}, {3.66678499921495*^9, 3.6667850000878267`*^9}, {
   3.68261172580247*^9, 3.682611733622216*^9}, {3.683095127347205*^9, 
   3.68309513015282*^9}, {3.697035363578033*^9, 3.697035363610478*^9}, {
   3.69703707332259*^9, 3.697037087708138*^9}, {3.697037584158723*^9, 
   3.697037584194235*^9}, 3.697038043793889*^9, {3.697038078538741*^9, 
   3.697038388683511*^9}, {3.6970384343288*^9, 3.697038646745035*^9}, {
   3.6970572716483717`*^9, 3.6970572832813807`*^9}, {3.69705736812307*^9, 
   3.697057378164277*^9}, {3.6972763613437243`*^9, 3.697276408642572*^9}, {
   3.697277252124852*^9, 3.697277271344371*^9}, {3.711779192092185*^9, 
   3.711779297090941*^9}, {3.711779332431785*^9, 3.711779469735312*^9}, {
   3.711779548040634*^9, 3.711779568972435*^9}, {3.7117796999667053`*^9, 
   3.71177970120487*^9}, {3.711780822858535*^9, 3.711780869559412*^9}, 
   3.7117814256169157`*^9, {3.711966502657323*^9, 3.7119665561500483`*^9}}],

Cell[CellGroupData[{

Cell["accelerations (of load, and uavs)", "Subsection",
 CellChangeTimes->{{3.7119665604684753`*^9, 3.711966573237466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
        "u2z_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "m"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"T1", " ", 
         RowBox[{"n1", "[", "zk", "]"}]}], "+", 
        RowBox[{"T2", " ", 
         RowBox[{"n2", "[", "zk", "]"}]}], "-", " ", 
        RowBox[{"m", " ", "gravity", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ")"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"T1", ",", "T2"}], "}"}], "\[Rule]", " ", 
       RowBox[{"Tensions", "[", 
        RowBox[{"z", ",", "u"}], "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
       "u2z_"}], "}"}]}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "m1"], 
     RowBox[{"(", 
      RowBox[{"u1", "-", 
       RowBox[{"T1", " ", 
        RowBox[{"n1", "[", "zk", "]"}]}], "-", " ", 
       RowBox[{"m1", " ", "gravity", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ")"}]}], "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"T1", ",", "T2"}], "}"}], "\[Rule]", " ", 
      RowBox[{"Tensions", "[", 
       RowBox[{"z", ",", "u"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A2", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
        "u2z_"}], "}"}]}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "m2"], 
      RowBox[{"(", 
       RowBox[{"u2", "-", 
        RowBox[{"T2", " ", 
         RowBox[{"n2", "[", "zk", "]"}]}], "-", " ", 
        RowBox[{"m2", " ", "gravity", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ")"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"T1", ",", "T2"}], "}"}], "\[Rule]", " ", 
       RowBox[{"Tensions", "[", 
        RowBox[{"z", ",", "u"}], "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"complete", " ", "vector", " ", "field"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zk", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
      "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_", 
      ",", "v2z_"}], "}"}], "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{"v", ",", "V1", ",", "V2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zd", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
       "u2z_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"z", ",", "u"}], "]"}], ",", 
      RowBox[{"A1", "[", 
       RowBox[{"z", ",", "u"}], "]"}], ",", 
      RowBox[{"A2", "[", 
       RowBox[{"z", ",", "u"}], "]"}]}], "]"}], "/.", "PhysicalConstants"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Z", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
        "u2z_"}], "}"}]}], "]"}], "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Zk", "[", "z", "]"}], ",", 
      RowBox[{"Zd", "[", 
       RowBox[{"z", ",", "u"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZdFree", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], "]"}], "=", 
    RowBox[{"Zd", "[", 
     RowBox[{"z", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Z", "[", 
  RowBox[{
   RowBox[{"zlR", "[", "]"}], ",", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6972096000612717`*^9, 3.697209819899762*^9}, {
  3.697276702080289*^9, 3.697276704929864*^9}, {3.6986795303783712`*^9, 
  3.698679551755248*^9}, {3.7117788748925667`*^9, 3.7117788749010897`*^9}, {
  3.7117794969360123`*^9, 3.711779513823902*^9}, {3.7117795800778418`*^9, 
  3.711779690953311*^9}, {3.711779734564167*^9, 3.7117797750422993`*^9}, {
  3.711779847909193*^9, 3.711779848310072*^9}, {3.711779878964294*^9, 
  3.71177991124797*^9}, {3.711966475481319*^9, 3.711966488839752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6617008801679609`", ",", 
   RowBox[{"-", "0.85785389661525`"}], ",", "0.4781110966094442`", ",", 
   "0.7573315749944949`", ",", 
   RowBox[{"-", "0.945785697457774`"}], ",", "0.4631579549428492`", ",", 
   "0.41439364633207076`", ",", 
   RowBox[{"-", "1.3501366360708147`"}], ",", "0.8192860468363965`", ",", 
   RowBox[{"-", "0.15378458792876398`"}], ",", 
   RowBox[{"-", "0.19180810415075683`"}], ",", 
   RowBox[{"-", "9.602335905870786`"}], ",", 
   RowBox[{"-", "0.4499639996905301`"}], ",", "0.177241353607234`", ",", 
   RowBox[{"-", "9.501538778801628`"}], ",", 
   RowBox[{"-", "0.389706622723686`"}], ",", 
   RowBox[{"-", "0.2086592580386296`"}], ",", 
   RowBox[{"-", "10.218367387643308`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7117798495229683`*^9, 3.711779908711668*^9}, 
   3.7118736406914167`*^9, 3.711879824063017*^9, 3.711891078065503*^9, 
   3.7119389217101803`*^9, 3.711955644966372*^9, 3.7119651108271933`*^9, {
   3.7119664909741907`*^9, 3.7119664977266493`*^9}, {3.71196655168511*^9, 
   3.711966580445751*^9}, 3.71198380103997*^9, 3.7119892564270906`*^9, 
   3.7119901404713173`*^9, 3.7119939058018103`*^9, 3.7119982745904427`*^9, 
   3.712029041726142*^9, 3.713188515733279*^9, 3.713193613236342*^9, 
   3.714925291738357*^9, 3.714929439900429*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["verify that vector field lives in tangent set", "Chapter",
 CellChangeTimes->{{3.711779914696971*^9, 3.711779925495666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TangentZSET", "[", 
      RowBox[{"z", ",", 
       RowBox[{"Z", "[", 
        RowBox[{"z", ",", "u"}], "]"}]}], "]"}], "/.", "PhysicalConstants"}], 
    "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{"z", "\[Rule]", " ", 
      RowBox[{"zlR", "[", "]"}]}], "]"}]}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"u", "\[Rule]", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.711779927987352*^9, 3.71187364393125*^9, 
  3.7118910782033463`*^9, 3.711938921870906*^9, 3.711955645307613*^9, 
  3.711965110958557*^9, 3.7119665854920387`*^9, 3.711983801147724*^9, 
  3.711989256594906*^9, 3.7119901404928617`*^9, 3.711993906066823*^9, 
  3.711998274672564*^9, 3.712029041872293*^9, 3.7131885158495617`*^9, 
  3.713193613343841*^9, 3.714925291866436*^9, 3.714929439919723*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["verify that Zd = A + B U (input affine)", "Chapter",
 CellChangeTimes->{{3.711966607260228*^9, 3.711966627204533*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"T1U", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ".", 
         RowBox[{"MTinv", "[", "zk", "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], " ", 
        FractionBox["m", "m1"]}], ")"}], 
      RowBox[{"n1", "[", "zk", "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ".", 
         RowBox[{"MTinv", "[", "zk", "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], " ", 
        FractionBox["m", "m2"]}], ")"}], 
      RowBox[{"n2", "[", "zk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T2U", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ".", 
         RowBox[{"MTinv", "[", "zk", "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], " ", 
        FractionBox["m", "m1"]}], ")"}], 
      RowBox[{"n1", "[", "zk", "]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ".", 
         RowBox[{"MTinv", "[", "zk", "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], " ", 
        FractionBox["m", "m2"]}], ")"}], 
      RowBox[{"n2", "[", "zk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BA", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"n1", "[", "zk", "]"}], "m"], ",", 
      RowBox[{"T1U", "[", "zk", "]"}]}], "]"}], "+", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"n2", "[", "zk", "]"}], "m"], ",", 
      RowBox[{"T2U", "[", "zk", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BA1", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "m1"], 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", 
       RowBox[{"0", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", "2"}], "]"}]}], "-", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"n1", "[", "zk", "]"}], "m1"], ",", 
      RowBox[{"T1U", "[", "zk", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BA2", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "m2"], 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"0", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", "2"}], "]"}]}], "-", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"n2", "[", "zk", "]"}], "m2"], ",", 
      RowBox[{"T2U", "[", "zk", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BU", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"BA", "[", "zk", "]"}], ",", 
       RowBox[{"BA1", "[", "zk", "]"}], ",", 
       RowBox[{"BA2", "[", "zk", "]"}]}], "]"}], "/.", 
     "PhysicalConstants"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error", "[", 
   RowBox[{"z_", ",", "u_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Zd", "[", 
    RowBox[{"z", ",", "u"}], "]"}], "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Zd", "[", 
      RowBox[{"z", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"BU", "[", 
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", "u"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"error", "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697035329195168*^9, 3.697035367670477*^9}, {
   3.6970355419965973`*^9, 3.697035569425507*^9}, {3.6970356910125217`*^9, 
   3.697035718704912*^9}, {3.69703576016464*^9, 3.6970357720182247`*^9}, {
   3.697036991460384*^9, 3.6970371544179373`*^9}, 3.697037203362626*^9, {
   3.697037253544096*^9, 3.697037446948592*^9}, {3.6970376309731693`*^9, 
   3.69703766308992*^9}, 3.697037836389969*^9, {3.697037950883712*^9, 
   3.697037975734763*^9}, {3.697038661171624*^9, 3.6970387317890053`*^9}, {
   3.6970405352272243`*^9, 3.697040535930058*^9}, {3.697046873129723*^9, 
   3.697046997330277*^9}, 3.697276675617457*^9, 3.711778874913948*^9, {
   3.7117799506745863`*^9, 3.7117800421202097`*^9}, {3.7119666026482677`*^9, 
   3.71196660300347*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.71196662988302*^9, 3.711983801292816*^9, 
  3.711989274590024*^9, 3.711990140524085*^9, 3.7119939061061707`*^9, 
  3.711998274754472*^9, 3.712029041955798*^9, 3.713188515963038*^9, 
  3.713193613449564*^9, 3.7149252919082203`*^9, 3.714929439952018*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Law Design: Control Strategy", "Title",
 CellChangeTimes->{
  3.714905940658617*^9, {3.714906158959462*^9, 3.7149061604461107`*^9}}],

Cell["see companion pdf", "Chapter",
 CellChangeTimes->{{3.714906137392665*^9, 3.71490614024852*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Law Design: Preliminary Definitions", "Title",
 CellChangeTimes->{
  3.714905940658617*^9, {3.714906158959462*^9, 3.714906166965526*^9}}],

Cell["some necessary definitions", "Chapter",
 CellChangeTimes->{{3.711966656962802*^9, 3.711966664273775*^9}}],

Cell[CellGroupData[{

Cell["\<\
From function f: Zk \[Rule] Some Set, compute its velocity and acceleration \
(along vector field)\
\>", "Chapter",
 CellChangeTimes->{{3.711966718343959*^9, 3.711966763083747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "velocity", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vf", "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", "zk", "]"}], ",", 
           RowBox[{"{", "zk", "}"}]}], "]"}], ".", "zd"}], "]"}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"zk", "\[Rule]", " ", "#1"}], "]"}]}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"zd", "\[Rule]", " ", "#2"}], "]"}]}], "&"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"acceleration", " ", "=", " ", 
     RowBox[{"Af", " ", "+", " ", 
      RowBox[{"Bf", ".", "u"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bf", "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", "zk", "]"}], ",", 
          RowBox[{"{", "zk", "}"}]}], "]"}], "]"}], ".", 
       RowBox[{"BU", "[", "zk", "]"}]}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"zk", "\[Rule]", " ", "#1"}], "]"}]}], "&"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Af", "[", "f_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"f", "[", "zk", "]"}], ",", 
            RowBox[{"{", "zk", "}"}]}], "]"}], ".", 
          RowBox[{"Zd", "[", 
           RowBox[{"z", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
             "}"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"vf", "[", "f", "]"}], "[", 
             RowBox[{"zk", ",", "zd"}], "]"}], ",", 
            RowBox[{"{", "zk", "}"}]}], "]"}], ".", "zd"}]}], "]"}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"zk", ",", "zd"}], "]"}], "\[Rule]", " ", "#1"}], "]"}]}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"z", "\[Rule]", " ", "#1"}], "]"}]}], "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7119673362986917`*^9, 3.711967371049327*^9}, {
   3.711967409839477*^9, 3.711967471413291*^9}, {3.71196750370894*^9, 
   3.7119676485000973`*^9}, 3.7119677176279163`*^9, {3.711967757268833*^9, 
   3.711967788850758*^9}, {3.714906219536234*^9, 3.714906224546277*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "unit vector, its angular velocity, and its angular acceleration from p, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["p", "."], " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["p", ".."], TraditionalForm]]]
}], "Chapter",
 CellChangeTimes->{{3.7119666705396433`*^9, 3.711966704321052*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"npva", "[", "p_", "]"}], ":=", 
  FractionBox["p", 
   SqrtBox[
    RowBox[{"p", ".", "p"}]]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]pva", "[", 
   RowBox[{"p_", ",", "v_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Skew", "[", 
    FractionBox["p", 
     SqrtBox[
      RowBox[{"p", ".", "p"}]]], "]"}], ".", 
   FractionBox["v", 
    SqrtBox[
     RowBox[{"p", ".", "p"}]]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]pva", "[", 
   RowBox[{"p_", ",", "v_", ",", "a_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Skew", "[", 
    FractionBox["p", 
     SqrtBox[
      RowBox[{"p", ".", "p"}]]], "]"}], ".", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["a", 
      SqrtBox[
       RowBox[{"p", ".", "p"}]]], "-", 
     RowBox[{"2", 
      FractionBox["1", 
       SuperscriptBox[
        RowBox[{"(", 
         SqrtBox[
          RowBox[{"p", ".", "p"}]], ")"}], "3"]], 
      RowBox[{"(", 
       RowBox[{"v", ".", "p"}], ")"}], "v"}]}], " ", ")"}]}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Unit vector from function f (and its angular velocity and acceleration)\
\>", "Chapter",
 CellChangeTimes->{{3.714906240376276*^9, 3.7149062587119417`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nf", "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"npva", "[", 
     RowBox[{"f", "[", "zk", "]"}], "]"}], "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{"zk", "\[Rule]", " ", "#1"}], "]"}]}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]f", "[", "f_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]pva", " ", "[", 
       RowBox[{
        RowBox[{"f", "[", "zk", "]"}], ",", 
        RowBox[{
         RowBox[{"vf", "[", "f", "]"}], "[", 
         RowBox[{"zk", ",", "zd"}], "]"}]}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"zk", "\[Rule]", " ", "#1"}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"zd", "\[Rule]", " ", "#2"}], "]"}]}], "&"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Tau]f", "[", "f_", "]"}], ":=", 
    RowBox[{"\[Tau]pva", "[", 
     RowBox[{
      RowBox[{"f", "[", "zk", "]"}], ",", 
      RowBox[{
       RowBox[{"vf", "[", "f", "]"}], "[", 
       RowBox[{"zk", ",", "zd"}], "]"}], ",", 
      RowBox[{"*", "acceleration", "*"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B\[Tau]f", "[", "f_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Skew", "[", 
      FractionBox[
       RowBox[{"f", "[", "zk", "]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "zk", "]"}], ".", 
         RowBox[{"f", "[", "zk", "]"}]}]]], "]"}], ".", 
     FractionBox[
      RowBox[{
       RowBox[{"Bf", "[", "f", "]"}], "[", "zk", "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{"f", "[", "zk", "]"}], ".", 
        RowBox[{"f", "[", "zk", "]"}]}]]]}], "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{"zk", "\[Rule]", " ", "#1"}], "]"}]}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A\[Tau]f", "[", "f_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Tau]pva", "[", 
      RowBox[{
       RowBox[{"f", "[", "zk", "]"}], ",", 
       RowBox[{
        RowBox[{"vf", "[", "f", "]"}], "[", 
        RowBox[{"zk", ",", "zd"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Af", "[", "f", "]"}], "[", "z", "]"}]}], "]"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"zk", ",", "zd"}], "]"}], "\[Rule]", " ", "#1"}], "]"}]}], "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{"z", "\[Rule]", " ", "#1"}], "]"}]}], "&"}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions that we wish to control", "Chapter",
 CellChangeTimes->{{3.711967883367238*^9, 3.711967894197637*^9}}],

Cell[CellGroupData[{

Cell["Function NT (vector that will be thrust vector)", "Subsection",
 CellChangeTimes->{{3.711967897789014*^9, 3.711967928746531*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Omega]T", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Omega]f", "[", "NT", "]"}], "[", 
     RowBox[{
      RowBox[{"zk", "[", "x", "]"}], ",", 
      RowBox[{"xd", "[", "x", "]"}]}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NT", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"w1", " ", 
        RowBox[{"n1", "[", "zk", "]"}]}], "+", 
       RowBox[{"w2", " ", 
        RowBox[{"n2", "[", "zk", "]"}]}]}], "/.", "PhysicalConstants"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"nT", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     RowBox[{"npva", "[", 
      RowBox[{"NT", "[", "zk", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]T", "[", 
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]pva", "[", "NT", "]"}], "[", 
        RowBox[{"zk", ",", "zd"}], "]"}], "/.", "PhysicalConstants"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]T", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "vx_", ",", "vy_", ",", "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", 
         ",", "v2x_", ",", "v2y_", ",", "v2z_"}], "}"}]}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w1", " ", 
           FractionBox[
            RowBox[{"V1", "-", "v"}], "L1"]}], "+", 
          RowBox[{"w2", " ", 
           FractionBox[
            RowBox[{"V2", "-", "v"}], "L2"]}]}], ")"}]}], 
       FractionBox["1", 
        SqrtBox[
         RowBox[{
          RowBox[{"NT", "[", "zk", "]"}], ".", 
          RowBox[{"NT", "[", "zk", "]"}]}]]]}], "/.", "PhysicalConstants"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"B\[Tau]NT", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{"B\[Tau]f", "[", "NT", "]"}], "[", "zk", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A\[Tau]NT", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], "]"}], "=", 
     RowBox[{
      RowBox[{"A\[Tau]f", "[", "NT", "]"}], "[", "z", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Omega]T", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], "&"}], "[", 
     RowBox[{"zlR", "[", "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"B\[Tau]NT", "[", 
     RowBox[{
      RowBox[{"zlR", "[", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"A\[Tau]NT", "[", 
     RowBox[{"zlR", "[", "]"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.711967173925083*^9, 3.711967304622897*^9}, {
  3.711967793536393*^9, 3.711967869816831*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function \[Theta] (angle between cables)", "Subsection",
 CellChangeTimes->{{3.7119679105573273`*^9, 3.711967916832789*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"ArcCos", "[", 
     RowBox[{
      RowBox[{"n1", "[", "zk", "]"}], ".", 
      RowBox[{"n2", "[", "zk", "]"}]}], "]"}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]\[Theta]", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "vx_", ",", "vy_", ",", "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", 
       ",", "v2x_", ",", "v2y_", ",", "v2z_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"vf", "[", "\[Theta]", "]"}], "[", 
    RowBox[{"zk", ",", "zd"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B\[Theta]", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Bf", "[", "\[Theta]", "]"}], "[", "zk", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A\[Theta]", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Af", "[", "\[Theta]", "]"}], "[", "z", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]\[Theta]", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], "&"}], "[", 
    RowBox[{"zlR", "[", "]"}], "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"B\[Theta]", "[", 
    RowBox[{
     RowBox[{"zlR", "[", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"A\[Theta]", "[", 
    RowBox[{"zlR", "[", "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711781109114814*^9, 3.711781216368578*^9}, {
  3.711967940877626*^9, 3.711967989761901*^9}, {3.711968032675338*^9, 
  3.7119681041905003`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function \[Psi] (\[OpenCurlyQuote]yaw angle\[CloseCurlyQuote])", \
"Subsection",
 CellChangeTimes->{{3.711968114099205*^9, 3.711968122922401*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NH", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"OP", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n1", "[", "zk", "]"}], "-", 
       RowBox[{"n2", "[", "zk", "]"}]}], ")"}]}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nH", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
    RowBox[{"npva", "[", 
     FractionBox[
      RowBox[{"NH", "[", "zk", "]"}], 
      SqrtBox[
       RowBox[{
        RowBox[{"NH", "[", "zk", "]"}], ".", 
        RowBox[{"NH", "[", "zk", "]"}]}]]], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"''", 
    RowBox[{"Alternative", "''"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
        RowBox[{"nH", "[", "zk", "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
        RowBox[{"nH", "[", "zk", "]"}]}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
          RowBox[{"nH", "[", "zk", "]"}]}], ")"}], "2"], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
          RowBox[{"nH", "[", "zk", "]"}]}], ")"}], "2"]}], ",", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", "zk", "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", "zk", "]"}]}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]\[Psi]", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "vx_", ",", "vy_", ",", "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", 
       ",", "v2x_", ",", "v2y_", ",", "v2z_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"vf", "[", "\[Psi]", "]"}], "[", 
    RowBox[{"zk", ",", "zd"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B\[Psi]", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Bf", "[", "\[Psi]", "]"}], "[", "zk", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A\[Psi]", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Af", "[", "\[Psi]", "]"}], "[", "z", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]\[Psi]", "[", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], "&"}], "[", 
  RowBox[{"zlR", "[", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"B\[Psi]", "[", 
  RowBox[{
   RowBox[{"zlR", "[", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"A\[Psi]", "[", 
  RowBox[{"zlR", "[", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.71178132381153*^9, 3.711781349976692*^9}, {
  3.711781425658683*^9, 3.711781425677086*^9}, {3.711783751504015*^9, 
  3.711783752318331*^9}, {3.711938927016626*^9, 3.711938939751417*^9}, {
  3.711939046347858*^9, 3.7119390466157*^9}, {3.7119681311969337`*^9, 
  3.711968225109346*^9}, {3.71199391552153*^9, 3.711993941535019*^9}, {
  3.711996000827752*^9, 3.711996043313231*^9}}],

Cell[BoxData["0.5947047029925976`"], "Output",
 CellChangeTimes->{{3.711781317765965*^9, 3.711781351635564*^9}, 
   3.711783219693355*^9, 3.71178375416713*^9, 3.7117950917664843`*^9, 
   3.711873664192713*^9, 3.711879839185663*^9, 3.711891079854114*^9, 
   3.711938943414215*^9, 3.711939047607422*^9, 3.711955647133806*^9, 
   3.711965111929241*^9, 3.711968222317621*^9, 3.711983809511484*^9, 
   3.711989275568902*^9, 3.711990141147923*^9, 3.7119939472459707`*^9, 
   3.7119960500335608`*^9, 3.711998277654458*^9, 3.712029044766691*^9, 
   3.713188520512933*^9, 3.7131936179409447`*^9, 3.714925310084799*^9, 
   3.714929442521598*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1703874270571093`", ",", "0.38465777635691223`", ",", 
   "0.015872461466989327`", ",", 
   RowBox[{"-", "0.5829449120420258`"}], ",", 
   RowBox[{"-", "0.20000272507549355`"}], ",", 
   RowBox[{"-", "0.0010187141204054135`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.711781317765965*^9, 3.711781351635564*^9}, 
   3.711783219693355*^9, 3.71178375416713*^9, 3.7117950917664843`*^9, 
   3.711873664192713*^9, 3.711879839185663*^9, 3.711891079854114*^9, 
   3.711938943414215*^9, 3.711939047607422*^9, 3.711955647133806*^9, 
   3.711965111929241*^9, 3.711968222317621*^9, 3.711983809511484*^9, 
   3.711989275568902*^9, 3.711990141147923*^9, 3.7119939472459707`*^9, 
   3.7119960500335608`*^9, 3.711998277654458*^9, 3.712029044766691*^9, 
   3.713188520512933*^9, 3.7131936179409447`*^9, 3.714925310084799*^9, 
   3.714929442549864*^9}],

Cell[BoxData[
 RowBox[{"-", "0.5098017082667389`"}]], "Output",
 CellChangeTimes->{{3.711781317765965*^9, 3.711781351635564*^9}, 
   3.711783219693355*^9, 3.71178375416713*^9, 3.7117950917664843`*^9, 
   3.711873664192713*^9, 3.711879839185663*^9, 3.711891079854114*^9, 
   3.711938943414215*^9, 3.711939047607422*^9, 3.711955647133806*^9, 
   3.711965111929241*^9, 3.711968222317621*^9, 3.711983809511484*^9, 
   3.711989275568902*^9, 3.711990141147923*^9, 3.7119939472459707`*^9, 
   3.7119960500335608`*^9, 3.711998277654458*^9, 3.712029044766691*^9, 
   3.713188520512933*^9, 3.7131936179409447`*^9, 3.714925310084799*^9, 
   3.714929442703197*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
some small test (check \[OpenCurlyQuote]\[CloseCurlyQuote]derivative\
\[CloseCurlyQuote]\[CloseCurlyQuote] functions are well computed)\
\>", "Subsection",
 CellChangeTimes->{{3.711968240566286*^9, 3.7119682441194363`*^9}, {
  3.711968297242362*^9, 3.711968310032536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "[", 
   RowBox[{"zz_", ",", "u_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "zk", "]"}], ",", 
        RowBox[{"{", "zk", "}"}]}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"z", "\[Rule]", " ", "zz"}], "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Z", "[", 
       RowBox[{"zz", ",", "u"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "9"}], "]"}], "]"}], ")"}]}], " ", "-", 
   RowBox[{"(", 
    RowBox[{"\[Omega]\[Psi]", "[", 
     RowBox[{
      RowBox[{"zz", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
      RowBox[{"zz", "[", 
       RowBox[{"[", 
        RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"test", "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test", "[", 
   RowBox[{"zz_", ",", "u_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Omega]\[Psi]", "[", 
         RowBox[{"zk", ",", "zd"}], "]"}], ",", 
        RowBox[{"{", "z", "}"}]}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{"z", "\[Rule]", " ", "zz"}], "]"}]}], ")"}], ".", 
    RowBox[{"Z", "[", 
     RowBox[{"zz", ",", "u"}], "]"}]}], " ", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"B\[Psi]", "[", 
       RowBox[{"zz", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", "u"}], " ", "+", 
     " ", 
     RowBox[{"A\[Psi]", "[", "zz", "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"test", "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.711783396530813*^9, 3.711783546461377*^9}, {
  3.711783651803997*^9, 3.711783691313257*^9}, {3.711783722205126*^9, 
  3.711783761097125*^9}, {3.711968260310491*^9, 3.7119682918774776`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.711783506955874*^9, 3.711783518138844*^9}, {
   3.711783548288363*^9, 3.7117835564773083`*^9}, {3.711783697632316*^9, 
   3.7117837012886553`*^9}, {3.711783732457843*^9, 3.711783756890703*^9}, 
   3.7117950939183826`*^9, 3.711879842128853*^9, 3.7118910803769608`*^9, 
   3.711938949577385*^9, 3.711939052844206*^9, 3.711955647642579*^9, 
   3.711965112329311*^9, {3.71196825399806*^9, 3.7119682934450407`*^9}, 
   3.711983809936428*^9, 3.7119892756730003`*^9, 3.711990141202097*^9, 
   3.711993954230438*^9, 3.711996054002593*^9, 3.711998277980904*^9, 
   3.712029045061749*^9, 3.7131885210766573`*^9, 3.7131936184154882`*^9, 
   3.7149253104547653`*^9, 3.714929442758491*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.711783506955874*^9, 3.711783518138844*^9}, {
   3.711783548288363*^9, 3.7117835564773083`*^9}, {3.711783697632316*^9, 
   3.7117837012886553`*^9}, {3.711783732457843*^9, 3.711783756890703*^9}, 
   3.7117950939183826`*^9, 3.711879842128853*^9, 3.7118910803769608`*^9, 
   3.711938949577385*^9, 3.711939052844206*^9, 3.711955647642579*^9, 
   3.711965112329311*^9, {3.71196825399806*^9, 3.7119682934450407`*^9}, 
   3.711983809936428*^9, 3.7119892756730003`*^9, 3.711990141202097*^9, 
   3.711993954230438*^9, 3.711996054002593*^9, 3.711998277980904*^9, 
   3.712029045061749*^9, 3.7131885210766573`*^9, 3.7131936184154882`*^9, 
   3.7149253104547653`*^9, 3.714929443849781*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Law Design: Input Transformation", "Title",
 CellChangeTimes->{3.714905953843164*^9, 3.714906329370915*^9}],

Cell[CellGroupData[{

Cell["Matrix A and B of function R we wish to control", "Chapter",
 CellChangeTimes->{{3.7119683232978983`*^9, 3.711968338530241*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RB", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox["1", "m"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ",", 
            RowBox[{"T1U", "[", "zk", "]"}]}], "]"}], "+", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"n2", "[", "zk", "]"}], ",", 
            RowBox[{"T2U", "[", "zk", "]"}]}], "]"}]}], ")"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"control", " ", "thrust", " ", "of", " ", "load"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "control", " ", "torque", " ", "of", " ", "thrust", " ", "vector"}], 
         ",", " ", 
         RowBox[{"i", ".", "e"}], ",", " ", 
         RowBox[{"of", " ", "nT"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"B\[Theta]", "[", "zk", "]"}], ",", 
         RowBox[{"B\[Psi]", "[", "zk", "]"}]}], "}"}]}], 
      RowBox[{"(*", 
       RowBox[{"control", " ", "\[Theta]", " ", "and", " ", "\[Psi]"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"RB", "[", 
      RowBox[{
       RowBox[{"zlR", "[", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], "//", 
    "MatrixForm"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PseudoInverse", "[", 
     RowBox[{"N", "[", 
      RowBox[{"RB", "[", 
       RowBox[{
        RowBox[{"zlR", "[", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", "]"}], "]"}], "//",
     "MatrixForm"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711968607801005*^9, 3.711968635080481*^9}, {
  3.71196868852179*^9, 3.711968785393812*^9}, {3.714925359078827*^9, 
  3.7149253649984617`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RA", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
      "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_", 
      ",", "v2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "m"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], "T10"}], "+", 
          RowBox[{
           RowBox[{"n2", "[", "zk", "]"}], "T20"}]}], ")"}]}], ",", 
       RowBox[{"A\[Tau]NT", "[", "z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"A\[Theta]", "[", "z", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"A\[Psi]", "[", "z", "]"}], "}"}]}], "]"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"T10", ",", "T20"}], "}"}], "\[Rule]", " ", 
       RowBox[{"Tensions", "[", 
        RowBox[{"z", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
          "}"}]}], "]"}]}], "]"}]}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"RA", "[", 
      RowBox[{"zlR", "[", "]"}], "]"}], " ", "]"}], "//", "MatrixForm"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711781472763953*^9, 3.711781539236969*^9}, {
  3.711781592381752*^9, 3.7117816100769653`*^9}, {3.711783767025758*^9, 
  3.711783768274314*^9}, {3.7119683417625723`*^9, 3.711968376269202*^9}, {
  3.711968514686406*^9, 3.7119685281619377`*^9}, {3.711968790065013*^9, 
  3.711968800262816*^9}, {3.711968933796599*^9, 3.711969031777261*^9}, {
  3.7149253734152193`*^9, 3.71492537721486*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input transformation", "Chapter",
 CellChangeTimes->{{3.711968822271009*^9, 3.711968827129314*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ubar", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"PseudoInverse", "[", 
      RowBox[{"RB", "[", 
       RowBox[{"{", 
        RowBox[{
        "px", ",", "py", ",", "pz", ",", "p1x", ",", "p1y", ",", "p1z", ",", 
         "p2x", ",", "p2y", ",", "p2z"}], "}"}], "]"}], "]"}], ".", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", " ", 
        RowBox[{
         RowBox[{"T", " ", 
          RowBox[{"nT", "[", 
           RowBox[{"{", 
            RowBox[{
            "px", ",", "py", ",", "pz", ",", "p1x", ",", "p1y", ",", "p1z", 
             ",", "p2x", ",", "p2y", ",", "p2z"}], "}"}], "]"}]}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], 
       " ", "-", "\[IndentingNewLine]", 
       RowBox[{"RA", "[", 
        RowBox[{"{", 
         RowBox[{
         "px", ",", "py", ",", "pz", ",", "p1x", ",", "p1y", ",", "p1z", ",", 
          "p2x", ",", "p2y", ",", "p2z", ",", "vx", ",", "vy", ",", "vz", ",",
           "v1x", ",", "v1y", ",", "v1z", ",", "v2x", ",", "v2y", ",", 
          "v2z"}], "}"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"ubar", "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "6"}], "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.711968829775531*^9, 3.7119689221316223`*^9}, {
   3.711971541887062*^9, 3.711971548816339*^9}, {3.711984428704134*^9, 
   3.711984438814945*^9}, 3.714925389767932*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.14`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10.544438520063771`"}], ",", "11.91491357525564`", ",", 
     RowBox[{"-", "0.47360167970452904`"}], ",", 
     RowBox[{"-", "15.28404450312619`"}], ",", "7.678591455257706`", ",", 
     "4.237224632474861`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7119838109198112`*^9, 3.711984439153949*^9, 
  3.711989276421693*^9, 3.711990141712699*^9, 3.711993960631797*^9, 
  3.7119960611411343`*^9, 3.711998280879026*^9, 3.712029047545308*^9, 
  3.713193622480879*^9, 3.7149253190094833`*^9, 3.714925400748345*^9, 
  3.714929445078721*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check that input transformation is indeed well defined in domain defined in \
article\
\>", "Chapter",
 CellChangeTimes->{{3.7118045400827713`*^9, 3.7118045414765787`*^9}, {
  3.711971024754444*^9, 3.711971041629016*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"uv", "=", 
    RowBox[{
     FractionBox["#", 
      SqrtBox[
       RowBox[{"#", ".", "#"}]]], "&"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ubar1st", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", "T_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"u1x", " ", 
         RowBox[{"n1", "[", "zk", "]"}]}], ",", 
        RowBox[{"u2x", " ", 
         RowBox[{"n2", "[", "zk", "]"}]}]}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u1x", ",", "u2x"}], "}"}], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            FractionBox["m1", "m"], ",", 
            FractionBox["m2", "m"]}], "}"}], "]"}], ".", 
         RowBox[{"MT", "[", "zk", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"m", " ", "T"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"NT", "[", "zk", "]"}], ".", 
               RowBox[{"NT", "[", "zk", "]"}]}]]], 
            RowBox[{"{", " ", 
             RowBox[{"w1", " ", ",", "w2"}], "}"}]}], "-", 
           RowBox[{"Tensions", "[", 
            RowBox[{"z", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
               "}"}]}], "]"}]}], ")"}]}]}], "]"}]}], "/.", 
     "PhysicalConstants"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ubar2nd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
        "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ubar1st", "[", 
        RowBox[{"z", ",", "T"}], "]"}], "+", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"L1", " ", "m1"}], "w1"], 
            RowBox[{"(", 
             RowBox[{"\[Tau]\[Psi]", "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"NT", "[", "zk", "]"}], ".", 
                 RowBox[{"NT", "[", "zk", "]"}]}]], 
               FractionBox["1", "2"], 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                  "\[Tau]\[Tau]z"}], "}"}], ".", 
                RowBox[{"uv", "[", 
                 RowBox[{
                  RowBox[{"OP", "[", 
                   RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                  RowBox[{"n1", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
            RowBox[{"uv", "[", 
             RowBox[{
              RowBox[{"Skew", "[", 
               RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"L1", " ", "m1"}], "w1"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{
                 RowBox[{"n1", "[", "zk", "]"}], ".", 
                 RowBox[{"nT", "[", "zk", "]"}]}]], "\[Tau]\[Theta]"}], "+", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"NT", "[", "zk", "]"}], ".", 
                 RowBox[{"NT", "[", "zk", "]"}]}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"w1", " ", "+", "w2"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", " ", 
                   RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}]}]], 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                  "\[Tau]\[Tau]z"}], "}"}], ".", 
                RowBox[{"uv", "[", 
                 RowBox[{
                  RowBox[{"Skew", "[", 
                   RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                  RowBox[{"n1", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
            RowBox[{"uv", "[", 
             RowBox[{
              RowBox[{"OP", "[", 
               RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}]}], ")"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"], 
            RowBox[{"(", 
             RowBox[{"\[Tau]\[Psi]", "+", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"NT", "[", "zk", "]"}], ".", 
                 RowBox[{"NT", "[", "zk", "]"}]}]], 
               FractionBox["1", "2"], 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                  "\[Tau]\[Tau]z"}], "}"}], ".", 
                RowBox[{"uv", "[", 
                 RowBox[{
                  RowBox[{"OP", "[", 
                   RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                  RowBox[{"n2", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
            RowBox[{"uv", "[", 
             RowBox[{
              RowBox[{"Skew", "[", 
               RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{" ", 
                 RowBox[{
                  RowBox[{"n2", "[", "zk", "]"}], ".", 
                  RowBox[{"nT", "[", "zk", "]"}]}]}]], "\[Tau]\[Theta]"}], 
              "+", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"NT", "[", "zk", "]"}], ".", 
                 RowBox[{"NT", "[", "zk", "]"}]}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"w1", " ", "+", "w2"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", " ", 
                   RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}]}]], 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                  "\[Tau]\[Tau]z"}], "}"}], ".", 
                RowBox[{"uv", "[", 
                 RowBox[{
                  RowBox[{"Skew", "[", 
                   RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                  RowBox[{"n2", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
            RowBox[{"uv", "[", 
             RowBox[{
              RowBox[{"OP", "[", 
               RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}]}], ")"}]}], 
        "\[IndentingNewLine]", "]"}]}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", "\[Tau]\[Tau]z"}], "}"}],
         "\[Rule]", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A\[Tau]NT", "[", "z", "]"}], "+", 
           RowBox[{
            RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
            RowBox[{"ubar1st", "[", 
             RowBox[{"z", ",", "T"}], "]"}]}]}], ")"}]}]}], " ", "]"}]}], "/.",
      "PhysicalConstants"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ubar3rd", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
        "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ubar2nd", "[", 
       RowBox[{"z", ",", 
        RowBox[{"{", 
         RowBox[{
         "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
          "\[Tau]\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Tau]\[Tau]\[Theta]", "\[Rule]", " ", 
        RowBox[{
         FractionBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["w2", "2"], " ", "+", " ", 
              RowBox[{"w1", " ", "w2", " ", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["w1", "2"], " ", "+", 
              RowBox[{"w1", " ", "w2", " ", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            SqrtBox[
             RowBox[{
              RowBox[{"NT", "[", "zk", "]"}], ".", 
              RowBox[{"NT", "[", "zk", "]"}]}]], ")"}], "3"]], 
         RowBox[{"(", 
          RowBox[{"\[Tau]\[Theta]", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A\[Theta]", "[", "z", "]"}], "+", 
             RowBox[{
              RowBox[{"B\[Theta]", "[", "zk", "]"}], ".", 
              RowBox[{"ubar2nd", "[", 
               RowBox[{"z", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                  "0", ",", "0"}], "}"}]}], "]"}]}]}], ")"}]}], ")"}]}]}], 
       "}"}]}], "/.", "PhysicalConstants"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ubar4th", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ubar3rd", "[", 
      RowBox[{"z", ",", 
       RowBox[{"{", 
        RowBox[{
        "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
         "\[Tau]\[Theta]", ",", "\[Tau]\[Tau]\[Psi]"}], "}"}]}], "]"}], "/.", 
     
     RowBox[{"{", 
      RowBox[{"\[Tau]\[Tau]\[Psi]", "\[Rule]", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"NH", "[", "zk", "]"}], ".", 
           RowBox[{"NH", "[", "zk", "]"}]}], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n1", "[", "zk", "]"}], ".", 
               RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "w1"], "+", 
            FractionBox["1", "w2"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
             RowBox[{"n1", "[", "zk", "]"}]}], "+", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}], "-", "1"}], ")"}]}]], 
        RowBox[{"(", 
         RowBox[{"\[Tau]\[Psi]", "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A\[Psi]", "[", "z", "]"}], "+", 
            RowBox[{
             RowBox[{"B\[Psi]", "[", "zk", "]"}], ".", 
             RowBox[{"Evaluate", "[", 
              RowBox[{"ubar3rd", "[", 
               RowBox[{"z", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                  "\[Tau]\[Theta]", ",", "0"}], "}"}]}], "]"}], "]"}]}]}], 
           ")"}]}], ")"}]}]}], "}"}]}], "/.", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7118048390660143`*^9, 3.711805044193699*^9}, {
   3.7118050836058073`*^9, 3.711805430597001*^9}, {3.711805473304573*^9, 
   3.7118055087986593`*^9}, 3.711805570557929*^9, {3.7118056108152847`*^9, 
   3.711805647619978*^9}, {3.7118056847977343`*^9, 3.711805690748075*^9}, {
   3.711805800919306*^9, 3.711805921537384*^9}, {3.711805978157845*^9, 
   3.711806042360783*^9}, {3.711806107143134*^9, 3.711806196148889*^9}, {
   3.711806238193321*^9, 3.711806267701227*^9}, {3.711873772660742*^9, 
   3.711873773183494*^9}, {3.711948570346878*^9, 3.711948614686689*^9}, {
   3.711948668395649*^9, 3.7119487235614147`*^9}, {3.7119490595721083`*^9, 
   3.71194908862673*^9}, {3.711949197271714*^9, 3.711949198112138*^9}, {
   3.7119492462976723`*^9, 3.71194925046871*^9}, {3.7119625051672688`*^9, 
   3.711962551942185*^9}, {3.71196261644217*^9, 3.7119626332861977`*^9}, 
   3.711962823419126*^9, 3.711962865237438*^9, {3.711963455146636*^9, 
   3.7119634846812143`*^9}, 3.711963539003995*^9, {3.711963642502555*^9, 
   3.711963644726886*^9}, {3.711963941517096*^9, 3.711963977261339*^9}, {
   3.711964084020718*^9, 3.711964101593985*^9}, {3.7119656786150637`*^9, 
   3.7119657199026833`*^9}, {3.7119660252732563`*^9, 3.711966048066778*^9}, {
   3.711971072568322*^9, 3.711971173279669*^9}, {3.71197183000321*^9, 
   3.7119718347808*^9}, 3.711997521302409*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"zrandom", "=", 
    RowBox[{"zlR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"test", "[", 
      RowBox[{"{", 
       RowBox[{
       "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
        "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"m", " ", "T", " ", 
            RowBox[{"nT", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], " ", ",", 
           RowBox[{
            RowBox[{"OP", "[", 
             RowBox[{"nT", "[", 
              RowBox[{"#1", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], 
         "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"RA", "[", "#1", "]"}], "+", 
           RowBox[{
            RowBox[{"RB", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"ubar1st", "[", 
             RowBox[{"#1", ",", "T"}], "]"}]}]}], ")"}]}], " ", "&"}], "[", 
       "zrandom", "]"}], "/.", "PhysicalConstants"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"test", "[", 
      RowBox[{"{", 
       RowBox[{
       "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
        "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"m", " ", "T", " ", 
            RowBox[{"nT", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], " ", ",", 
           RowBox[{
            RowBox[{"OP", "[", 
             RowBox[{"nT", "[", 
              RowBox[{"#1", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], 
         "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"RA", "[", "#1", "]"}], "+", 
           RowBox[{
            RowBox[{"RB", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"ubar2nd", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{
               "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                "\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}]}]}], 
          ")"}]}], " ", "&"}], "[", "zrandom", "]"}], "/.", 
      "PhysicalConstants"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"test", "[", 
      RowBox[{"{", 
       RowBox[{
       "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
        "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"m", " ", "T", " ", 
            RowBox[{"nT", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], " ", ",", 
           RowBox[{
            RowBox[{"OP", "[", 
             RowBox[{"nT", "[", 
              RowBox[{"#1", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], 
         "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"RA", "[", "#1", "]"}], "+", 
           RowBox[{
            RowBox[{"RB", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
            RowBox[{"ubar3rd", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{
               "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                "\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}]}]}], 
          ")"}]}], " ", "&"}], "[", "zrandom", "]"}], "/.", 
      "PhysicalConstants"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"test", "[", 
    RowBox[{"{", 
     RowBox[{
     "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
      "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", " ", 
        RowBox[{
         RowBox[{"T", " ", 
          RowBox[{"nT", "[", 
           RowBox[{"#1", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], " ", ",", 
         RowBox[{
          RowBox[{"OP", "[", 
           RowBox[{"nT", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}]}], ",", 
         
         RowBox[{"{", 
          RowBox[{"\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], 
       "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"RA", "[", "#1", "]"}], "+", 
         RowBox[{
          RowBox[{"RB", "[", 
           RowBox[{"#1", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
          RowBox[{"ubar4th", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"{", 
             RowBox[{
             "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
              "\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}]}]}], 
        ")"}]}], " ", "&"}], "[", "zrandom", "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{"test", "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}], "]"}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.711965759525971*^9, 3.711965761459765*^9}, {
   3.711971061532208*^9, 3.711971061999174*^9}, {3.7119711844397917`*^9, 
   3.7119711980965548`*^9}, {3.7119712352906857`*^9, 3.71197133926994*^9}, {
   3.711971395972948*^9, 3.711971397766068*^9}, {3.711971484585765*^9, 
   3.7119715026006413`*^9}, {3.711971622289331*^9, 3.7119718174173727`*^9}, {
   3.711971850853752*^9, 3.71197189235949*^9}, 3.711971927399454*^9, {
   3.71198450156561*^9, 3.711984514237009*^9}, 3.7149254308806267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.46`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.711965370579034*^9, 3.711965426371841*^9, {3.711965756802289*^9, 
   3.711965767083583*^9}, 3.711965975431487*^9, {3.711971307888612*^9, 
   3.711971321132165*^9}, 3.711971358148279*^9, 3.711971398422391*^9, {
   3.7119714784533978`*^9, 3.711971503329143*^9}, 3.711971642418181*^9, {
   3.7119716780980473`*^9, 3.711971745622555*^9}, {3.711971778342884*^9, 
   3.7119718241160307`*^9}, {3.711971889440434*^9, 3.7119718987057457`*^9}, {
   3.711984505405382*^9, 3.711984521610509*^9}, 3.711989296908802*^9, 
   3.7119901628376303`*^9, 3.711998304921546*^9, 3.712029070986013*^9, 
   3.7131936689173737`*^9, 3.714925343563064*^9, {3.714925428971107*^9, 
   3.714925435103672*^9}, 3.714929468166341*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["check they match indeed", "Chapter",
 CellChangeTimes->{{3.711971932439375*^9, 3.711971939988549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ubar", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "-", 
       RowBox[{"ubar4th", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}]}], " ", "&"}], "[", 
     RowBox[{"zrandom", ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}], "/.",
     "PhysicalConstants"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.711971897137328*^9, 3.7119719212664413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.496`", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.711971927847247*^9, 3.711989299805483*^9, 
  3.711990165845848*^9, 3.7119983086095963`*^9, 3.71202907463708*^9, 
  3.713193675962926*^9, 3.714925347568988*^9, 3.714925441556407*^9, 
  3.714929471677762*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Law Design: State Transformation", "Title",
 CellChangeTimes->{
  3.714920401622959*^9, {3.7149244839591923`*^9, 3.7149244848945704`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
      "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_", 
      ",", "v2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{"p", ",", "v", ",", 
      RowBox[{"nT", "[", "zk", "]"}], ",", 
      RowBox[{"\[Omega]T", "[", 
       RowBox[{"zk", ",", "zd"}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{"position", ",", " ", "velocity", ",", " ", 
        RowBox[{
        "unit", " ", "vector", " ", "and", " ", "angular", " ", "velocity", 
         " ", "of", " ", "thrust", " ", "propelled", " ", "system"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "zk", "]"}], ",", 
        RowBox[{"\[Omega]\[Theta]", "[", 
         RowBox[{"zk", ",", "zd"}], "]"}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"theta", " ", "and", " ", "theta", " ", 
        RowBox[{"dot", ":", " ", 
         RowBox[{
         "angle", " ", "between", " ", "cables", " ", "is", " ", "double", 
          " ", "integrator"}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "zk", "]"}], ",", 
        RowBox[{"\[Omega]\[Psi]", "[", 
         RowBox[{"zk", ",", "zd"}], "]"}]}], "}"}]}], 
     RowBox[{"(*", 
      RowBox[{"yaw", " ", "and", " ", "yaw", " ", 
       RowBox[{"dot", ":", " ", 
        RowBox[{
        "yaw", " ", "position", " ", "is", " ", "double", " ", 
         "integrator"}]}]}], "*)"}], "\[IndentingNewLine]", "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"N", "[", 
    RowBox[{"g", "[", 
     RowBox[{"zlR", "[", "]"}], "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6970537650470133`*^9, 3.697053864817842*^9}, {
   3.697053921115658*^9, 3.697053926596095*^9}, {3.6970539816235027`*^9, 
   3.697054046602428*^9}, {3.6970540988475533`*^9, 3.697054102143449*^9}, 
   3.697055811964624*^9, {3.697123138966934*^9, 3.697123148940028*^9}, {
   3.697123200641656*^9, 3.697123226467387*^9}, {3.697123311828197*^9, 
   3.697123315398693*^9}, {3.7117788749932947`*^9, 3.711778874997719*^9}, {
   3.7117814250797243`*^9, 3.7117814250907393`*^9}, {3.7117817287996063`*^9, 
   3.711781788213993*^9}, {3.711783143775939*^9, 3.711783145078246*^9}, {
   3.711969051818285*^9, 3.711969141074771*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["generator element in codomain of g (X state space)", \
"Chapter"]], "Chapter",
 CellChangeTimes->{{3.711969170109325*^9, 3.711969179886011*^9}, {
  3.7149204177352324`*^9, 3.71492041934308*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"positive3rd", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xl", "[", "l_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"l", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"l", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"positive3rd", "[", 
         RowBox[{"uv3", "[", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"7", ";;", "8"}], "]"}], "]"}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", " ", 
        RowBox[{
         RowBox[{"Skew", "[", 
          RowBox[{"positive3rd", "[", 
           RowBox[{"uv3", "[", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{"7", ";;", "8"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
         ".", 
         RowBox[{"Duv3", "[", 
          RowBox[{
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{"7", ";;", "8"}], "]"}], "]"}], ",", 
           RowBox[{"l", "[", 
            RowBox[{"[", 
             RowBox[{"9", ";;", "10"}], "]"}], "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Pi]", "-", "\[Epsilon]ps"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "+", "\[Epsilon]ps"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", "11", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{"we", " ", "require", " ", "that", " ", "theta", " ", 
            RowBox[{"in", " ", "[", 
             RowBox[{"0", ",", "pi"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"l", "[", 
           RowBox[{"[", "12", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Min", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "4"], "-", "\[Epsilon]ps"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  FractionBox["\[Pi]", "4"]}], "+", "\[Epsilon]ps"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", "13", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"l", "[", 
           RowBox[{"[", "14", "]"}], "]"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"we", " ", "require", " ", "that", " ", "yaw", " ", 
            RowBox[{"in", " ", "[", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[Pi]", "4"]}], ",", 
              FractionBox["\[Pi]", "4"]}], "]"}]}], ":", " ", 
           RowBox[{
           "this", " ", "can", " ", "be", " ", "lifted", " ", "tough"}]}], 
          "*)"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
       "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]ps", "\[Rule]", " ", "0.001"}], "}"}]}], "/.", 
     "PhysicalConstants"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xlR", "[", "]"}], ":=", 
    RowBox[{"xl", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "14"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"xlR", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.71188263026888*^9, 3.711882740232811*^9}, {
  3.711882813974772*^9, 3.711882866762301*^9}, {3.711885408420166*^9, 
  3.711885498140078*^9}, {3.71188553966667*^9, 3.7118857981375847`*^9}, {
  3.711885866560811*^9, 3.711885874678093*^9}, {3.7118860184951277`*^9, 
  3.7118861093069763`*^9}, {3.711886170831259*^9, 3.71188617764748*^9}, {
  3.711889262546359*^9, 3.711889307363678*^9}, {3.711889825948989*^9, 
  3.711889839311223*^9}, {3.711889872275957*^9, 3.711889932498383*^9}, {
  3.711889975136389*^9, 3.711889977597309*^9}, {3.7119691650632057`*^9, 
  3.71196924512492*^9}, {3.7119693350846777`*^9, 3.711969342112808*^9}, {
  3.7119699301544113`*^9, 3.7119699311063957`*^9}, {3.711970557508724*^9, 
  3.711970557823391*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.39343300049382`"}], ",", 
   RowBox[{"-", "0.654368497417332`"}], ",", "0.46734440193084303`", ",", 
   RowBox[{"-", "0.9138772932019603`"}], ",", 
   RowBox[{"-", "0.6828852181650196`"}], ",", 
   RowBox[{"-", "0.44746877504150273`"}], ",", "0.42983941959578253`", ",", 
   RowBox[{"-", "0.839369210488673`"}], ",", "0.3327121907071976`", ",", 
   RowBox[{"-", "0.31530876226998605`"}], ",", "0.03443482560615738`", ",", 
   "0.494227961411435`", ",", "0.8463168515036603`", ",", 
   RowBox[{"-", "0.5408890160309658`"}], ",", "0.4342491648277731`", ",", 
   "0.6252246652399114`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7118828436997347`*^9, 3.7118828677290287`*^9}, 
   3.711886109823449*^9, {3.711886164926414*^9, 3.7118861782620707`*^9}, 
   3.711889265997428*^9, 3.711889308048511*^9, 3.711889733373968*^9, {
   3.711889929450115*^9, 3.711889933546767*^9}, 3.711889978633875*^9, 
   3.711891083358334*^9, 3.7119389650340967`*^9, 3.711965117205212*^9, 
   3.7119692463981113`*^9, 3.711969931578805*^9, {3.7119705584614697`*^9, 
   3.711970560021349*^9}, 3.711983824730229*^9, 3.7119846641573133`*^9, 
   3.7119893000102167`*^9, 3.711990165899392*^9, 3.711993967923767*^9, 
   3.7119983088308496`*^9, 3.712029074860207*^9, 3.713193676127*^9, 
   3.714925458522148*^9, 3.71492947172113*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["inverse of map g", "Chapter",
 CellChangeTimes->{{3.711969277661028*^9, 3.7119692804046087`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"let", "'"}], "s", " ", "postulate", " ", "solution", " ", "of", 
    " ", "this", " ", "form"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"n1sol", "=", 
     RowBox[{"{", 
      RowBox[{"a1", ",", "b1", ",", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a1", "2"], "-", 
         SuperscriptBox["b1", "2"]}]]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n2sol", "=", 
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a2", "2"], "-", 
         SuperscriptBox["b2", "2"]}]]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "[", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"n1sol", "-", "n2sol"}], ")"}]}], "]"}], "//", "Simplify"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"sol1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "2"]}]], "&"}], "[", 
       RowBox[{
        RowBox[{"#", "&"}], "[", 
        RowBox[{
         RowBox[{"OP", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"n1sol", "-", "n2sol"}], ")"}]}], "]"}], "]"}], "//", 
      "Simplify"}]}], 
    RowBox[{"(*", 
     RowBox[{
      FractionBox[
       RowBox[{"b1", "-", "b2"}], 
       RowBox[{"a2", "-", "a1"}]], " ", "=", " ", 
      RowBox[{"Tan", "[", "\[Psi]", "]"}]}], "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"sol1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}]], "&"}], "[", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"n1sol", "-", "n2sol"}], ")"}]}], "]"}], "//", "Simplify"}]}], 
   RowBox[{"(*", 
    RowBox[{
     FractionBox[
      RowBox[{"b1", "-", "b2"}], 
      RowBox[{"a2", "-", "a1"}]], " ", "=", " ", 
     RowBox[{"Tan", "[", "\[Psi]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"sol2", "=", 
    RowBox[{
     RowBox[{"n1sol", ".", "n2sol"}], "//", "Simplify"}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"n1", ".", "n2"}], " ", "=", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"nT", " ", "=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"w1", " ", "n1"}], " ", "+", " ", 
       RowBox[{"w2", " ", "n2"}]}], 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"w1", " ", "n1"}], " ", "+", " ", 
        RowBox[{"w2", " ", "n2"}]}], "]"}]]}], "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{"sol3", "=", 
    RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], 
        SqrtBox[
         RowBox[{"#", ".", "#"}]]], "&"}], "[", 
      RowBox[{
       RowBox[{"w1", " ", "n1sol"}], "+", 
       RowBox[{"w2", " ", "n2sol"}]}], "]"}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7119692836810207`*^9, 3.711969297133792*^9}, {
  3.711969362801589*^9, 3.711969495990939*^9}, {3.711969566909459*^9, 
  3.711969642589087*^9}, {3.714920511818446*^9, 3.7149205143538723`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"b1", "-", "b2"}], 
  RowBox[{"a1", "-", "a2"}]]], "Output",
 CellChangeTimes->{
  3.7119694874093018`*^9, 3.71196960090119*^9, {3.711969632226582*^9, 
   3.711969643101706*^9}, 3.711983824916747*^9, 3.7119893000984*^9, 
   3.711990165939062*^9, 3.711998308913414*^9, 3.7120290749435587`*^9, 
   3.713193676227623*^9, 3.714925458567422*^9, 3.7149294717453117`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a1", " ", "a2"}], "+", 
  RowBox[{"b1", " ", "b2"}], "+", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["a1", "2"], "-", 
     SuperscriptBox["b1", "2"]}]], " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["a2", "2"], "-", 
     SuperscriptBox["b2", "2"]}]]}]}]], "Output",
 CellChangeTimes->{
  3.7119694874093018`*^9, 3.71196960090119*^9, {3.711969632226582*^9, 
   3.711969643101706*^9}, 3.711983824916747*^9, 3.7119893000984*^9, 
   3.711990165939062*^9, 3.711998308913414*^9, 3.7120290749435587`*^9, 
   3.713193676227623*^9, 3.714925458567422*^9, 3.7149294717560873`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a1", " ", "w1"}], "+", 
     RowBox[{"a2", " ", "w2"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["w1", "2"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a1", " ", "a2"}], "+", 
         RowBox[{"b1", " ", "b2"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a1", "2"], "-", 
            SuperscriptBox["b1", "2"]}]], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a2", "2"], "-", 
            SuperscriptBox["b2", "2"]}]]}]}], ")"}], " ", "w1", " ", "w2"}], 
      "+", 
      SuperscriptBox["w2", "2"]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"b1", " ", "w1"}], "+", 
     RowBox[{"b2", " ", "w2"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["w1", "2"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a1", " ", "a2"}], "+", 
         RowBox[{"b1", " ", "b2"}], "+", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a1", "2"], "-", 
            SuperscriptBox["b1", "2"]}]], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            SuperscriptBox["a2", "2"], "-", 
            SuperscriptBox["b2", "2"]}]]}]}], ")"}], " ", "w1", " ", "w2"}], 
      "+", 
      SuperscriptBox["w2", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7119694874093018`*^9, 3.71196960090119*^9, {3.711969632226582*^9, 
   3.711969643101706*^9}, 3.711983824916747*^9, 3.7119893000984*^9, 
   3.711990165939062*^9, 3.711998308913414*^9, 3.7120290749435587`*^9, 
   3.713193676227623*^9, 3.714925458567422*^9, 3.714929472037573*^9}]
}, Open  ]],

Cell[TextData[{
 "denominator: ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["w1", "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a1", " ", "a2"}], "+", 
      RowBox[{"b1", " ", "b2"}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a1", "2"], "-", 
         SuperscriptBox["b1", "2"]}]], " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["a2", "2"], "-", 
         SuperscriptBox["b2", "2"]}]]}]}], ")"}], " ", "w1", " ", "w2"}], "+", 
   SuperscriptBox["w2", "2"]}]],
  CellChangeTimes->{3.7119694879314528`*^9}],
 " = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["w1", "2"], "+", 
   SuperscriptBox["w2", "2"], "+", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}]],
  CellChangeTimes->{3.7119694879314528`*^9}],
 "(see sol2)"
}], "Item",
 CellChangeTimes->{{3.7119694992564783`*^9, 3.711969551067514*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sol2", "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "b1"}], "}"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"a1", ",", "b1"}], "}"}]}]}], "]"}]}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2"}], "}"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
      RowBox[{"{", 
       RowBox[{"a2", ",", "b2"}], "}"}]}]}], "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a1", " ", "w1"}], "+", 
      RowBox[{"a2", " ", "w2"}], "-", 
      RowBox[{"AA", " ", "nTx"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a1", ",", "b1"}], "}"}], "\[Rule]", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"a1", ",", "b1"}], "}"}]}]}], "]"}]}], "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "b2"}], "}"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"a2", ",", "b2"}], "}"}]}]}], "]"}]}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nTx", ",", "nTy"}], "}"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
      RowBox[{"{", 
       RowBox[{"nTx", ",", "nTy"}], "}"}]}]}], "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"b1", " ", "w1"}], " ", "+", 
      RowBox[{"b2", " ", "w2"}], "-", 
      RowBox[{"AA", " ", "nTy"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a1", ",", "b1"}], "}"}], "\[Rule]", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
            RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"a1", ",", "b1"}], "}"}]}]}], "]"}]}], "/.", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "b2"}], "}"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"a2", ",", "b2"}], "}"}]}]}], "]"}]}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nTx", ",", "nTy"}], "}"}], "\[Rule]", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
          RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], ".", 
      RowBox[{"{", 
       RowBox[{"nTx", ",", "nTy"}], "}"}]}]}], "]"}]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.713204058573892*^9, 3.7132042327596073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a1", " ", "a2"}], "+", 
  RowBox[{"b1", " ", "b2"}], "+", 
  RowBox[{
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["a1", "2"], "-", 
     SuperscriptBox["b1", "2"]}]], " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["a2", "2"], "-", 
     SuperscriptBox["b2", "2"]}]]}]}]], "Output",
 CellChangeTimes->{{3.7132041191693077`*^9, 3.713204136303145*^9}, 
   3.713204188718562*^9, 3.713204233659309*^9, 3.714925459232226*^9, 
   3.714929472061212*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "AA"}], " ", "nTx"}], "+", 
     RowBox[{"a1", " ", "w1"}], "+", 
     RowBox[{"a2", " ", "w2"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"AA", " ", "nTy"}], "-", 
     RowBox[{"b1", " ", "w1"}], "-", 
     RowBox[{"b2", " ", "w2"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7132041191693077`*^9, 3.713204136303145*^9}, 
   3.713204188718562*^9, 3.713204233659309*^9, 3.714925459232226*^9, 
   3.71492947208712*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "AA"}], " ", "nTy"}], "+", 
     RowBox[{"b1", " ", "w1"}], "+", 
     RowBox[{"b2", " ", "w2"}]}], ")"}], " ", 
   RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "AA"}], " ", "nTx"}], "+", 
     RowBox[{"a1", " ", "w1"}], "+", 
     RowBox[{"a2", " ", "w2"}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7132041191693077`*^9, 3.713204136303145*^9}, 
   3.713204188718562*^9, 3.713204233659309*^9, 3.714925459232226*^9, 
   3.7149294721129513`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Solve", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"a1", "-", "a2"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b1", "-", "b2"}], ")"}]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"a1", "-", "a2"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"b1", "-", "b2"}], ")"}], "2"]}]], "\[Equal]", 
           RowBox[{"Tan", "[", 
            RowBox[{"2", " ", "\[Psi]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"sol2", "\[Equal]", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"a1", " ", "w1"}], "+", 
            RowBox[{"a2", " ", "w2"}]}], "\[Equal]", "SnTx"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"b1", " ", "w1"}], " ", "+", 
            RowBox[{"b2", " ", "w2"}]}], "\[Equal]", "SnTy"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"a1", ",", "a2", ",", "b1", ",", "b2"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"w1", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"w2", " ", ">", " ", "0"}]}]}], " ", "\[IndentingNewLine]", 
     "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7132025248359213`*^9, 3.713202530311266*^9}, 
   3.7132028087486553`*^9, {3.713202847274365*^9, 3.7132028510838747`*^9}, {
   3.713202894712134*^9, 3.713202895060457*^9}, {3.714920453760604*^9, 
   3.714920455719795*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Solve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"b1", "\[Equal]", "b2"}], ",", 
         RowBox[{"(*", 
          RowBox[{
          "Assume", " ", "that", " ", "b1", " ", "and", " ", "b2", " ", "are",
            " ", "equal"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"sol2", "\[Equal]", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"a1", " ", "w1"}], "+", 
           RowBox[{"a2", " ", "w2"}]}], "\[Equal]", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["w1", "2"], "+", 
             SuperscriptBox["w2", "2"], "+", 
             RowBox[{"2", " ", "w1", " ", "w2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "nTx"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"b1", " ", "w1"}], " ", "+", 
           RowBox[{"b2", " ", "w2"}]}], "\[Equal]", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["w1", "2"], "+", 
             SuperscriptBox["w2", "2"], "+", 
             RowBox[{"2", " ", "w1", " ", "w2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "nTy"}]}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"a1", ",", "a2", ",", "b1", ",", "b2"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"w1", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"w2", " ", ">", " ", "0"}]}]}], " ", "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713203208019412*^9, 3.7132032195674334`*^9}, {
  3.713203261449656*^9, 3.713203269998238*^9}, {3.713203344965726*^9, 
  3.713203355074916*^9}, {3.7149255260193644`*^9, 3.714925535331051*^9}}],

Cell[CellGroupData[{

Cell["solution 2 is the correct because, we want a1>a2", "Subsection",
 CellChangeTimes->{{3.7132066352044353`*^9, 3.713206650951764*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"a1", "-", "a2"}], "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"a1", "-", "a2"}], "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "//", "Simplify"}], "*)"}]}]], "Input",\

 CellChangeTimes->{{3.7132038383052*^9, 3.7132038526864977`*^9}, {
  3.7132050467303*^9, 3.713205106231535*^9}, {3.713207606700659*^9, 
  3.713207608304965*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a1", "-", "a2"}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SqrtBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w1", "2"], "+", 
           SuperscriptBox["w2", "2"], "+", 
           RowBox[{"2", " ", "w1", " ", "w2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["nTy", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w1", "+", "w2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w1", "2"], "+", 
           SuperscriptBox["w2", "2"], "+", 
           RowBox[{"2", " ", "w1", " ", "w2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{"w1", "+", "w2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nTx", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"w1", "-", "w2"}], ")"}]}], "+", "  ", 
         SqrtBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"w1", "-", "w2"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", "1", "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["nTy", "2"]}]}], " ", ")"}]}], " ", "+", 
              RowBox[{"4", " ", "w1", " ", "w2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", " ", 
                 SuperscriptBox["nTy", "2"]}], ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["nTx", "2"], "-", 
              SuperscriptBox["nTy", "2"]}], ")"}]}]}]]}], ")"}]}], ")"}]}], "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["w1", "2"], "+", 
     SuperscriptBox["w2", "2"], "+", 
     RowBox[{"2", " ", "w1", " ", "w2", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ">", "0"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a1", "-", "a2"}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SqrtBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w1", "2"], "+", 
           SuperscriptBox["w2", "2"], "+", 
           RowBox[{"2", " ", "w1", " ", "w2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["nTy", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"w1", "+", "w2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w1", "2"], "+", 
           SuperscriptBox["w2", "2"], "+", 
           RowBox[{"2", " ", "w1", " ", "w2", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{"w1", "+", "w2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nTx", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"w1", "-", "w2"}], ")"}]}], "-", "  ", 
         SqrtBox[
          RowBox[{" ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"w1", "-", "w2"}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", "1", "-", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["nTy", "2"]}]}], " ", ")"}]}], " ", "+", 
              RowBox[{"4", " ", "w1", " ", "w2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", " ", 
                 SuperscriptBox["nTy", "2"]}], ")"}], 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox["nTx", "2"], "-", 
              SuperscriptBox["nTy", "2"]}], ")"}]}]}]]}], ")"}]}], ")"}]}], "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["w1", "2"], "+", 
     SuperscriptBox["w2", "2"], "+", 
     RowBox[{"2", " ", "w1", " ", "w2", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ">", "0"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.713207457224174*^9, 3.713207561759222*^9}, {
   3.7132075926723833`*^9, 3.713207599051673*^9}, 3.713208003497654*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.713207502833663*^9, 3.713207563090849*^9}, {
   3.7132075959115477`*^9, 3.71320761055186*^9}, 3.7132081212896976`*^9, 
   3.714925470424918*^9, 3.7149294803778*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.713207502833663*^9, 3.713207563090849*^9}, {
   3.7132075959115477`*^9, 3.71320761055186*^9}, 3.7132081212896976`*^9, 
   3.714925470424918*^9, 3.7149294806905413`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The latter for sol[[2]] is positive if (but not only if) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["nTz", "2"], ">", 
     FractionBox["\[Pi]", "4"]}], "\[Rule]", " ", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["nTz", "2"], "+", 
         SuperscriptBox["nTy", "2"]}], ")"}]}]}], ">", 
     RowBox[{"0", "!"}]}]}], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.7132079973345537`*^9, 3.713208066696299*^9}, {
  3.713208100233015*^9, 3.7132081083542128`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"w1", "-", "w2"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", "1", "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["nTy", "2"]}]}], " ", ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["nTx", "2"], "-", 
       SuperscriptBox["nTy", "2"]}], ")"}]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"nTx", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"w1", "-", "w2"}], ")"}]}], ")"}], "2"]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.713207765707658*^9, 3.7132078448842287`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["nTy", "2"]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"w1", "-", "w2"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["nTx", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["nTy", "2"]}], "+", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]", "2"], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.713207786555881*^9, 3.713207790650137*^9}, {
   3.713207822992714*^9, 3.713207845287984*^9}, 3.714925470789657*^9, 
   3.714929480714694*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We assume b1=b2: now we need to rotate by \[Psi], because b1 is not equal to \
b2\
\>", "Subsection",
 CellChangeTimes->{{3.714925552386815*^9, 3.7149255839397497`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SOL", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a1", ",", "b1", ",", "a2", ",", "b2"}], "}"}], "\[Rule]", 
       " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"#", ".", 
            RowBox[{"{", 
             RowBox[{"a1", ",", "b1"}], "}"}]}], ",", 
           RowBox[{"#", ".", 
            RowBox[{"{", 
             RowBox[{"a2", ",", "b2"}], "}"}]}]}], "]"}], "/.", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"sol", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/.", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"nTx", ",", "nTy"}], "}"}], "\[Rule]", 
             RowBox[{
              RowBox[{"Transpose", "[", "#", "]"}], ".", 
              RowBox[{"{", 
               RowBox[{"nTx", ",", "nTy"}], "}"}]}]}], "]"}]}], " ", ")"}]}], 
        ")"}]}], "]"}], "&"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Psi]", "]"}], ",", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"random", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"w1", ",", "w2"}], "}"}], "\[Rule]", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Psi]n", ",", "\[Delta]n", ",", "\[Psi]", ",", "\[Theta]"}],
         "}"}], "\[Rule]", " ", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "4"}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.713206158405095*^9, 3.71320633667106*^9}, {
   3.7132063709060698`*^9, 3.713206433061796*^9}, 3.713206597052202*^9, {
   3.713208144151251*^9, 3.7132081495126877`*^9}, {3.71320819107487*^9, 
   3.713208247245468*^9}, {3.713208281681569*^9, 3.7132083471238422`*^9}, {
   3.713208391674128*^9, 3.7132085170374117`*^9}, {3.713208620545795*^9, 
   3.713208622384069*^9}, {3.713208656844804*^9, 3.713208664042934*^9}, {
   3.7149255912466497`*^9, 3.7149255919977083`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["check solution satisfies conditions", "Subsection",
 CellChangeTimes->{{3.7149255969116697`*^9, 3.714925606932034*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"a1", "-", "a2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "-", "b2"}], ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"a1", "-", "a2"}], ")"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b1", "-", "b2"}], ")"}], "2"]}]], "-", 
       RowBox[{"Tan", "[", 
        RowBox[{"2", " ", "\[Psi]"}], "]"}]}], ")"}], "/.", "SOL"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTx", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Cos", "[", "\[Psi]n", "]"}]}]}], ",", 
      RowBox[{"nTy", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Sin", "[", "\[Psi]n", "]"}]}]}]}], "}"}]}], "/.", "random"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"a1", "-", "a2"}], ")"}], "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"b1", "-", "b2"}], ")"}], "2"]}], ",", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a1", "-", "a2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"b1", "-", "b2"}], ")"}]}]}], "]"}]}], "-", " ", 
      "\[Psi]"}], "/.", "SOL"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTx", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Cos", "[", "\[Psi]n", "]"}]}]}], ",", 
      RowBox[{"nTy", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Sin", "[", "\[Psi]n", "]"}]}]}]}], "}"}]}], "/.", "random"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"b1", "-", "b2"}], 
        RowBox[{"a1", "-", "a2"}]], "-", 
       RowBox[{"Tan", "[", "\[Psi]", "]"}]}], ")"}], "/.", "SOL"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTx", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Cos", "[", "\[Psi]n", "]"}]}]}], ",", 
      RowBox[{"nTy", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Sin", "[", "\[Psi]n", "]"}]}]}]}], "}"}]}], "/.", "random"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", "sol2"}], ")"}], "/.", 
     "SOL"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTx", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Cos", "[", "\[Psi]n", "]"}]}]}], ",", 
      RowBox[{"nTy", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Sin", "[", "\[Psi]n", "]"}]}]}]}], "}"}]}], "/.", "random"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a1", " ", "w1"}], "+", 
       RowBox[{"a2", " ", "w2"}], "-", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["w1", "2"], "+", 
          SuperscriptBox["w2", "2"], "+", 
          RowBox[{"2", " ", "w1", " ", "w2", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "nTx"}]}], ")"}], "/.",
      "SOL"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTx", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Cos", "[", "\[Psi]n", "]"}]}]}], ",", 
      RowBox[{"nTy", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Sin", "[", "\[Psi]n", "]"}]}]}]}], "}"}]}], "/.", "random"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"b1", " ", "w1"}], " ", "+", 
       RowBox[{"b2", " ", "w2"}], "-", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["w1", "2"], "+", 
          SuperscriptBox["w2", "2"], "+", 
          RowBox[{"2", " ", "w1", " ", "w2", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "nTy"}]}], ")"}], "/.",
      "SOL"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nTx", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Cos", "[", "\[Psi]n", "]"}]}]}], ",", 
      RowBox[{"nTy", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Delta]n", "]"}], 
        RowBox[{"Sin", "[", "\[Psi]n", "]"}]}]}]}], "}"}]}], "/.", "random"}],
   "]"}]}], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.71492561080184*^9, 3.714929480739347*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.71492561080184*^9, 3.7149294807475567`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.71492561080184*^9, 3.714929480753031*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.71492561080184*^9, 3.714929480761138*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.71492561080184*^9, 3.714929480762259*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.71492561080184*^9, 3.714929480763183*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inverse map of g (call it h)", "Chapter",
 CellChangeTimes->{{3.71197051439669*^9, 3.711970519425292*^9}, 
   3.713206102675015*^9, {3.714924350554838*^9, 3.714924356379078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "vx_", ",", "vy_", ",", "vz_", ",", 
       "nTx_", ",", "nTy_", ",", "nTz_", ",", "\[Omega]Tx_", ",", 
       "\[Omega]Ty_", ",", "\[Omega]Tz_", ",", "\[Theta]_", ",", 
       "\[Omega]\[Theta]_", ",", "\[Psi]_", ",", "\[Omega]\[Psi]_"}], "}"}], 
     "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"px", ",", "py", ",", "pz"}], "}"}], 
        RowBox[{"(*", "p", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"px", ",", "py", ",", "pz"}], "}"}], "+", 
          RowBox[{"L1", " ", "n1sol"}]}], "/.", "SOL"}], 
        RowBox[{"(*", "P1", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"px", ",", "py", ",", "pz"}], "}"}], "+", 
          RowBox[{"L2", " ", "n2sol"}]}], "/.", "SOL"}], 
        RowBox[{"(*", "P2", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], 
        RowBox[{"(*", "v", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "+", 
         RowBox[{"L1", " ", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"n1sol", "/.", "SOL"}], ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "\[Theta]", ",", "nTx", ",", "nTy"}], 
                "}"}], "}"}]}], "]"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]\[Psi]", ",", "\[Omega]\[Theta]", ",", "nTxD", ",", 
             "nTyD"}], "}"}]}]}]}], 
        RowBox[{"(*", "V1", "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "+", 
         RowBox[{"L2", " ", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"n2sol", "/.", "SOL"}], ",", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{"\[Psi]", ",", "\[Theta]", ",", "nTx", ",", "nTy"}], 
                "}"}], "}"}]}], "]"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
            "\[Omega]\[Psi]", ",", "\[Omega]\[Theta]", ",", "nTxD", ",", 
             "nTyD"}], "}"}]}]}]}]}], 
       RowBox[{"(*", "V2", "*)"}], "\[IndentingNewLine]", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"nTxD", " ", "\[Rule]", "  ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Omega]Tz"}], "  ", "nTy"}], "+", 
           RowBox[{"\[Omega]Ty", "  ", "nTz"}]}], ")"}]}], ",", 
        RowBox[{"nTyD", " ", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Omega]Tz", "  ", "nTx"}], "-", 
           RowBox[{"\[Omega]Tx", "  ", "nTz"}]}], ")"}]}]}], "}"}]}], "/.", 
     "PhysicalConstants"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xrandom", "=", 
   RowBox[{"xlR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "-", 
      RowBox[{"g", "[", 
       RowBox[{"h", "[", "#", "]"}], "]"}]}], "&"}], "[", "xrandom", "]"}], 
   "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zrandom", "=", " ", 
   RowBox[{"zlR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"counter", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], "<", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"nH", "[", 
            RowBox[{"zrandom", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
           RowBox[{"nH", "[", 
            RowBox[{"zrandom", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}]}], "]"}], "<", 
        FractionBox["\[Pi]", "2"]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"n1", "[", 
          RowBox[{"zrandom", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], " ", ">", "0"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"n2", "[", 
          RowBox[{"zrandom", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], " ", ">", "0"}]}], ")"}]}], "||", 
    RowBox[{"counter", "\[GreaterEqual]", "10"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zrandom", "=", " ", 
     RowBox[{"zlR", "[", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Not good point to test inverse\>\"", "]"}], 
    ";"}], "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["\[Pi]", "4"]}], "<", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", 
          RowBox[{"zrandom", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", 
          RowBox[{"zrandom", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}]}], "]"}], "<", 
      FractionBox["\[Pi]", "4"]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"n1", "[", 
        RowBox[{"zrandom", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", ">", "0"}], "&&", 
     RowBox[{
      RowBox[{
       RowBox[{"n2", "[", 
        RowBox[{"zrandom", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", ">", "0"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"in", " ", "constructing", " ", "inverse"}], ",", " ", 
      RowBox[{
      "we", " ", "took", " ", "assumption", " ", "the", " ", "conditions", 
       " ", "above", " ", "are", " ", "satisfied"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "-", 
          RowBox[{"h", "[", 
           RowBox[{"g", "[", "#", "]"}], "]"}]}], "&"}], "[", "zrandom", 
        "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Not good point to test inverse\>\"", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", "#", "]"}], "-", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
            RowBox[{"nH", "[", "#", "]"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
            RowBox[{"nH", "[", "#", "]"}]}]}], "]"}]}], "&"}], "[", 
       RowBox[{"zrandom", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], "Input",
 CellChangeTimes->{{3.7118798579441423`*^9, 3.7118800580843697`*^9}, {
   3.711880088753097*^9, 3.711880139046256*^9}, {3.711880507753044*^9, 
   3.711880513423258*^9}, {3.711880839423197*^9, 3.711880842308284*^9}, {
   3.711882397096879*^9, 3.711882462600479*^9}, {3.7118825542372*^9, 
   3.7118825733111277`*^9}, 3.71188260674632*^9, {3.7118828732388897`*^9, 
   3.711882880162858*^9}, 3.711882947574538*^9, {3.711882988826446*^9, 
   3.711883087703042*^9}, {3.7118831193328743`*^9, 3.711883128485159*^9}, {
   3.71188337435636*^9, 3.711883399264039*^9}, {3.71188382236692*^9, 
   3.711884074849408*^9}, {3.7118847346540537`*^9, 3.71188475202494*^9}, {
   3.711884792161051*^9, 3.711884797405364*^9}, {3.711885887199128*^9, 
   3.711885903169269*^9}, {3.711887810175192*^9, 3.7118878923166103`*^9}, {
   3.711887981215436*^9, 3.711888021941288*^9}, {3.71188806735498*^9, 
   3.7118881122284727`*^9}, {3.7118890403566628`*^9, 3.711889096718766*^9}, {
   3.711889162131291*^9, 3.711889166154627*^9}, {3.711889319294533*^9, 
   3.711889351701919*^9}, {3.711889382426903*^9, 3.7118896819579678`*^9}, {
   3.711889754043126*^9, 3.711889761519374*^9}, {3.711890006999866*^9, 
   3.711890129028965*^9}, {3.711890160574724*^9, 3.711890215861032*^9}, {
   3.7118911820181303`*^9, 3.711891359776382*^9}, 3.711891810919098*^9, {
   3.7118918616544237`*^9, 3.71189191689135*^9}, {3.7118919499907713`*^9, 
   3.711892004179214*^9}, {3.711892034652885*^9, 3.711892037327126*^9}, {
   3.711892187637041*^9, 3.7118922251111727`*^9}, 3.7118928238795843`*^9, {
   3.711969694939919*^9, 3.7119698595666933`*^9}, {3.71196989417232*^9, 
   3.711969896413641*^9}, {3.7119700439380836`*^9, 3.71197009383162*^9}, {
   3.711970169970532*^9, 3.7119702055780907`*^9}, {3.71197037967087*^9, 
   3.7119704444914913`*^9}, {3.711970493802965*^9, 3.7119709452181063`*^9}, {
   3.71198467841385*^9, 3.711984682842177*^9}, {3.713205860715377*^9, 
   3.713205945590885*^9}, {3.713206554825342*^9, 3.713206555148088*^9}, {
   3.713208690049378*^9, 3.713208721727951*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.71196986039474*^9, 3.711969964475799*^9}, {
   3.711970094477262*^9, 3.711970101283209*^9}, {3.711970194528626*^9, 
   3.711970218716442*^9}, {3.711970380748863*^9, 3.711970387913739*^9}, {
   3.711970445840722*^9, 3.7119704808905*^9}, {3.711970601579316*^9, 
   3.711970603589746*^9}, {3.711970926121097*^9, 3.7119709533910437`*^9}, 
   3.711983941301832*^9, {3.711984667644565*^9, 3.7119846871399384`*^9}, 
   3.711989359691861*^9, 3.711990225154339*^9, 3.711998367499741*^9, 
   3.712029133857493*^9, 3.713193784597335*^9, {3.713205959847413*^9, 
   3.713206004473323*^9}, {3.713206053121585*^9, 3.7132060555406446`*^9}, {
   3.7132064473251543`*^9, 3.713206473390637*^9}, {3.71320652061592*^9, 
   3.7132065227189217`*^9}, {3.71320655600282*^9, 3.7132066051887407`*^9}, {
   3.713208676260396*^9, 3.713208722537483*^9}, 3.7149254709960613`*^9, {
   3.714925738560862*^9, 3.7149257496344147`*^9}, 3.7149294808367662`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Not good point to test inverse\"\>"], "Print",
 CellChangeTimes->{{3.71196986041523*^9, 3.711969964500766*^9}, {
   3.7119700944997663`*^9, 3.711970101323408*^9}, {3.711970194553845*^9, 
   3.711970218741419*^9}, {3.7119703807766457`*^9, 3.711970387943233*^9}, {
   3.711970445867469*^9, 3.711970480916073*^9}, {3.711970601595461*^9, 
   3.711970603603847*^9}, {3.7119709261396*^9, 3.71197095351029*^9}, 
   3.711983941317387*^9, {3.711984667664557*^9, 3.711984687241169*^9}, 
   3.7119893597073317`*^9, 3.711990225178296*^9, 3.711998367555838*^9, 
   3.7120291339143543`*^9, 3.713193784701447*^9, {3.71320595997508*^9, 
   3.713206004491613*^9}, {3.713206053228425*^9, 3.713206055558694*^9}, {
   3.713206447469664*^9, 3.7132064734081297`*^9}, {3.713206520636477*^9, 
   3.713206522854751*^9}, {3.713206556030822*^9, 3.713206605336503*^9}, {
   3.7132086763981667`*^9, 3.713208722557127*^9}, 3.714925471011085*^9, {
   3.7149257385849752`*^9, 3.714925749673093*^9}, 3.714929480845537*^9}],

Cell[BoxData["0.`"], "Print",
 CellChangeTimes->{{3.71196986041523*^9, 3.711969964500766*^9}, {
   3.7119700944997663`*^9, 3.711970101323408*^9}, {3.711970194553845*^9, 
   3.711970218741419*^9}, {3.7119703807766457`*^9, 3.711970387943233*^9}, {
   3.711970445867469*^9, 3.711970480916073*^9}, {3.711970601595461*^9, 
   3.711970603603847*^9}, {3.7119709261396*^9, 3.71197095351029*^9}, 
   3.711983941317387*^9, {3.711984667664557*^9, 3.711984687241169*^9}, 
   3.7119893597073317`*^9, 3.711990225178296*^9, 3.711998367555838*^9, 
   3.7120291339143543`*^9, 3.713193784701447*^9, {3.71320595997508*^9, 
   3.713206004491613*^9}, {3.713206053228425*^9, 3.713206055558694*^9}, {
   3.713206447469664*^9, 3.7132064734081297`*^9}, {3.713206520636477*^9, 
   3.713206522854751*^9}, {3.713206556030822*^9, 3.713206605336503*^9}, {
   3.7132086763981667`*^9, 3.713208722557127*^9}, 3.714925471011085*^9, {
   3.7149257385849752`*^9, 3.714925749673093*^9}, 3.7149294808467083`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "vx_", ",", "vy_", ",", "vz_", ",", 
       "nTx_", ",", "nTy_", ",", "nTz_", ",", "\[Omega]Tx_", ",", 
       "\[Omega]Ty_", ",", "\[Omega]Tz_", ",", "\[Theta]_", ",", 
       "\[Omega]\[Theta]_", ",", "\[Psi]_", ",", "\[Omega]\[Psi]_"}], "}"}], 
     "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"px", ",", "py", ",", "pz"}], "}"}], 
         RowBox[{"(*", "p", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"px", ",", "py", ",", "pz"}], "}"}], "+", 
           RowBox[{"L1", " ", "n1sol"}]}], "/.", 
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"(*", "P1", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"px", ",", "py", ",", "pz"}], "}"}], "+", 
           RowBox[{"L2", " ", "n2sol"}]}], "/.", 
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"(*", "P2", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], 
         RowBox[{"(*", "v", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "+", 
          RowBox[{"L1", " ", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"n1sol", "/.", 
                RowBox[{"sol", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                 "\[Psi]", ",", "\[Theta]", ",", "SnTx", ",", "SnTy"}], "}"}],
                 "}"}]}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
             "\[Omega]\[Psi]", ",", "\[Omega]\[Theta]", ",", "SnTxD", ",", 
              "SnTyD"}], "}"}]}]}]}], 
         RowBox[{"(*", "V1", "*)"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "+", 
          RowBox[{"L2", " ", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"n2sol", "/.", 
                RowBox[{"sol", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                 "\[Psi]", ",", "\[Theta]", ",", "SnTx", ",", "SnTy"}], "}"}],
                 "}"}]}], "]"}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
             "\[Omega]\[Psi]", ",", "\[Omega]\[Theta]", ",", "SnTxD", ",", 
              "SnTyD"}], "}"}]}]}]}]}], 
        RowBox[{"(*", "V2", "*)"}], "\[IndentingNewLine]", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SnTx", " ", "\[Rule]", " ", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["w1", "2"], "+", 
             SuperscriptBox["w2", "2"], "+", 
             RowBox[{"2", " ", "w1", " ", "w2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "nTx"}]}], ",", 
         RowBox[{"SnTy", " ", "\[Rule]", " ", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["w1", "2"], "+", 
             SuperscriptBox["w2", "2"], "+", 
             RowBox[{"2", " ", "w1", " ", "w2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], "nTy"}]}]}], 
        "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SnTxD", " ", "\[Rule]", "  ", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], " ", "w1", " ", "w2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "\[Omega]\[Theta]"}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["w1", "2"], "+", 
               SuperscriptBox["w2", "2"], "+", 
               RowBox[{"2", " ", "w1", " ", "w2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]]}]], "nTx"}], "+", 
          " ", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["w1", "2"], "+", 
             SuperscriptBox["w2", "2"], "+", 
             RowBox[{"2", " ", "w1", " ", "w2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Omega]Tz"}], "  ", "nTy"}], "+", 
             RowBox[{"\[Omega]Ty", "  ", "nTz"}]}], ")"}]}]}]}], ",", 
        RowBox[{"SnTyD", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], " ", "w1", " ", "w2", " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "\[Omega]\[Theta]"}], 
            RowBox[{"2", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["w1", "2"], "+", 
               SuperscriptBox["w2", "2"], "+", 
               RowBox[{"2", " ", "w1", " ", "w2", " ", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]]}]], "nTy"}], "+", 
          " ", 
          RowBox[{
           SqrtBox[
            RowBox[{
             SuperscriptBox["w1", "2"], "+", 
             SuperscriptBox["w2", "2"], "+", 
             RowBox[{"2", " ", "w1", " ", "w2", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Omega]Tz", "  ", "nTx"}], "-", 
             RowBox[{"\[Omega]Tx", "  ", "nTz"}]}], ")"}]}]}]}]}], "}"}]}], "/.",
      "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", "*)"}]], "Input",\

 CellChangeTimes->{{3.7118798579441423`*^9, 3.7118800580843697`*^9}, {
   3.711880088753097*^9, 3.711880139046256*^9}, {3.711880507753044*^9, 
   3.711880513423258*^9}, {3.711880839423197*^9, 3.711880842308284*^9}, {
   3.711882397096879*^9, 3.711882462600479*^9}, {3.7118825542372*^9, 
   3.7118825733111277`*^9}, 3.71188260674632*^9, {3.7118828732388897`*^9, 
   3.711882880162858*^9}, 3.711882947574538*^9, {3.711882988826446*^9, 
   3.711883087703042*^9}, {3.7118831193328743`*^9, 3.711883128485159*^9}, {
   3.71188337435636*^9, 3.711883399264039*^9}, {3.71188382236692*^9, 
   3.711884074849408*^9}, {3.7118847346540537`*^9, 3.71188475202494*^9}, {
   3.711884792161051*^9, 3.711884797405364*^9}, {3.711885887199128*^9, 
   3.711885903169269*^9}, {3.711887810175192*^9, 3.7118878923166103`*^9}, {
   3.711887981215436*^9, 3.711888021941288*^9}, {3.71188806735498*^9, 
   3.7118881122284727`*^9}, {3.7118890403566628`*^9, 3.711889096718766*^9}, {
   3.711889162131291*^9, 3.711889166154627*^9}, {3.711889319294533*^9, 
   3.711889351701919*^9}, {3.711889382426903*^9, 3.7118896819579678`*^9}, {
   3.711889754043126*^9, 3.711889761519374*^9}, {3.711890006999866*^9, 
   3.711890129028965*^9}, {3.711890160574724*^9, 3.711890215861032*^9}, {
   3.7118911820181303`*^9, 3.711891359776382*^9}, 3.711891810919098*^9, {
   3.7118918616544237`*^9, 3.71189191689135*^9}, {3.7118919499907713`*^9, 
   3.711892004179214*^9}, {3.711892034652885*^9, 3.711892037327126*^9}, {
   3.711892187637041*^9, 3.7118922251111727`*^9}, 3.7118928238795843`*^9, {
   3.711969694939919*^9, 3.7119698595666933`*^9}, {3.71196989417232*^9, 
   3.711969896413641*^9}, {3.7119700439380836`*^9, 3.71197009383162*^9}, {
   3.711970169970532*^9, 3.7119702055780907`*^9}, {3.71197037967087*^9, 
   3.7119704444914913`*^9}, {3.711970493802965*^9, 3.7119709452181063`*^9}, {
   3.71198467841385*^9, 3.711984682842177*^9}, 3.714924382270301*^9, {
   3.714925626879352*^9, 3.714925642558318*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["check dynamics in new coordinates without inverse", "Chapter",
 CellChangeTimes->{{3.71197198658783*^9, 3.7119719970147543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DynamicsEquality", "[", 
   RowBox[{"zz_", ",", 
    RowBox[{"{", 
     RowBox[{
     "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
      "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"g", "[", "z", "]"}], ",", 
          RowBox[{"{", "z", "}"}]}], "]"}], "/.", 
        RowBox[{"Thread", "[", 
         RowBox[{"z", "\[Rule]", " ", "zz"}], "]"}]}], ")"}], ".", 
      RowBox[{"Z", "[", 
       RowBox[{"zz", ",", 
        RowBox[{"ubar", "[", 
         RowBox[{"zz", ",", 
          RowBox[{"{", 
           RowBox[{
           "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
            "\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}]}], 
       "]"}]}], "-", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"zz", "[", 
        RowBox[{"[", 
         RowBox[{"10", ";;", "12"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"T", " ", 
         RowBox[{"nT", "[", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], " ", "-", " ", 
        RowBox[{"gravity", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"\[Omega]T", "[", 
          RowBox[{
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], "]"}], ".", 
        RowBox[{"nT", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"OP", "[", 
         RowBox[{"nT", "[", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]\[Theta]", "[", 
          RowBox[{
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], ",", 
         "\[Tau]\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]\[Psi]", "[", 
          RowBox[{
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], ",", 
         "\[Tau]\[Psi]"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", ")"}], "/.",
    "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"DynamicsEquality", "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7119720049367313`*^9, 3.711972065680584*^9}, {
  3.711972100057125*^9, 3.711972120966304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7119720716051483`*^9, {3.711972107100547*^9, 3.711972125276342*^9}, 
   3.711983941769204*^9, 3.711984697079536*^9, 3.711989360020287*^9, 
   3.711990225431868*^9, 3.7119983686539383`*^9, 3.712029135003736*^9, 
   3.714925472379878*^9, 3.71492564840903*^9, 3.7149257762265577`*^9, 
   3.714929482002975*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Check dynamics equality with inverse (this is however not necessary)\
\>", "Chapter",
 CellChangeTimes->{3.711972472051547*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DynamicsEquality", "[", 
   RowBox[{"xx_", ",", 
    RowBox[{"{", 
     RowBox[{
     "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
      "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"g", "[", "z", "]"}], ",", 
          RowBox[{"{", "z", "}"}]}], "]"}], ".", 
        RowBox[{"Z", "[", 
         RowBox[{
          RowBox[{"h", "[", "xx", "]"}], ",", 
          RowBox[{"ubar", "[", 
           RowBox[{
            RowBox[{"h", "[", "xx", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
              "\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}]}], 
         "]"}]}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"z", "\[Rule]", " ", 
         RowBox[{"h", "[", "xx", "]"}]}], "]"}]}], ")"}], "-", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"[", 
         RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"T", " ", 
         RowBox[{"xx", "[", 
          RowBox[{"[", 
           RowBox[{"7", ";;", "9"}], "]"}], "]"}]}], " ", "-", " ", 
        RowBox[{"gravity", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"xx", "[", 
          RowBox[{"[", 
           RowBox[{"10", ";;", "12"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"xx", "[", 
         RowBox[{"[", 
          RowBox[{"7", ";;", "9"}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"OP", "[", 
         RowBox[{"xx", "[", 
          RowBox[{"[", 
           RowBox[{"7", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"[", "14", "]"}], "]"}], ",", "\[Tau]\[Theta]"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"[", "16", "]"}], "]"}], ",", "\[Tau]\[Psi]"}], "}"}]}], 
      "]"}]}], "\[IndentingNewLine]", ")"}], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"DynamicsEquality", "[", 
   RowBox[{
    RowBox[{"xlR", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "6"}], "]"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.711972146755583*^9, 3.71197229072683*^9}, {
  3.711972435341632*^9, 3.711972444336246*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711972252389421*^9, {3.711972283106089*^9, 3.711972287995854*^9}, 
   3.711972358874816*^9, 3.711972447348873*^9, 3.711983942500882*^9, 
   3.7119893605134153`*^9, 3.7119902258156643`*^9, 3.711998370527981*^9, 
   3.7120291368491488`*^9, 3.7149254744945517`*^9, 3.7149256510591288`*^9, {
   3.714925726353977*^9, 3.714925729494446*^9}, {3.714925792719775*^9, 
   3.7149258164482107`*^9}, 3.714929483658647*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Control Law Design: Separate control laws", "Title",
 CellChangeTimes->{{3.7149059672178593`*^9, 3.7149059701730547`*^9}, {
  3.714924485790667*^9, 3.714924486494875*^9}}],

Cell[CellGroupData[{

Cell["Desired trajectory", "Chapter",
 CellChangeTimes->{{3.711974616189127*^9, 3.71197462476158*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pd", "[", "t_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "3.142"}], "10"], "t"}], "]"}]}], ",", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "3.142"}], "10"], "t"}], "]"}]}], ",", "0.5"}], 
     "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pd", "[", "t_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "3.142"}], "10"], "t"}], "]"}]}], ",", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "3.142"}], "10"], "t"}], "]"}]}], ",", 
      RowBox[{"0.5", "+", 
       RowBox[{"0.3", 
        RowBox[{"Sin", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "3.142"}], "5"], "t"}], "]"}]}]}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"pd", "[", "t_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.711974645619816*^9, 3.711974646785202*^9}, 
   3.711974933205867*^9, {3.711993143885*^9, 3.7119931462200327`*^9}, {
   3.7119981241003447`*^9, 3.7119981269103403`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controller for thrust propelled system", "Chapter",
 CellChangeTimes->{{3.711974528935987*^9, 3.711974535109921*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<controller_thrust_propelled_system.m\>\""}], "}"}], "]"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "gains", " ", "of", " ", "torque", " ", "cascaded", " ", "controller"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BoundedDoubleIntegratorGains", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kp", "\[Rule]", " ", "1.5"}], ",", 
     RowBox[{"kv", "\[Rule]", " ", 
      RowBox[{
       SqrtBox["2"], 
       SqrtBox["1.5"]}]}], ",", 
     RowBox[{"\[Sigma]p", "\[Rule]", " ", "0.6"}], ",", 
     RowBox[{"\[Sigma]v", "\[Rule]", " ", "0.6"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AttitudeControllerGains", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kp", "\[Rule]", " ", "3"}], ",", 
      RowBox[{"kd", "\[Rule]", " ", 
       RowBox[{
        SqrtBox["2"], 
        SqrtBox["3"]}]}], ",", 
      RowBox[{"kVp", "\[Rule]", " ", "100"}], ",", 
      RowBox[{"kVd", "\[Rule]", " ", "200"}], ",", 
      RowBox[{"\[Beta]", "\[Rule]", " ", "0.1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gravityfunction", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"pd", "''"}], "[", "t", "]"}], "+", 
     RowBox[{"gravity", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ControllerSubsystem1", "[", 
     RowBox[{"t_", ",", "x1_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"ThrustPropelledController", "[", "\[IndentingNewLine]", 
     RowBox[{"t", ",", 
      RowBox[{"x1", "-", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"pd", "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"pd", "'"}], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ",", 
      "gravityfunction", ",", "\[IndentingNewLine]", 
      "BoundedDoubleIntegratorGains", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{"\"\<PD\>\"", " ", ",", "AttitudeControllerGains", ",", 
         RowBox[{"{", "\"\<Precise\>\"", "}"}], ",", "Null"}], "}"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<BackStepping\>\"", ",", "AttitudeControllerGains", ",", 
        RowBox[{"{", "\"\<Precise\>\"", "}"}], ",", "\"\<on\>\""}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1cl", "[", 
   RowBox[{"t_", ",", "x1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "x1"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VV1", "[", 
   RowBox[{"t_", ",", "x1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "x1"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WW1", "[", 
   RowBox[{"t_", ",", "x1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "x1"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XX1", "[", 
   RowBox[{"t_", ",", "x1_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ControllerSubsystem1", "[", 
    RowBox[{"t", ",", "x1"}], "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7119746042441683`*^9, 3.711974604440558*^9}, {
  3.711974661800004*^9, 3.711974709284281*^9}, {3.711974786597053*^9, 
  3.711974908071559*^9}, {3.711974956488522*^9, 3.71197499047895*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"v1cl", "[", 
   RowBox[{"0.1", ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.711974913886652*^9, 3.711974924552372*^9}, 
   3.7119749972517977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Control law for theta", "Chapter",
 CellChangeTimes->{{3.711975228133561*^9, 3.7119752307444763`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GainsThetaControl", " ", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]eq", " ", "\[Rule]", " ", 
       FractionBox["\[Pi]", "6"]}], ",", 
      RowBox[{"k\[Theta]p", "\[Rule]", " ", 
       SuperscriptBox["\[Omega]n", "2"]}], ",", 
      RowBox[{"k\[Theta]d", "\[Rule]", " ", 
       RowBox[{"2", " ", "\[Xi]", " ", "\[Omega]n"}]}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Omega]n", "\[Rule]", " ", "1.1"}], ",", 
      RowBox[{"\[Xi]", "\[Rule]", " ", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u\[Theta]cl", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "k\[Theta]p"}], " ", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"#\[Theta]", "-", "\[Theta]eq"}], ")"}], 
        RowBox[{"#\[Theta]", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "-", "#\[Theta]"}], ")"}]}]]}], "-", 
      RowBox[{"k\[Theta]d", " ", 
       RowBox[{"\[Omega]\[Theta]", "[", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}]}]}], "&"}], "[", 
    
    RowBox[{"<|", 
     RowBox[{"\"\<\[Theta]\>\"", "\[Rule]", " ", 
      RowBox[{"\[Theta]", "[", 
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], "|>"}], "]"}], "/.",
    "GainsThetaControl"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"u\[Theta]cl", "[", 
    RowBox[{"zlR", "[", "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711975021620277*^9, 3.711975220845604*^9}, {
  3.7119770288060102`*^9, 3.711977043810277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Theta]", "-", "\[Alpha]"}], 
        RowBox[{"\[Theta]", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], ")"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Alpha]", ",", "\[Theta]\[Theta]"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"0", "<", "\[Theta]\[Theta]", "<", 
      FractionBox["\[Pi]", "4"]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Theta]", "-", "\[Alpha]"}], 
        RowBox[{"\[Theta]", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["\[Pi]", "4"], "-", "\[Theta]"}], ")"}]}]], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Alpha]", ",", "\[Theta]\[Theta]"}], 
        "}"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", "\[Rule]", " ", 
       FractionBox["\[Pi]", "6"]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]\[Theta]", ",", "0", ",", 
      FractionBox["\[Pi]", "4"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.711976891926598*^9, 3.711976937306241*^9}, {
  3.711977161937997*^9, 3.7119771661882544`*^9}, {3.711977250374967*^9, 
  3.7119772507769814`*^9}, {3.7119772970403023`*^9, 3.711977436132991*^9}, {
  3.711977622243527*^9, 3.711977623843534*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","nlim",
   "\"\\!\\(\\*RowBox[{\\\"\[Theta]\\\"}]\\) = \
\\!\\(\\*RowBox[{\\\"\[Alpha]\\\"}]\\) is not a valid limit of \
integration.\"",2,153,1,31132964652356540304,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7119776246625*^9, 3.711989374406747*^9, 
  3.7119902259671087`*^9, 3.711998371280348*^9, 3.712029137627551*^9, 
  3.71492582473989*^9, 3.714929483886469*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
HFr3B3H7OB/yCtD//3/q/wBbKlno
       "]]},
     Annotation[#, "Charting`Private`Tag$1057#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Rational[1, 4] Pi}, {0., 1.5591800157788098`}}, {{
     0, 0.7853981633974483}, {0., 1.5591800157788098`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7119768865808992`*^9, 3.711976940297269*^9}, 
   3.711977176027433*^9, 3.7119772548408003`*^9, {3.7119773678442993`*^9, 
   3.711977396977956*^9}, 3.71197751062712*^9, 3.7119776295357533`*^9, 
   3.7119893770317183`*^9, 3.711990228575129*^9, 3.711998373966156*^9, 
   3.7120291402816677`*^9, 3.714925829541526*^9, 3.714929486461783*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Control law for yaw", "Chapter",
 CellChangeTimes->{{3.711975228133561*^9, 3.7119752377195387`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GainsYawControl", " ", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k\[Psi]p", "\[Rule]", " ", 
       SuperscriptBox["\[Omega]n", "2"]}], ",", 
      RowBox[{"k\[Psi]d", "\[Rule]", " ", 
       RowBox[{"2", " ", "\[Xi]", " ", "\[Omega]n"}]}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Omega]n", "\[Rule]", " ", "1.2"}], ",", 
      RowBox[{"\[Xi]", "\[Rule]", " ", "0.8"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u\[Psi]cl", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "k\[Psi]p"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"z", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], "]"}]}], "-", 
      RowBox[{"k\[Psi]d", " ", 
       RowBox[{"\[Omega]\[Psi]", "[", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}]}]}], "&"}], "[", 
    
    RowBox[{"<|", 
     RowBox[{"\"\<\[Theta]\>\"", "\[Rule]", " ", 
      RowBox[{"\[Theta]", "[", 
       RowBox[{"z", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], "|>"}], "]"}], "/.",
    "GainsYawControl"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"u\[Psi]cl", "[", 
    RowBox[{"zlR", "[", "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711975021620277*^9, 3.711975315325276*^9}, 
   3.711990919476104*^9, 3.71199213793712*^9, {3.7119925830697527`*^9, 
   3.711992594295299*^9}, {3.711995412634553*^9, 3.711995414864484*^9}, 
   3.711995576094655*^9, {3.711996090084857*^9, 3.711996090369423*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete control law", "Chapter",
 CellChangeTimes->{{3.71197531982286*^9, 3.7119753227025146`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ucl", "[", 
   RowBox[{"t_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"ubar", "[", 
   RowBox[{"z", ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"v1cl", "[", 
        RowBox[{"t", ",", 
         RowBox[{
          RowBox[{"g", "[", "z", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u\[Theta]cl", "[", "z", "]"}], ",", 
        RowBox[{"u\[Psi]cl", "[", "z", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"ucl", "[", 
    RowBox[{"0.1", ",", 
     RowBox[{"zlR", "[", "]"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.711975324783231*^9, 3.711975500961959*^9}}],

Cell["just checking something", "Text",
 CellChangeTimes->{3.711998196530348*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "you", " ", "may", " ", "want", " ", "to", " ", "check", " ", "this", " ", 
    
    RowBox[{"with", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pd", "[", "t_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"zspecial", "=", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"L1", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Delta]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[Delta]", "]"}]}], "}"}]}], ",", 
        RowBox[{"L2", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", 
            RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}]}], ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", 
            RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}], ",", 
           RowBox[{"Cos", "[", "\[Delta]", "]"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Chop", "[", 
    RowBox[{"ucl", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{
       RowBox[{"zspecial", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", "\[Rule]", " ", 
          RowBox[{
           FractionBox["1", "2"], 
           FractionBox["\[Pi]", "6"]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Psi]\[Psi]", "\[Rule]", " ", 
         FractionBox["\[Pi]", "2"]}], "}"}]}]}], "]"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Chop", "[", 
    RowBox[{"ucl", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{
       RowBox[{"zspecial", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", "\[Rule]", " ", 
          RowBox[{
           FractionBox["1", "2"], 
           FractionBox["\[Pi]", "6"]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Psi]\[Psi]", "\[Rule]", " ", 
         RowBox[{
          FractionBox["\[Pi]", "2"], "+", "0.00001"}]}], "}"}]}]}], "]"}], 
    "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Chop", "[", 
    RowBox[{"ucl", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{
       RowBox[{"zspecial", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", "\[Rule]", " ", 
          RowBox[{
           FractionBox["1", "2"], 
           FractionBox["\[Pi]", "6"]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Psi]\[Psi]", "\[Rule]", " ", 
         RowBox[{
          FractionBox["\[Pi]", "2"], "-", "0.00001"}]}], "}"}]}]}], "]"}], 
    "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"u\[Psi]cl", "[", " ", "zspecial", "]"}], "//", "Simplify"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.711993869449617*^9, 3.711993870041547*^9}, {
  3.711993996042336*^9, 3.711994045647439*^9}, {3.711994306355331*^9, 
  3.711994405655767*^9}, {3.711996102145585*^9, 3.7119961484761066`*^9}, {
  3.711997570250689*^9, 3.711997572886376*^9}, {3.711998153737253*^9, 
  3.711998193405484*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
projection to guarantee that solution does not exit state set\
\>", "Chapter",
 CellChangeTimes->{{3.7119757204116373`*^9, 3.711975745432342*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Proj", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
      "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_", 
      ",", "v2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{"p", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "+", 
         RowBox[{"L1", " ", 
          FractionBox["#", 
           SqrtBox[
            RowBox[{"#", ".", "#"}]]]}]}], "&"}], "[", 
       RowBox[{"P1", "-", "p"}], "]"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "+", 
         RowBox[{"L2", " ", 
          FractionBox["#", 
           SqrtBox[
            RowBox[{"#", ".", "#"}]]]}]}], "&"}], "[", 
       RowBox[{"P2", "-", "p"}], "]"}], ",", "\[IndentingNewLine]", "v", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "+", 
         RowBox[{"L1", " ", 
          RowBox[{
           RowBox[{"OP", "[", 
            FractionBox["#", 
             SqrtBox[
              RowBox[{"#", ".", "#"}]]], "]"}], ".", 
           FractionBox[
            RowBox[{"V1", "-", "v"}], 
            SqrtBox[
             RowBox[{"#", ".", "#"}]]]}]}]}], "&"}], "[", 
       RowBox[{"P1", "-", "p"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "+", 
         RowBox[{"L2", " ", 
          RowBox[{
           RowBox[{"OP", "[", 
            FractionBox["#", 
             SqrtBox[
              RowBox[{"#", ".", "#"}]]], "]"}], ".", 
           FractionBox[
            RowBox[{"V2", "-", "v"}], 
            SqrtBox[
             RowBox[{"#", ".", "#"}]]]}]}]}], "&"}], "[", 
       RowBox[{"P2", "-", "p"}], "]"}]}], "\[IndentingNewLine]", "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", " ", "-", 
     RowBox[{"Proj", "[", "#", "]"}]}], "&"}], "[", 
   RowBox[{"zlR", "[", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.697144447184473*^9, 3.6971444764039583`*^9}, {
   3.69720206208786*^9, 3.697202073261387*^9}, 3.7117788753293047`*^9, {
   3.711781425264481*^9, 3.711781425357327*^9}, {3.711975531098694*^9, 
   3.7119757152264977`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697144472869245*^9, 3.697194400522648*^9, 3.697198224923818*^9, 
   3.697198592062355*^9, {3.697202057109483*^9, 3.697202076342082*^9}, 
   3.697205167449389*^9, 3.697209423186468*^9, {3.69727711694105*^9, 
   3.697277125031583*^9}, 3.697277294720874*^9, 3.697280893311893*^9, 
   3.69728100412807*^9, 3.697311186789898*^9, 3.697312540204007*^9, 
   3.698677942546406*^9, 3.698679827099456*^9, 3.698682187564639*^9, 
   3.698991927483028*^9, 3.698993759640867*^9, {3.711975661906287*^9, 
   3.711975715943314*^9}, 3.7119893865117826`*^9, 3.7119902286726847`*^9, 
   3.711992182915434*^9, 3.711992602205021*^9, 3.711995320661065*^9, 
   3.711996168075803*^9, 3.711998374361117*^9, 3.712029140645753*^9, 
   3.714925829720254*^9, 3.7149294865587177`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"zrandom", "=", " ", 
    RowBox[{"zlR", "[", "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"counter", "=", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"While", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{"zrandom", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "<", 
            FractionBox["\[Pi]", "4"]}], " ", ")"}]}], "||", 
         RowBox[{"counter", "\[GreaterEqual]", "10"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zrandom", "=", " ", 
          RowBox[{"zlR", "[", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<Not good point to test inverse\>\"", "]"}], ";"}],
         "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "[", 
       RowBox[{"zrandom", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], 
      FractionBox["180", "\[Pi]"]}], "/.", 
     RowBox[{"PhysicalConstants", "\[IndentingNewLine]", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"zrandom", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], 
      FractionBox["180", "\[Pi]"]}]}], "/.", "PhysicalConstants"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.698677992146934*^9, 3.698678006466242*^9}, {
  3.698678075485291*^9, 3.698678142472892*^9}, {3.698680310406117*^9, 
  3.698680329593061*^9}, {3.711778875344378*^9, 3.711778875353653*^9}, {
  3.7119757542215137`*^9, 3.71197582006859*^9}, {3.714924531584737*^9, 
  3.714924533133711*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["initial condition", "Chapter",
 CellChangeTimes->{{3.7149245422881517`*^9, 3.714924553568654*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"L1", " ", 
       RowBox[{"uv3", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", 
          RowBox[{"-", "0.2"}]}], "}"}], "]"}]}], ",", 
      RowBox[{"L2", " ", 
       RowBox[{"uv3", "[", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.4"}], "}"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]", "[", 
    RowBox[{"z0", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], 
   FractionBox["180", "\[Pi]"]}], "/.", 
  "PhysicalConstants"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"z0", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], 
   FractionBox["180", "\[Pi]"]}], "/.", 
  "PhysicalConstants"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"nH", "[", 
       RowBox[{"z0", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
      RowBox[{"nH", "[", 
       RowBox[{"z0", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}]}], "]"}], 
   FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}]}], "Input",
 CellChangeTimes->{{3.711975863534773*^9, 3.711975994014957*^9}, {
   3.7119760444714823`*^9, 3.7119761341785383`*^9}, {3.71198842343253*^9, 
   3.711988423537204*^9}, 3.711988457431676*^9}],

Cell[BoxData["38.27767406836774`"], "Output",
 CellChangeTimes->{{3.711975937480481*^9, 3.711975966938488*^9}, {
   3.711976038683714*^9, 3.711976139834549*^9}, {3.7119765448918447`*^9, 
   3.711976546797187*^9}, {3.711977091724525*^9, 3.711977092948284*^9}, {
   3.711988419830235*^9, 3.711988423987233*^9}, 3.711988458150468*^9, 
   3.7119893866674356`*^9, 3.711990228699003*^9, 3.7119921829633217`*^9, 
   3.711992602248067*^9, 3.711995320726708*^9, 3.711996174548559*^9, 
   3.711998374516246*^9, 3.7120291408116198`*^9, 3.714925829774577*^9, 
   3.7149294865789003`*^9}],

Cell[BoxData["64.47408845686502`"], "Output",
 CellChangeTimes->{{3.711975937480481*^9, 3.711975966938488*^9}, {
   3.711976038683714*^9, 3.711976139834549*^9}, {3.7119765448918447`*^9, 
   3.711976546797187*^9}, {3.711977091724525*^9, 3.711977092948284*^9}, {
   3.711988419830235*^9, 3.711988423987233*^9}, 3.711988458150468*^9, 
   3.7119893866674356`*^9, 3.711990228699003*^9, 3.7119921829633217`*^9, 
   3.711992602248067*^9, 3.711995320726708*^9, 3.711996174548559*^9, 
   3.711998374516246*^9, 3.7120291408116198`*^9, 3.714925829774577*^9, 
   3.714929486579709*^9}],

Cell[BoxData[
 RowBox[{"-", "115.525911543135`"}]], "Output",
 CellChangeTimes->{{3.711975937480481*^9, 3.711975966938488*^9}, {
   3.711976038683714*^9, 3.711976139834549*^9}, {3.7119765448918447`*^9, 
   3.711976546797187*^9}, {3.711977091724525*^9, 3.711977092948284*^9}, {
   3.711988419830235*^9, 3.711988423987233*^9}, 3.711988458150468*^9, 
   3.7119893866674356`*^9, 3.711990228699003*^9, 3.7119921829633217`*^9, 
   3.711992602248067*^9, 3.711995320726708*^9, 3.711996174548559*^9, 
   3.711998374516246*^9, 3.7120291408116198`*^9, 3.714925829774577*^9, 
   3.714929486580414*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Chapter",
 CellChangeTimes->{{3.714924557352509*^9, 3.714924559080677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stepsize", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NN", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stateList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inputList", " ", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tensionsList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kk", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "NN"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"time", "=", 
       RowBox[{"stepsize", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"input", " ", "=", 
       RowBox[{"ucl", "[", 
        RowBox[{"time", ",", "z0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensions", "=", " ", 
       RowBox[{
        RowBox[{"Tensions", "[", 
         RowBox[{"z0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"stateList", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"stateList", ",", 
         RowBox[{"{", "z0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"inputList", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"inputList", ",", 
         RowBox[{"{", "input", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tensionsList", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"tensionsList", ",", 
         RowBox[{"{", "tensions", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"zdot", "=", "  ", 
       RowBox[{
        RowBox[{"Z", "[", 
         RowBox[{"z0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"z0", "=", 
       RowBox[{
        RowBox[{"Proj", "[", 
         RowBox[{"z0", "+", 
          RowBox[{"stepsize", " ", "zdot"}]}], "]"}], "/.", 
        "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[GreaterEqual]", 
         RowBox[{"100", " ", "kk"}]}], ",", 
        RowBox[{
         RowBox[{"Beep", "[", "]"}], ";", 
         RowBox[{"Print", "[", "i", "]"}], ";", 
         RowBox[{"kk", "=", 
          RowBox[{"kk", "+", "1"}]}]}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697198269598672*^9, 3.697198289200053*^9}, {
   3.697202088674714*^9, 3.697202090386572*^9}, {3.697202170574267*^9, 
   3.697202171662752*^9}, 3.697205172648633*^9, {3.697209569173438*^9, 
   3.697209571460923*^9}, {3.697210226489683*^9, 3.697210226617011*^9}, 
   3.6972105138903093`*^9, 3.69727694541749*^9, {3.698246497586747*^9, 
   3.698246497908819*^9}, {3.69824658310907*^9, 3.6982465832087812`*^9}, 
   3.698247795137043*^9, {3.698248014361812*^9, 3.698248014686933*^9}, {
   3.698249079543661*^9, 3.698249079717051*^9}, {3.698253971334147*^9, 
   3.698253971432908*^9}, {3.698257885071991*^9, 3.6982578864275637`*^9}, {
   3.698258492328754*^9, 3.698258493388809*^9}, {3.698482387564966*^9, 
   3.698482403840377*^9}, {3.698688596856687*^9, 3.698688602368916*^9}, 
   3.711617601243554*^9, {3.711724007342638*^9, 3.711724042303399*^9}, {
   3.7117240758676853`*^9, 3.711724078979582*^9}, {3.711724109601441*^9, 
   3.7117242594754467`*^9}, {3.71173576220477*^9, 3.711735801501349*^9}, {
   3.711775686001851*^9, 3.711775723279613*^9}, {3.711976206766103*^9, 
   3.711976259211121*^9}, {3.7119763600735397`*^9, 3.7119763921258593`*^9}, {
   3.711976448110606*^9, 3.711976456413948*^9}, 3.711976659802031*^9, 
   3.711988472169005*^9, {3.7119908264657507`*^9, 3.711990828982535*^9}, {
   3.71199260854082*^9, 3.711992612216713*^9}, {3.711998506104608*^9, 
   3.711998506640995*^9}, {3.7119985529546347`*^9, 3.711998553630517*^9}, {
   3.7149258844283857`*^9, 3.7149258853419867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["100"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929507264579*^9}],

Cell[BoxData["200"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929527931079*^9}],

Cell[BoxData["300"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929548614043*^9}],

Cell[BoxData["400"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929569317257*^9}],

Cell[BoxData["500"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929590067919*^9}],

Cell[BoxData["600"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929610948462*^9}],

Cell[BoxData["700"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.7149296334022627`*^9}],

Cell[BoxData["800"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929654207129*^9}],

Cell[BoxData["900"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.714929674985608*^9}],

Cell[BoxData["1000"], "Print",
 CellChangeTimes->{3.711976679138633*^9, 3.711977077104793*^9, 
  3.711977113567871*^9, 3.711990238071413*^9, 3.7119921927528267`*^9, 
  3.711992622314279*^9, 3.711995332372778*^9, 3.711996197092248*^9, 
  3.711996365212852*^9, 3.711998396188043*^9, 3.7120291618304358`*^9, 
  3.714925852609338*^9, 3.7149259131389847`*^9, 3.7149296957389593`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"NN", "=", 
   RowBox[{"Length", "[", "stateList", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7117694907770977`*^9, 3.711769499002736*^9}, 
   3.71198847869821*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"XTicksLabels", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"600", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"800", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "10"}], "}"}]}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures_no_attitude/matlab/data_state.mat\>\""}], ",", 
    "stateList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures_no_attitude/matlab/data_input.mat\>\""}], ",", 
    "inputList"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7149261874596777`*^9, {3.714926428733913*^9, 3.714926459428475*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error position", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"errorp", "=", 
   RowBox[{
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "NN"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], "-", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pd", "[", 
       RowBox[{"stepsize", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"errorp", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"errorp", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"errorp", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
         ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorv", "=", 
   RowBox[{
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "NN"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "]"}], "]"}], "-", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pd", "'"}], "[", 
       RowBox[{"stepsize", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"errorv", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"errorv", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"errorv", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m/s)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550255215838*^9, 3.69855026401581*^9}, {3.698745561186461*^9, 
   3.698745577829392*^9}, {3.698745668643263*^9, 3.698745710637939*^9}, {
   3.711724385452343*^9, 3.711724392971949*^9}, {3.711724441810029*^9, 
   3.711724467387265*^9}, {3.711724546412539*^9, 3.711724603728877*^9}, {
   3.711775754673036*^9, 3.711775767459071*^9}, {3.711976273950782*^9, 
   3.71197633529193*^9}, {3.711976459925086*^9, 3.711976489937935*^9}, {
   3.711990387751835*^9, 3.71199038784503*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
rZj3ym+sPuZf48CBuUu0Mf+a8cNbtf9YOapx/jX1muBDSb8an88qjfXmZC9p
2/j8LtN8Xs7vvd+74HnOlgx+aDG+Z6Mr2AVP/jTfYor3G1u25Xhd04GNrtR8
3oqXLqcs8L7TeO0vn/lWja5n6xUnzx+F941oGdeHvg1pNbzRWuyKw1/bPsT7
SY8t7igaVTC60QbskJSwl/Zj8H5k91o0d8zxsY02ZauyHXv1tcP7UjNe971x
W+wbbcM27ebZp5MD3p/s1Jfh3TPwPnVk18/p6dR6It6nbK3FNZtW4f3rxlbu
3FCrPRnvV8396dRMSsP7OpBdmd3pghbe5zJ2Tt+r16/Acs39eKlPpjvj/cuW
2Qxe7IL1QDI74diZNobT8T5mO/2zIVANZ2nGG1q5ZDfWE0rN57dsmBCO9UYe
W29t/7PWM/C+1vQb1D4SYX1SqPl7zXq75jKs0uRx2fcw0w3zz67SaXrAC+ub
crbf1PN/9XfH/LONwl/croPV7Mcd/Dqdw/qokm0rCjyXjvVTNdugvOftOR6Y
f3brKy9H9sN6S7Sc8+Zp//oOa7GT3du2uOiF+Wc7hozrNxHrNQN2Zm1L2SFY
zDZfdKTcAOs7U7Zf5X5HBWzOPnAm6M5b2IZt1dJPNhXrQ2JHD+nV+QTsyB6u
Z3ulm7CeZJtlOyxfAbuxVzRUjfwES9kmAY+/u2I9Gqjpb1W+vxiWscuqU+b0
xvpVzq6ueSJKgxVspx3/bKyBk9lFffO7zsH6N4MtHVOTfg7OYj/tHPyhH9bL
Srap/d8D1sJ5bM8dT51/wAXsN1NqZkix3i7UfH6y/7BLsIo9MNelbkAQ5p/9
4mfVqky4nC265lPTAFdo/p7W3wZ5Yz2vZuv2fDX8ElzJthyQ0G4A1v/V7PGb
+h1dC9ez60dad62HRQn8fYxuN8kD+wctdm7zASNKYT12pJHogwn2Gwbs6xY6
bimwmF3235P4z7ApWx3QTDo9DPPProgwrDsO27BPWZSONsR+htjahbuGL4Yd
2Z2ax716BkvYLr/iuhpjP+TGHmP8rus0WMrO2RP1dRkcyN5nIso+AsvY434u
aP8KlmvGc7nj0UHYf7GPGIvkdnAy+7FunTQaztDkXXhIX9ivZbGrYiw234aV
7N8F8vdNsb/LY5sr0ppZwgXsATfmV0rhQvaoLpPWp8MqdnxIO+0zcBnbYOor
+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
onfJ/wCA8wgQ
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
3ZcswPXdW6ZW1NP9ZSSe/9hGxe80c/+J5xmXDpifRE7G+pt7kmkOzP0o1g8o
+CzWJeegl1v4xfQni3D9wYlHXzTS/W0Bnvfx4n3+OXIR1m/1yRicQi7FennX
ziY+WYz1ugMbGuaQq/H6p6k+7R5KrsHzVjbPXvGO7q/rcf2JhrHicrIE17/z
V+LvJLdiXf7E1in+ZCl6/7rvGkvJnei3dmUwlszaCOIiQ5NtP+h+XnEjwJrn
7/s9ILOx7mD59/hRsirab2hNTDyZsxGE578ej+aRdbA/IuzBMT3m8wKuD7kR
JjeIbLQR/z69fJr8hj5fAK4flj92wVWyGXrzsPDxOWQu+p1Bn9nBZB6eB2FN
wSvJfNxPKXVC80SyF55Xe/ZdrBxZgBaUz1zeSJ93Inv3n6O4pIQsRB+IDvbN
JCfj/jpPfK/7k9Nxf/+M9mXLyTm434KZrX+0yaKNvY/vqlcscgFac3X/L430
easI9+eFdk6/RC7F+tMu+X07yWLcb/FZRcNgcjXWp+s29qwm1/Q+vt+sfkwl
1+P6weGgNoAswf3rlgf4vKPPe61Yt9A/2lpJluL12y07lZVL7kQb/jHxjSez
EkHsaDY1cC1ZMRHfL8Tqh+aT2VhPKrzTpUZWRYcqf0nopM+fHPSe70b6dWSd
RGCdBNvhF8m66BK5DtWdZCN0rOD8ilAyYH/h4CVHrchmWH98HqbOJnPxekyv
rnquROahTw9WLOqgz8N8dNjkQWcek73QfR2lT4vJAtz/2pXV2lnkSHQ798qe
ELIQ1+uNv21gTU5OBKGK+YBOfXI6evroQRIVcg5en75JacMn5vM5+kg2e2ER
uQDXe72Y3R5MLkI/ejq72YBcipYP0xj7mz7vi9EtCn0PlZGrcb8Ij1ZPIbkG
/YtdJzAh1+N6W7/aq4pkCdrnWcvq+7E0f/Tuuv6cTLIU+5XNjPXsyJ3os+Gb
EsaQWUkgXLimcdhr+j5CMQlYwULjF8fIbLR17pHX/mRV9CpbxQn6ZA72nw7z
yO2i7zd0sP5gapHtNbIu+vi4liXJZCO0esb39WvIgP1bN724NpJshp4v2c59
tYHmj+vVtvZTPkrmYX3gNkPFADIf3bBAbaYh2QvXH7LL39xD378I0AUjnwy5
RY5EK7juq9xBFmJ/iuTXUR45Gb1as+XieHJ6Uu/fR17Hh0iaPzprqQ3vPFmE
6w2uPnsfSy5Az3RtPLSMXITuebsufji5FN2cHbnpBX1fJMb9NN1UzuaTq3vz
KC6RE5Br0MsnDAibR65Hn10dNKgfWYL9l3W3VD4Mp/mjrfJ4+/eSpeiZ1T+y
Pcmd2H9ONeikLpm1CYQJW5qa/9D3WYroDZk8/Vtk9iZg8Rx+Hs4kq2L9fOnT
ac5kDtYrbEY+mkzWwbp9ecP2H8z3ZeiaEDPPa2QjXK80MNlqGxmwHqZ3g2dP
NsO6wsMZoRPIXLTz0F95X0No/ri+J8TqQzmZj17yJWZJCtkL1z/5eOaMLVmA
FrlNm6FFjsT1fh8Mrn6h7/eEWG+9pexSRk7GukU3m72VnI7eax9TY0POwfVa
WwoOaZJFWO+n3h7zJYjmj245kLu+jFyE65cemeSylVyK9fR7Ejdbshgd2jA7
WItcjev7lKamSen7yBqsw2a7s+Xk+t7H99hASQpZguvX3B6jyiO3oldIB9hP
IEvR71j5Jm8Daf6989r+8108mbUZWNoDR+eokxXRY9qm210IoPmjvx+z0uKS
VdGl9Zf+fKDvTzlosd7upk1kHfSWfVMfcMi6aJGx+OYVP5o/uizlWLUtGdB/
zY2ffPWl+aNjT7x7m0bmoqXGSiwdMq+3PshofKUPzR9ds/u5mTPZC+3SlhD+
m77vFaAlO24UZpMj0b8LF7+eSRaip38Qadz1ovmju/ZmuK4jp6ONDz88JkfO
QVclanTsX0/zR+u5rwEjcgF6cL85mU/W0fzRWg9L3geQS9ETqstgIFmMTtk1
70A+fV9djS6Mm9kN5Br0Av4RfqMHzb+3/9yxWxFkCXp1ot0sZXIreqBfnei0
O80ffSPTRnkFubP38RANSHnrRvPfgvfHZfr9EsiK6JTE8ZvGkNno8z1aA0vp
+3VVdO6BPdlWZA6aPbVN+wuf5o9eWrnxSgpZF+18u4k3kWyE7izp9yfRhebf
u3/mF6srzjT/3vX9jpV3rKX5o1XHec2dQuahR/4RVrs60fzR705Z+O1xpPmj
t49dOfER/T4gQBu9//ZLkRyJNl7w6jXY0/zRaXfOtkbyaP7otZsnDjprR/NH
G+ztt7LNluaP3mk0+dR4sqj38YuI0XWwofmjOdP+1GVa0/zRclfP5t+1ovmj
B/ct3ydPFqM1lFeUGdPvG9XoY2N3DYiwoPmjzxh/3lTEpfmjWXud19euofmj
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
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.956370033903135, 0.01950382923795313}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.956370033903135, 0.01950382923795313}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.698566978625875*^9, 3.698569164713573*^9, 
   3.698572372333726*^9, 3.698573211656267*^9, 3.698575087901354*^9, {
   3.6985769951525927`*^9, 3.6985769990099382`*^9}, 3.6985820355583477`*^9, 
   3.698596218402944*^9, 3.698596424105398*^9, {3.698636319025185*^9, 
   3.698636326433777*^9}, 3.698643317180711*^9, 3.698651342870118*^9, {
   3.698654145350697*^9, 3.6986541692102823`*^9}, {3.698654975157387*^9, 
   3.6986549781932364`*^9}, 3.698658876040854*^9, 3.698660503413991*^9, {
   3.698661225467407*^9, 3.6986612512035313`*^9}, 3.6986677240339622`*^9, 
   3.6986724792202272`*^9, {3.698676769057242*^9, 3.698676772572802*^9}, 
   3.6986854904274273`*^9, {3.6986855600666*^9, 3.6986855637809153`*^9}, 
   3.698686888580523*^9, {3.698691013930455*^9, 3.698691019641794*^9}, 
   3.69872148592509*^9, {3.698724331755579*^9, 3.6987243411475973`*^9}, 
   3.698724471243079*^9, {3.6987281818980227`*^9, 3.6987281949352303`*^9}, 
   3.698728423162883*^9, 3.6987289946821404`*^9, 3.6987295678281813`*^9, 
   3.698729682665985*^9, 3.6987300402985973`*^9, 3.6987370303202047`*^9, 
   3.6987455191920357`*^9, 3.698745556479059*^9, {3.698745671791685*^9, 
   3.698745720340805*^9}, 3.6987530830482397`*^9, 3.698753125799821*^9, 
   3.698755273431437*^9, 3.698768946011731*^9, {3.698769349822709*^9, 
   3.698769354829199*^9}, 3.6987693870158463`*^9, 3.698939546793846*^9, 
   3.698939614839422*^9, 3.711724352190515*^9, {3.7117244557919703`*^9, 
   3.711724471524047*^9}, {3.711724530006316*^9, 3.7117245507668247`*^9}, 
   3.711724594580964*^9, 3.711733363894684*^9, 3.711735773814241*^9, 
   3.711735970376442*^9, 3.7117360253098917`*^9, 3.7117695018179197`*^9, 
   3.711769694149818*^9, 3.711976490496048*^9, 3.7119765565927057`*^9, 
   3.711976681802099*^9, 3.711977079626976*^9, 3.7119771146602583`*^9, 
   3.711990322977483*^9, 3.7119922777858963`*^9, 3.711992659742354*^9, 
   3.711995373474688*^9, 3.711996248683886*^9, 3.711996433289281*^9, 
   3.711998459703909*^9, 3.71202922496102*^9, 3.714926116437327*^9, 
   3.714926204889531*^9, 3.714929696070301*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxVyVtI0wEUx/E521r1UMSIqEHTQnRbVurMTPf/ubksX6KCRLsMI0WabeEl
VqGMhcWqB0tal4GWaalPK6J6CBIznQ3b0jbTzLZRQWEURmoFdqHfHjpwOHzO
N+GAdWeZWCQSaf7s3/tvvgii/wcVYbck2dLIvwx90eoV/spr9BLcm5PUaJo7
aDmaS4QJ7UEPvRyqpVHZ6Zq7tAJ1Qyu3f6h/QCux9cKArdjxkE5E9ujg0xld
N70GMsN5hyWrh06CdEFPrnZtL52MxMBbyU9FH63C3rH+Ftt8L62BK7XgunVy
gE6FUHeyqdPno9cjNGJaPdM2SG/A8fTq0nU2P50G7yOx81JrgE7HEdNl6WTD
czoDxTvMRbLyIVqLo9p3XRH9MJ2J8vHOWYviBb0RZ6/EP+uYijkLbuFwgvNJ
kN4Ep/uWetHFEJ2Nqpteo7p0hN6M2sX3fe9TXtI5qJSeE+d8jjkXc6b9YtXt
UVoH1Yl5NzzWMVpAhbLMHFC9ooFh8w/HmShtBxr3ZbSHXePsedB3VS0LFrxm
z0ORZ/fVQ99okR6O75nmtpYJdj1KTA1pp7a8YTcg1P8rTv6RthtQ2N2blGIM
s+dDuc071dpE2/Mx7fg6eywc60bsWVg/7VFH2I3Arjv+wtqI8CleF7cqaIT5
sUuuaY8IvwGcTMYh
           "]], 
          LineBox[CompressedData["
1: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
0wz5/rc6fTacxW6++NrtwbCK7Zp+SNkBzmO7u+wp+Iz3gdqQf0B/11twMVsY
dt7zIKxhlw66/2ANXMa+fvlj1QJYy45bEz11GFxl6P/iPVnAOvaayRcKPuJ9
Vs126b50WxmsN9Rzz9zGOXAt27Flk09yWJDE85n1YJ4YNmWneLqJrevPQ9nz
VJdKf+L9a8m+tObPi3/DQramzVrXfNiGbfl+n2cCLGKLw+M/etS//9k1maHm
1vXvf7bywbvSH1gvuCYZ9tvTTG/CYvawnEb3VbAX27xq4fAwWMJ2SK0aOA6W
sqtvniqxgGXsEa2WPHmF9Yyc7WUzeksxrGALFux4pYSV7MyZt//ygtPYJj+H
z7KBs9iOY+d//oD1lYptV/JvyAY4j73H4eOAvrCanfbjif1lrNeKDeN/k4ZI
YA370AqrHz/q13/sNdF7r22uX/+x7Xstr+4PV7G7Dhk3vRTrRx1735241vPg
avYPeWHXb1h/6g31+y1RrIdr2V93tB3WAxas5+/D4+EeRVjPmrJV2fMuT4LN
2NsavN7yGOtfS7b3CvfrIbCQ/e5hnb8JbMM2s5jnn4n1tIj9OKrqujXszPZM
u6kqxnqc2A6iXc9cYVe2csnezVVYv4vZ9pudTy6GvdjVYw551NSv/9kpHmK/
VbCUXf5A9r4tLGN/HeH5ZSf2D3K2q3BcVD9YYei/JCH2BPYfSjZNG9lwDJzG
dp52vtVN7Fey2L0Guai8YBX7qMXD08+w38kztPve8V0Gq9nie+It37A/Kmb3
3BIxNwHWsEPbLz7SBC5je01Jcuo2FfVnP+zq5WSH/VcVe9lz6SIX7M907MnX
XpZPwP6tmn39xdfFM/D7gt7weYoKR0mw36tlyw7Yei/FflCwgf8+Z0ScjnBF
/dkvRmX6JWL/aMbutSfZS4n9pSXbu3LGzjT8XiFky5c8ds7CftSG3dLJwm4X
9qsidt38p7F7R6P+bMug7nYHsb8ltv/0vaTG/teVbfMzJSZgJOrP1mt3uYVg
v+zFVkxoUhc1FPU3tN8dsSl+COrPli45abkC+2+Z4X7R9zatHoT6s2UDaloo
B6L+bOGGOcp12M8r2WaN1wvNB6D+hv7Ot2e274f6G/oPeVJiZo36G+Yz/nlA
SyvUn00jG5S37I76G/pnLo/72QH1ZwsS57aubIH6Gxz2y8Lzu/F8oszgIXcW
dHxmPL/QGtzqzKIzJueM9Te4UahjHH7v0bE1baW3szsbXW2YT0L/uvk9jNYb
8lhfuRDa2+haw3zuFqnX9DVakMz171VavB3nLabsshavX1aJjDZjWwYuDHmB
8xlLttfx2RF6R6OFbPVu8bs6J6Nt2Po2j281G2K0iK07v7NTx6FGO7NtXJ0v
9hpuNLEP3fIqdcD5kSv7z7i5KSoyWswW3jPV7cd5kxd7Q2PLmYX4/Upi8GrZ
myKcT0nZFpd/Zpfg/ErGrmhYGFA6zmg5O3Ro1JSbOO9SsO+bTxlXid+/lGyn
q7buj3E+lsYWtGu98CXOz7LYBe1r13yYZLSK/WPCe3UNztvy2EkB3578wu9n
anaT+V3aNsV5XTF7RJ/AUW2mGq1hH3/ys6gFzvfK2A02vL+aCmvZ3v+ZVbXH
eWAVu+OXr0+2wDr28jRrXRecH1azHUc4390F69mdD5y4aIXzx1p2n9OD9+yH
BSm8Xlvrxs9D1J99yXXt0ELYjG05U/HRAeebluyXbW+kF8FC9rm3Jj1ccB5q
w85z02w/W//7H3tFcpZgFM5PndmDa6zdL8HEPprfbOUEnL+6sjfn3NtRDovZ
M3Y77piC81ov9m6n4kQtLEkhxbjshmOn43xXyu0DLx2tvgPLuH3jWOkyL5wH
y7l9sfjijfuwgr2gwL+FD86PleyqwvdWT+A0tsZaYLEA581ZPN4/C0bo6s+j
Vdye38ltuT/Oq/PY80Kvfv8HVnP/Te+9Ry/G+XYx+5Nv/vxqWJNCmk5xffc7
4jy8jK+f0DKxSQSsTSGhe5H1lONwVQrp7F5HxHyDdYbPy/ZM8iCct1enENm0
n7ImAtbz/UInxfodh2tTSDVm5dZe32BBKlFt1I8yR5zvm6aS6PZL/dTw+vP/
VFInpNwqPlZ//p9Kwnm2rxt+gYWppJsanNbfAb8f2KSS60pTS+cQWMT9czdV
9FDDzqn0ovfOdm8+wJRKyt85tmn9/c/9HygzMkU=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
C+0of3R1tuujRhvKX4zf08W1S2KtlFZHK56wz0y2pN8DzY/6/v6LudLaaOnE
krBtZvT7oGWuxo0rZiutjxbcXZFvbUS/V894mdrNx/WUNkaLwz6JBw2n3w/N
UhxWn1l96f+2QoP13PkjRlxW/p49/f0bV8TqKc1H14XY+mRzlRb0tIc/t6mb
qbR/z/whW+QfTZQW9njPLJ1P85UWods03j72X6C0GF2meTSq1kLpVLRo/tM+
YxcrLUHLw7acX0N/n8tBa++cd2G/jdJSNO/DgOl1y5QuROsbZNt8tlNahvbh
s3ay7JUuQ3NXblDp5aC0HG3VGPZfF7kaLfl55t+O5UrXoePvqDx/6ah0E1r9
wM0ftU5KK9CnSh3enXBWuhWdd+5ATbqL0m09/bdnH1/FV7oTvfT21YMzXJVm
JQJL12pPZTdZHV1d4TTympvSbHTtuvYLye5Ka6NzbsH5eR5Kc9A+pc/1vpL1
0c0hMHTfCqW5aPY/ORIbT6WNe7zk64nPZOgZf63hhgwvpa3QxUE/+msJqP49
z+PyGDzJfPRvtbdvDpIF6K4Cbr/3ZH8051ZR8eSVVH90+hOzR8FkEXrRpFO7
ishitMj5+pfX5FR0fMbwj6O9qf5o5yYjiTM5B33VUfJyM1na83wbsz+VkwvR
0u2Ssg9kWU/8tnKrkauo/uhTcjhkSZajSxu5TSHkajR/ztZX2eQ69PClCxvP
k5vQAYcnH39CVqB1vLRiusitPb+n+bFZf/tQ/dEK7byvc8id6IY34accyawN
wNKYVLo+mKyOrht2wz2ZzEa/uzPMbhdZG21V+sqrmMxB85Oisi6S9dHC0vYv
tWQuWv5vdOIjsjE6KJu96DUZ0CZJ5YvayFZo29N+aZ1kHjpkWdvQbjIfHRA8
/kOv1VR/NDukakRfsj964rDUPHWyEM2q0RAzFqE5d1qq+pDFaAjaE8uMl4qu
nXR8dxfNJ0F7qydxmefJQT/NjwPmeaXoOJ/Xd5h8CtGRtzRaHpNl6LubRm+4
Qy5Dp0rtTlwhy9FN5eeEpeRqtNY8YU0BuQ69IyL2aia5qaf9+h1BPFnRk+/L
lQf9yK1ou9YhO+2Z+qNVtp43MWHq3/N7Lx2fPYapfxKwZmzVKurL1B+9rWZe
4gf674mNLrtkp1NH1kani1vFpWQO2vVk/sntZH205WGVcxFkLvpdgiTbgWyM
nr/86jIuGdAK5/6vB5Ct0Kc6b3i30vvDQzf2dq+uIPPRtTcHjcojC9BmM7he
kWR/9PlPP3NsyEL0hE0Ha8eQRWibZI+u78z7j36csXBaDfP+oy8kRwXtJUvQ
NbvVSoTkHPSvmJ+9FpClaBmPv2YIuRCdrTLi1XNaj2TozwYT1srIZWiOZdjU
BLK853krG3vbkKvRdeMmq44g16GvDpbwrtL62ISecujpDz5ZgT4eWK3ygdbT
VnR5rjxqHbmtp37Bk9wHkjvRxeB5LpfWZ1Yyjnc1f6c+WR2tx9H/c5LWczba
c9SYdjOyNtrC/FDcddoPOGi3Pteky8j66Ib38QH3aP/gorX2XX7qQjbumW9i
mNpj2m8AHffd74UH2QptqBG8/gntVzy0fITpCw8yH/1pb9Lgx7S/CdDe/V4N
5ZP9e8a73vH5Hu2HQvRwX5NiW7IIrXOSa1dN+6cY7V9r+QzIqegFZo+9y2i/
laC7tBYpppBz0GV/bq84QPuzFO3oUPpcm1yIlk3nhKfTfi5D6+4xHdbN7P89
+YtG1wvJcrToREPRcx7VH21i7lFkT65Daxc4FiXS90QT2irYdqWnLdUfHa/n
lTyHvj9a0Tln9TlDl1L9e+rROBPeW1P90Qqdn5+v0PcMayPGT7prstOK6o+2
uNjLMJC+f9hozrWLt80WUf3RusnaUwZZUv3R6fuGOT1bSPXvibeU2h6n7ysu
WjJu6/h4c6p/j3N3t1gB1R9duOW5ocE8qj9ayF645dJcqj9aYGf/n/0cqj9a
/eSDLS9nUf3R4sNRLhEzqP5o/3N7hSrTqP7oav+ZD0ZNpfqj2+L7nzOaSPVH
y95Kj1uMp/qj2QPEzxw5VH+0Qu/cq6vDqf49vmY770w/qn/P/MevVqx+o/x+
LUTLvy/qp/17nrL+6Lo+Y6/9Zs9X1h8NPE3LHyOVlqOlXY9z48YqXd3zPOdO
G6ydoHQdOud95oR1hko39fy+JXuM5VylFWiPXqFhC6Yr3drT3yPW8NpMpdt6
5t+ly7cyVroTHdmh+rLGRGnWJnzfvtZdsKPveXV0rVtU/b35SrPR0kxxP0Pm
+x/tfPTB7JAFSnPQPyXhgbKFSuujBU3aeV8slOai4wcdvjJjkdLG6KNlmg3R
i5UGtHiBc00ZnT+s0IXdOfk/lyjNQ6ty+i4xpfMKHz38yKvL65YqLUDzQzJ+
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
uRrtMfVw2nRyHbqt9jB/BrkJ7X5qcBtjBTompcNuJrkVXf3QS8S4Da2YumoN
4070na6B4xiztuJ6UBR6kBlPHX1t8842Zn42+sWzLDXG2ug5T6KfM8/PQa/e
vzSFS9ZHDzYf/53Jn4u+WDpoymSyMTrxxcipk8iAbj/s9J8+U3/0t6rb6XpM
/dFXOrLejmPqj266dWbQGKb+6B/PFnT/zdQfDQcXl41k6o+23njPZARTf/Sy
xo5NQ5n6o3lN5/IGMfVHB17mxvdn6o/WOOo3vi9Tf/SiQ0E5qkz90WYlyxr/
MO8/Ov6sdnMn8/6jo7MfF39l3n/0fyMOLP7EvP/oyt/ri1uZ9x+t9jX+8Qvm
/UcPyCtsaGbef/TrLeyc+8z7jx5iXTG+jnn/e+rjULPuBvP+9/w+WnOkFcz7
jz7Rqb31AvP+ZwBrhZvI4hTz/qM3ZPhcL2bef7Tmi3dDmPVIG+2Uqz2RWa84
6JG/fvZn1jN9dJZZfhmz3nHRSblDuMnM+492sPEOX8u8/2izDbnrw8lW6JSo
Gpc1zPqPLnHv/unFrP/oimCLNc7M+o/Obj28bymz/qONNGcfXsCs/2iDCd3R
xsz6j+6dPHDIFGb9R59LCBWNY9Z/9Oj4aUe1mfUfvfbjqsMDmfUfPdBhsFCV
Wf/RBcZWaj9o/yrsycd8uM97sgx99p+0zGfM/o+Oyjm+6R6z//fMl561pIrZ
/9G+n62azjP7P/pm/cNpx5n9Hx3u6eRawOz/aJWnN2yymP0fnVxmqZHC7P89
v3fMg6xYZv9H963a+j6Q2f8zcf2OjdFkvh/U0XUp+/8w3xdstL/WmHPmzP6P
Zgd3w3Rm/0f3G2ibrcvs/2ijfJ0zw5j9Hz2VtXZ/H2b/R+dC7IofzP8/gJ57
eELLm4j5/wNMpsoQ
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
83w79L+ZHbpXrKj/aKMdJkv+8Kn/aM6Mu3PnkYW43tSGdwN+rqT+o22Oq7mH
WlL/0VYLyiK/r6D+o2uqXjoEL6f+43q8ywKNr+bUf7TYw/iEcCn1H22ZskPn
82LqPzrydkKqP/0+IcX1KmxcPn0wo/5jvMw60trHlPqPcXFLUErdAuo/evGf
2bvvGlP/0ZpJzk9vG1H/0ZM99MOrZ1P/0Qmn+oZWzqT+o0fsi2mp4FH/0R3O
bo1bJlP/0WrLHg7Zokv9TwXGSbwhTGM09R8t+vbnyTAN6j9a8XGkbHPHta7+
ozkmzztXfzPp6j9avHEQt4KzoKv/6B5FX0cXaXWZlwrinlM3zrYY12VDdKh0
1Lr5k7oMqQCz+lQ0D+F12TwVcnK+J13qM7PL/FSQle31U2dmd9kuFfjnzCNv
fjXssiAVeFGy3KZX87rslQqKqTNuTK436bIwFaS5PNu1CuiyCPfn+GQg18as
y2JcX6vI58Mt+u97UnB+Ge/8GZPFXZbg/goa5toX0e9Xmbj/qJzFb8eYdzkH
XXts6LL0ZV3Ow/U+Zn0I676iy1L0F6+/7kKLLpdgfu2iRLWnll2WYVy4odjG
nH4vq8K450nnMfb8LsvR+k3v3fpZdbkJ88U+kLTIyArcn2mPVmnw6i4343pO
lWlFutZdVqL3PNV610huw/XeZY+xSKbf65htIAtdMv/x7LVdVtsG4DK31843
ZM42YG6u1nJNt+my5jYQv9cZsQpsu8xFR8zL4beS9dBDNvFd9tLvgzxcL4df
G2VqT/3H9bZ03tjfQgYc3/KmqSRtHfUfvefeFbnReuo/jucYaT99TrbDeN+4
4qYEB+o/xmfy513To98nvdChN/1TbpOFOF7z7oAZ/k7Uf7TS4X1xP2fqP45v
u1zZP5+c8r/9vLqWpSug/uPnM44bNCSEnImO7vbxy3VyDvrMpMPTBtDvpXk4
v/fuXtXryVJcf3/+nmsnyCUYV4290/cbWYZxu/qJRfNdqf/4eaUtmXkymSxH
86ICv8rJTehl0wO3DqffaxXoC943AlzIzeimpM4DeWQl5vP0vzToM7kN8909
mlFj4E793w4QGj7rdgRZbTsw9waZ9r5G5mwH8ZQTGxK7baD+o9ckr52/iMzF
+U1Lq6YlkfW2g2zBs0jbSjIP13tTpl/ci35vNkQfYAoXLyUDekDgzZ5JZHNc
v7502c8bZD7GrVMGDermSf3HeMQOxm4+WYAuvfq7QkT2QrutbbE/Rxbi/End
KwZ+JIvQpe1xH3Tp93AxumHkuDeO5BScP6pHYcdusgR9UX867zY5Ex2vURbN
eFP/0X/mhLwyIOehm6yDnb3I0v99Xh5vP+8nl6B16v6m3SHLML9K0I8lneQq
jPcvVVef6kP9R5+QJz1aT27C8b0zL13YQlagJQ/bD1wgN6NTrU+lviQrcf7N
e/qx/ejfA7ShS5b9iZpDZnbg/eZdQqSArIbWn2oZlULmoEf2fLqpkKy5A8TG
jyuiG8hc9NGTuZvayXporWEaIm0/6j86L6kiwJRsiC6Y4u/sRgZcP3NMpXkC
2Rzj8yL3TTxK5mP8Av8cc4Nsh/FPitY7CrIAfTFjwvZOsheODxq5EobTv4cQ
YtwqcM2bmWQR2rR9TpQlWYxeuv0f40FOwflbEq+ERpMl6Od1iU3p5Ez0H5U4
vZPkHPQw56fuV8l5uN7qt3e3yclSjAf67D30klyC8ZV7Yw98I8vQj5mXcSoB
1H8cv1d/2OpBZDn65JktvbnkJnRsvzN5U8gKnK/6r32aIbn5f+vzO7PMyEoc
39Kx8PMKchu6YLaP3hoysxPfnzYOWbqerLYTmHmCH8tdyBy0zpDymR5kTXTT
l8XdfMhc9PfLy875kfVwvZwDecsCyDyMG0xfUs7aEOMOyZyxrAHjsgmMB87/
Py4x5ac=
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.33563175689508296`, 
        0.5514126207473117}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.33563175689508296`, 
        0.5514126207473117}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m/s)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.698566978625875*^9, 3.698569164713573*^9, 
   3.698572372333726*^9, 3.698573211656267*^9, 3.698575087901354*^9, {
   3.6985769951525927`*^9, 3.6985769990099382`*^9}, 3.6985820355583477`*^9, 
   3.698596218402944*^9, 3.698596424105398*^9, {3.698636319025185*^9, 
   3.698636326433777*^9}, 3.698643317180711*^9, 3.698651342870118*^9, {
   3.698654145350697*^9, 3.6986541692102823`*^9}, {3.698654975157387*^9, 
   3.6986549781932364`*^9}, 3.698658876040854*^9, 3.698660503413991*^9, {
   3.698661225467407*^9, 3.6986612512035313`*^9}, 3.6986677240339622`*^9, 
   3.6986724792202272`*^9, {3.698676769057242*^9, 3.698676772572802*^9}, 
   3.6986854904274273`*^9, {3.6986855600666*^9, 3.6986855637809153`*^9}, 
   3.698686888580523*^9, {3.698691013930455*^9, 3.698691019641794*^9}, 
   3.69872148592509*^9, {3.698724331755579*^9, 3.6987243411475973`*^9}, 
   3.698724471243079*^9, {3.6987281818980227`*^9, 3.6987281949352303`*^9}, 
   3.698728423162883*^9, 3.6987289946821404`*^9, 3.6987295678281813`*^9, 
   3.698729682665985*^9, 3.6987300402985973`*^9, 3.6987370303202047`*^9, 
   3.6987455191920357`*^9, 3.698745556479059*^9, {3.698745671791685*^9, 
   3.698745720340805*^9}, 3.6987530830482397`*^9, 3.698753125799821*^9, 
   3.698755273431437*^9, 3.698768946011731*^9, {3.698769349822709*^9, 
   3.698769354829199*^9}, 3.6987693870158463`*^9, 3.698939546793846*^9, 
   3.698939614839422*^9, 3.711724352190515*^9, {3.7117244557919703`*^9, 
   3.711724471524047*^9}, {3.711724530006316*^9, 3.7117245507668247`*^9}, 
   3.711724594580964*^9, 3.711733363894684*^9, 3.711735773814241*^9, 
   3.711735970376442*^9, 3.7117360253098917`*^9, 3.7117695018179197`*^9, 
   3.711769694149818*^9, 3.711976490496048*^9, 3.7119765565927057`*^9, 
   3.711976681802099*^9, 3.711977079626976*^9, 3.7119771146602583`*^9, 
   3.711990322977483*^9, 3.7119922777858963`*^9, 3.711992659742354*^9, 
   3.711995373474688*^9, 3.711996248683886*^9, 3.711996433289281*^9, 
   3.711998459703909*^9, 3.71202922496102*^9, 3.714926116437327*^9, 
   3.714926204889531*^9, 3.7149296961620626`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures_no_attitude/sim_error_position.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.714924587153331*^9, 3.714924591282095*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error attitude", "Chapter",
 CellChangeTimes->{{3.698506624711748*^9, 3.6985066267613287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{
              RowBox[{"stateList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{
              RowBox[{"stateList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ","}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
                  RowBox[{"nH", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
                  RowBox[{"nH", "[", "#", "]"}]}]}], "]"}], "&"}], "[", 
              RowBox[{
               RowBox[{"stateList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", ")"}], 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], "*)"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Psi]\>\""}], "}"}], ",", 
         "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(deg)\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.698506525212187*^9, 3.698506565612026*^9}, {
   3.698550631492511*^9, 3.698550637743202*^9}, {3.6985508013439083`*^9, 
   3.6985508016424522`*^9}, {3.698745727513345*^9, 3.6987457339500303`*^9}, {
   3.698939767564035*^9, 3.698939769221393*^9}, 3.711617601580361*^9, {
   3.711724627445345*^9, 3.711724656489009*^9}, {3.711775775709437*^9, 
   3.7117757804003277`*^9}, {3.711976498252227*^9, 3.711976516544635*^9}, {
   3.7119765677802343`*^9, 3.711976632164248*^9}, {3.711990373778749*^9, 
   3.711990377425024*^9}, {3.711996574282558*^9, 3.71199667451364*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2HlcjO8XN/BEFCFEIYQQQvZS+Fgi2cqSVGpKaa9pn/appmmWZkqkEMoa
X1JIZQ1RlpJsyVKhlLWyZX96Xs+c6/d6fv/8Xu/v5Zpzn/vc9znX3UhnvzWu
ykpKSs1dlZT+7///v/+1zh+8vKVaMnoRFP8B/79VYWWhpNU8kqyB7Nx3N/8b
TtbEgry0GfWDydq42NfieMoAsg7u37eOutmLrItbpuer05XJo/DPbOdutY6F
CuuhqXWM36T35LHIOVbt17+OrI/CvY6Ty6vIE5DDDZY5XCEb4P3hVYcb88iT
oa5Rn+uzj2yIAVEPG7rLyFOh/Wqv+5Uw8jTYSU8tPeFKno6IRZoray3JM/Ds
+4guNibkmVD+nLhz5hjyLFwb5P0xtg95NmQJbv7Lvy9Q2AjduvmMzaojG6Nn
4NK9sjLyHIwtSm3XPUk2QdD9Lte27CCbIty1fLpXFHkuMqcofTB2Ic/D9sbG
IS8syPOhefG2r/NUMhDncED3npbCfKC2T7e26X+hWF+AUT3SJm5/rTB/AXbW
3Tj68xatL0TD6ZsP/fJpfSFejM878Sud1hchsSL/xqFoWl8EB8RaBrvS+mK8
lR3X9l9B64txYOs/2b7ptG6G1aUN17oPpXUz5Pw7GnxcmdaXYMHJsgEGD+cr
1pfAeXT3iVsPKay0FC81VS5tDaH1pbjY48nVWea0bo7nt9L2iobQujne1P+e
kPxhnmJ9GVoyO85bXVGYvwwXtrzSe5xG6xbw0d19cYwXrVtg4iAnt0ULaH05
oo0Tt87UpvXlGJn3bm6X1rmK9RUw/rxI5b9yhfkr8KfZaOjs/bS+Ev1i1q85
GknrK5HienOEig2tr8KJnV32rZxB66tQGqadltCP1ldDWW9E0MlPpor11Wh5
tcCholJhJUvMD7ip35CrMCyRfuunw/tk+veW+Lvu8eJWf4VLLPFW5/KTD+to
vxXKb3yrbTSi/Vbo+qH/jZphtN8KaXEWT290pf1WGFeRPyLvrYli/xpcDHd0
3F6tMNZgoHnUlMDzCvPXoGKPWevyQwqXrMGukE+Vw1Jo/1o03xOXvYmg/Wsx
v6HscI477V+L2l6Xezla0/616PYg3UPNjPavw+KUaWqHZ9D+dXCsK+k5fQzt
X4dnB9e55Q6i/evQZbVr+0A12r8emgNW2Ln9nqPYvx5XLhZOzmpVmL8elQe1
ay42KlyyHnNMVA5cfKqwkjWMzqZfyKym/dZYPeH6DJtbtN8aM0Jz/72/Svut
sX71u28bLtD+DXDYd7c27Szt3wClpP/WHsin/RtQadT9c+QJ2r8BetH3Z4w4
RvttsOPkQb7wCO23garswYSTh2i/DXL9c4PTDtJ+G/SrSkmdSVbaiP+69Tog
JWMjvgm+FW9j+zeiq4/02TL6/ZKN2OPJ7XrsKO23xVnlG0PzjtN+W3hNnKRq
k0f7bTFwxs3sPWdovy3K2k2LI4tpvx1iJh/QartE++3w0TQu5lsp7bfDsFvn
Tohu0347GF3xtz1A91vJHpdXfjVeWEv77XHkQ+Yfzkvabw812cF1v97Sfnvw
Dit/UP9C+zdh+mbjoK1/aP8m/CoalSHoQc/PJmyIL+zxsh89P5swa9e9wEM6
9Pw4wKipOfnWOHr+HDCcd7v/yum03wGvj1gW6s+n/Q4wXdRj7sbltN8RPg9e
uNduoP2OMFW/o5LjQvsdIbB1b7zoT/sdkVaaVK8VQ/s50O3R/Dg/SWFdDo5o
ppxJ3EW/x4GVcrJ7Wo7CHA5uB3t9enSWfp8DpZzjq8yvK5zFQZiG7Y7G+xSP
g+q7IQ3HXipczwHvI896exvFdwIn4cK4vUqK/qDrBNXm9m2lfamfOKFfk6yp
6wiFOU6InjOOZzOZ+osT3s9/nXtprsJZTvj59+HfaSup3zhh7on1b/PtFa53
gl/+JmUjb+pfzti2oK7pSgTFd0ZBrubSFVKK74xD3KqG+7sovjMsut1MWH+M
4jtj2PGGfpXFFN8Zs0dzg+fcpPjOyLOMyUuvofjOmKHa98HLNxR/M4JeWSoP
/k7xN8Nl3kvf2d0V/RuboerY1dFkoMKczn9/9/b4UXrU7zfDtdXOqGWawlmb
0aWsV3f5AoVLNkOnZ7puH0uF6zdjj+8SfTcHmg8uKJg2qGqHt8K6LpA1PXm+
K5ziu+Ct76YJ/iKK74J5pvHZWjsovgt88x0XJh2g+C5IPGU1oiKP4rvgyxpt
h5qLFN8FB3Y1zj5+i+K7Yu8G3x9LHlN8V0S0flM+8oriu+LYpE3ltz5RfFeM
fz/8Xt4viu+KpBObijb0UMzXLFdM+vHC4FJ/hUtc8YGv1vZymML1rlj050Vt
qT7N5y1QP9N+33m6wrpbINxj/+T8XIWxBTU6R39VLlWYswWp86877Laieb4F
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
qpo3sfonwCOxbVE9q38Czi20+vKE1T8B6gsN7O+z+icAT4TRd1j9E7DyjIvD
dVb/BKw2KP97kdU/AS7Z+c5nWf0T0P/xcFkumZcAFeuesYfZ+TsBG+95LmDP
tygBd5On3UsjpyQg88mq6TJyRgIWeB7xFJCzEhDdNCw8gpyTAN0NMpcAcl4C
lh25aeBBLkpAy7h9Dx3JJQkoH1TtZM3e/wQcmTD8AXufqxIQOXrWlEXs/U/A
IYdrwcbs/e/8fa7rsSns/U/AtZL8u2PY+5+A2knTm1k/6UjAvnyPb/3Y+y+E
v/qt3z3Y+y/Ey8CLf/5Qf9IQwmhJ9q/PZG0hhFdudLSQdYXYfTngex1ZXwjV
kOc/HpINhZg8Z5ryHbKRELXLkvtfJUOIG+kqk4rI5kKc252xNpdsKcSXcfNE
B8k2QngseHFnF5kjxPrfa0ZvZf1fiAf27rJE1v+FMDN5ph7N+r8Qhw0cDgSx
/i/EB5/kNV6s/wvRcF9Zx5n1fyE2XzLtspH1fyGu9jnd1ZL1fyG6j6rQW8r6
vxAFla9c57H+L4S564Lymaz/C3HyzMiVk1j/F2JTv1Nf9cjlQrxw7HdNh1wl
hNUoy7Oa5BohXom4VerkeiFeC7b0VyE3C7GsTivqD/veE2KalX2/b+QOIYr3
/bn7kayUiMLiwuI3ZNVEJNQY3a0nayTi4f6R/WrJ2okwW6PCv8/mfyKktR46
FWz+J8JkQHnTDTb/E3HrlbSuhM3/RPzkavY4z+Z/Iu6vOLOpgM3/RNw8kv/q
JJv/ifATLNl5jM3/RNS8y4o+xOZ/Ig7rvdqWRXZPRMbb0U92k7mJ+HLEd1U6
mZeIK3nXPqeS+YkYE619U04WdV7fuw2VEnJKIrqHOndNJGckYkNkH/d4clZn
vmH6v2PIOYk4syLwciT7e3Uipofl5IeRixJh48arDmHf74nocVQyMohcngje
3Oi9/ux7PhEOD1vM/cg1iTivZa/rw77vEzHrjZ2eF7k5EUpH3Nd5sPonYnTs
z5NurP6d9f4vbhY7jymJYHjS640Lq78I7/8bfHUzq78IkVlvrzuz+ovwPXdW
uxOrvwiamy2XMOuLMPu74AqH1V+Ewp06m5mNRCjLt53ADBGuj44exGwuAift
ylhmSxHe5tnZMtuIcM49Jo+ZI8JQY3t9Ft9dhGTP4VeYuSLsXfMpjF0/T4Sg
7V+tWH58EbZw1puz/EUi/DhlaO/K6i9CUeqRJHa/MkQoXVlTw+5nlgibCurm
s/udI8IA2yclnqz+IqRdr7P1ZvUXQe2Mem9fVv/O+7Ei7BGrb7kIUzbOO/u/
+ovQEh70XyCrvwhznWYUBLP6i3Di947qUFZ/EZ7kFyiHs/qLMEN6bDF7HjtE
sPBISY9m9Rfj2dT4n3xWfzEm/N3nzZ5vDTHWLVX5kMDqL4ZK//vhIlZ/MUK0
Jw6UsvqLsfez4XkZq78YJxf29E5h9Rdj/r0XY7ex+otx5ULN2zRWfzGepOsV
ZrD6i9GU1CZh77ONGLNi/F33svqL8WbCE7NsVn8x2hZyJh5k9RejTL5g4BFW
fzGmdD+vzPoJXwz/d70/H2f1F6PmdXQj6z8pYhzStH5yitVfjMNT6ipYv8oS
40Kqx1X2vZIjBt/a/Czrb3liFDtX51xi9RfDJcZ55xVWfzHcXTcklrL6i2Ff
MSCgjNVfjMyovza3WP3FeGkdZ8L6bb0YeY59Blex+nfGqxzYxr6XWjvzH6Bx
7SGrvxi/63jyGlZ/CUQGVWuesvpLsBS7+r5g9Zfg6hnHUjYPtCWd/ewE9xWr
vwRnH2pqNrH6SzDWe2JuM6u/BL+NpPPesfp3/vvU6tIPrP4S6OgfRCurvwTj
/x7Ob2f1lyDSW6j1ldVfgjbtdv/vrP4SPG/fU/KD1V+CXQYLu7K/j3Il+Dpj
t/FfVn8JXE96bFZi81+CG14BfGU2/yV4bB+d0o3Nfwkkcttt7PsyQwIMrRGp
svkvgYfuHW5PNv8lSDvVdzmbz3kS7K2K0erD5r8Ee6z/POzL5n/n9X/yFvZj
81+CWNVC/QFs/kuQdKnswv/mvwQrq+ULB7H5L0HKjn/FWmz+S/ClTmP0YHKr
BH2/XIgaQu6QYD2vy62hZCUpdDh1PYaRVaU4Wms7m30/a0hxGRE2I9j5T4rK
Lsu9dNn5T4q/KY/9RrLznxSPraZuGcXOf1KECrxWjWbnPymGT8vUZ+cdSPFG
+9kXZnMp5OlLTo9h5z8pxu78sXksO/9JsZU/sMc4dv7rjDfgYiazuxQRbgPH
6LPznxTuN82ymHlSeBwP7TOe1V+KitRHfswiKb7+SC5lTpHi7eL76hNY/aW4
deSeOXOWFAn9L/GYc6Qw16nIZM7rvJ8fZxQwF0lx3XDSVeYSKTraP15jLpei
964z55irpBh1u/gwc40U9htMRMz1UjSOC3Vkbu6s54TjBsytUtw2GdLK8umQ
4p6W8jFmpSS8WHjIllk1CR4dZsrMGklo1RqXze6fdhLi+yfNZtZNgm9N0XV2
//WTYFjWtpzZMAm6GRG3WP2MkiBctXsBM5LwYeyOfFZv8yQ4CfOH/K/+SZC1
TItiz4dNElQfOj5hzxMnCYHXo6YwuyfhzYjqGPb8cZPQNmr/LfZ88pJQ+nia
BjM/CX263bRkz7MoCfuGHk1iz3tKEgZM1ypl70NGEmzbrb+z9yWrM17if2OZ
c5IwOnPDGnZ+z+u8PrM94ex9K0rC1N8X97H3sSQJ+ck/r7D3tTwJn4dsa9Bm
9U+Czc8bf9n7XZOEpVceDGauT0Kq4c9prB80J6HJIMhiIKt/Er4WRHNY/+hI
ws3n64JZf1GSIbXEUNyf1V+G2sjlmawfaciw0eB5rgarvwwBz3SusP6lK0Nj
5xGe9Td9GSQaUY29Wf1lsDPu3sH6oZEMytl9ejFDhpsXyob3YvWXoeC+03TW
Ty1l4PzstUyN1V+G4j5fHFn/5cggOLOE14PVXwaNNVNSWb/mymDau+YE+z7i
yfC83OM26+98GcJHqb/ryuovQwK3UZ05RYbtJUOmsvmQ0fl7j+5u6MLqL4P2
hHGxbJ7kyLCkZcGJf2z+y/Diy/xnbP4UyTDo5fw+zCUyePx0WMS+18pliDUt
jmDzq0oGob1H4S82/2XYeV307Seb/zIs3D3FmLlZhtvngmLYPGyVgX/R52YH
m/8yZP2crMWsJMdR8W13Nk9V5Zhntv4S+17UkONZxTMtZm1553nMP5jNY105
uheNfPyFzX85nNb9NGU2lCN/To8jn9n8l6NwyNqBzJBja8ybRDbvzeV4cP/O
3zY2/+XouqVnOLONHK3eh3+w8wJHjjXqh6OY3eUwt+3dnZkrx8zNdamf2PyX
4+eU4XrMfDmsb90qZt/DIjmeL2xcy5wiR1GBdzs7r2TI8djSMY05S44FG8+Z
MufIsd8wvJn9fTpPDpndrgzmIjkeCQeuZC6R46OsUYW5XA53ftdr7LxUJceO
HDcBc40cvbaqWTDXyzGoV/0A5ubO65/R0PCW1V+OKTHKZ5g75OCdMZIwKyVD
62+oC7NqMga/O72QWSMZq0Lq9Ji1kyFU/9CTWTcZD1Mrv7Sw+ifDyTv4JbNh
MhbHVt9nNkpGw6JH5cxIRnoh98r/9f8B9no+1A==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2Xk4lG/UB/ApLVqIqFSqaRdiSkqhvloliRZpH/uuse+MscwMM2j3KwpF
aFMqKmValArRRptIIS1o1f56rznPe11v/3R9ut1z5jzfmec+j8Y7bF/t3JvF
YrUpsFj/+7f8T+eCre6awevHWoP+Adv+nxXxeln4yo9jGKsg7/O8hjH/Z3Uc
u1/PahvNWAOj9hbyrUYx1kS0y6YxazQYs5H/dmDS92GMJ2Bk5Us/UzXGk8DP
NvafosJ4CvzGK7PPDmashZbqMQptioy1EcyzTL/eh7Eu+u+oszdnMdZDk4pO
TMe3VWQOQjq3GuW+ZzwDvZ1OHyxuYjwTvzr72015zNgA2xT1vn+5zXgWnq2Z
+3fyZcaGyGp/13DpFOPZKP+u/qski/EcnF7YeWTcLsZGONIVN+5TLOO5eFGh
cGhmAON5WDds8vJmR8bGqLZPMOy3hrEJtvRX9MkwY2yK9Ye0Owr0Gc/HpLVe
eZwxjBegrn9uBGcgY6BsodvC49+s5OYDefXrb+S8IrPM8GhG4tWx1cy6GZZP
bPqgcYFZX4gGM5dPew4z6wux90CO9z4ps74ITtf7fxkbzKwvwkpNHRU9LrO+
GFk2JotumjPri2HybmXftxxmfQliP5ws36fBrC/By0C8e/BvJa0vhe6SOw8P
tpD5SxGpbfXkRyWzvgx/sdG85QyzvgxnvmzwcE5j1s3BuvaGHxLJrJuj/ojq
LbYDs74cR3Uv+m5byqwvB0+n5pShNrNugZhv2QVHlJh1C1jMmJZwotOS1lfA
fLS5vc0DMn8F3m8aabvjHLNuCefl+mE++5h1Swjy6hrehjDrK8Fp3byjz0Zm
fSUCHi45UDaPWbfCgOe7emuOZtat0Lv63+1Rv1bQ+ipYmhp2lT4l81dhlmBw
oMJFZt0ay3jXV3WkkWENy5pZoTHBzM9bY3+hcuvFdWSZNW4d7C9NN2D22+Db
i6Fbpqoy+23QfHzXss0fLWi/DeacTDE2uUuW2YAf1zil4iiZtRrnTjt9Y8WR
sRrxFfp7W7cx+1dD+OtCV4Qxs381JOpDvlwdzuxfg7Bnv4XFXctp/xrUf0La
1koyfw0GTz8/pCSXLFuDf5tintzgk1lrkbbftCl+I7N/LVqUtNR+GzD71wKj
VmzWUmL2r4VD//yCQS3mtH8dzJRcPuReIWMd4q91qf/aS+avg/C1vtqA7WTZ
OnjxMp/VLmX226JVQehoO5bZb4tREarZ+74uo/22OFsRmbq3kiyzxf22+dpr
D5NZ62Hcf7x3bSgZ67H1mNeGIdbM/vWY9EXxk/IUZv961NSmm9T+Wkr77dBm
cMpsfS0ZdljBvjk4O5fMt4NeXtzxM+FkmR0cCm/NTLRm9m/A/ZirZ6dNZvZv
wOwR6it2/lhC+zcgY0y7ankVWbYBnenK065nkVkboTpf4aw0kIyNiJ807Onk
5cz+jYi24d2UaDL7N+JFwoy86x2Laf8mxGUGnbl7jYxNmLPJWzN3D5m/CUv5
3PFr3ciyTfjgfZ1VN4/ZvxkFX4z/6isx+zdjjqDAnvtyEe3fjEO7OMHup8my
zdBxM0yxjCWztuBQh9vfgevI2IIHH2+MyZ3C7N8CJ1uJxbjuhbR/C67cMm8J
vk1mbcWRJTdtT+8nYyvuKin1q/Ik87dCef8Gh0oTZv9WbK4Y2lCoxOzfhrnT
rnSEN5jR/m0IDfykqn+KzN+GMF3z63ejybJtWLTFPGGNNZnFxeiMDU232GQ2
F1b6x7Zqd4Fej4u9DmMlEVfJXC68p+n9KttB5nNR9OkhvtmTM7m4c5v3lT2T
LONicXnOWbPe5EYunNIi5509soDq2+Nh4MjsusVktj2WNgnfdr6eT/XtUZRZ
uE0hnsy1R0nUKbuhk8l8e+RsTJg+vtyU6tvDxrHS2MCZLLOH096Nb1b0JTfa
ozvja4pPjgnVd8D6aV+PHFxCZjvA43lb6ss3xlTfAee+zLs+K4HMdcDWqzUn
sqaQ+Q7wHZJ/Y9qteVTfAbH5IZE1rmSZA34PXrLqP0VyowOUg/6cFubPpfqO
OO8ydOwhCzLbESp3Bg1ufmdE9R2R8mTMF1spmeuIjNbSlX/1yHxHnJzFSXle
M4fqO8Lr88TpX/3IMkfoZM/bv2IYudER0Q0ZS5uLZ1N9J9yrTz5UtpHMdkKF
9Jvy6z+GVN8JC999/bkmi8x1wsZ+QeVDl5D5TmgWltyd+HYW1XfCp4A250Qp
WeaErOBjLctnkhudUFpVtN+5zoDqO2MYa01FYwSZ7Qx7odKpKxPIcAaXry/s
fXsm1XdGx06HmFPbyXxnFOouuVkxnJzpjFKOQpDNlRlU3xmGJp1HLV3Ijc7Q
OTTR47IymeWCw1OHX80t5lB9F1x6bnZ0kD0ZLjhVfn1wx0Ay1wUtp/6dOOqh
T/VdsGtlsixUpkf1XfD9CatjwwiyzAUvVHLLVm6fTvVd0PdPXubGCl2q74pm
Y9/W+Alktiv+O6JY8zBSh+q7ojIkIcLyqTbVd8XuBfwvXXPIfFfYevMn3dk7
jeq7IvCL4MWTb1pU3xXC+uCHk+3Ija641XA368zFqVTfDee9v8vixpLZbqg4
rZaaGTuF6rthpFrQqoHtk6m+G4IGrx5/04bMd0Ojl/2A+ouTqL4bpgzc9X7R
ZLKsZ/+7slSlHROpvhvuvXNJN/o7geq7Q/bUZ2+FF5ntDk2ljjey5+Opvjs6
nf7WTrIic93BvyqK+S5jU313VNZo/zI2JGe6w9pTy6J93Tiq747VrS/FKxaP
pfruuD4x91+m4Riq74FXVx3OdkzTpPoe+JVVuN1k/Giq7wEF/svipNGjqL4H
hGt63W/SGEn1PeA1X+HawpEaVN8DdQ9qLc5ojqD6HogJF300mDic6nvA9OKx
j3d0h1F9T7iO9LEMm6tO9T3xZvu/isXL1ai+J86Yt7zR3TyU6nuiRtPxzSw/
VarvidQxL+5sTVKh+p6Yyy88b7dqCNX3hDi+zXh+shLV98SfkrYS3oNBVN8L
prsPLvs0diDV90LdvWTxDZ4i1ffCYPVh+W0V/ai+FxJizmzcNrUv1feCe4BH
g5ZEgep7YWKdbq8l33tRfS/wXFeOLXJjUX0vhOxUXvha9meBvL43Yvkag3td
/ik32xuKr00vlpR/lxvesB++fU+/Z1/k5npjg6WT2pvfXXLzvfFxy8izB2w/
yp3pjYu/NBP8K9vklnlj6LcTV8w2Ncvd6I20rub2t32fU30ftKQ4Rn1JqKX6
PqhfsbLg7ZtSqu+DV0f+6vKHHS2T1/fBuAFlZX4HbsvN90Geidqv+8LHcmf6
wGTjF/80xUa5ZT7om57Z2efca7kbfaA6ZfHBFcvfys3ajhHVv7wSyz/Izd6O
gQoGSzrVu+TGdjz/9kx3jvFnqr8dHLvWcwXrvlL97dgmPGS82ek71d+O1o0z
87a4/qD627HpwAXe1a2/qP52pPZZsmO/xR+qz8PlnBbRb+1/cqvwUKfTVPAn
miWTvx8eOmJTSx459ZKbw8M8kxtvVBb3lhs968O9Xl8YoyC3NQ+2qrMPPusi
c3mwe589M0bWR24eD3M4Y7+eE/eVm89D7NuRnvEr+8mdysNNLz2LX4P6y53J
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
xiV8uG8+ffwQ8/MyPor79pEOm02u4CNw6tk+mEmu4UPoNjxr8nRyPR//lp9r
rZxCbuy5Hqd/rTMZR27jo+hsEzdsOLmTj+idBwKkg8ndfPx9ZfElvBeZFYOw
rtNzLb/S9VOMwT7jt7v7MNdXJQY56iMsjz1h8o/BJcdpB5beYfKPgWrYjqLn
F5j8Y3D2R69S/zwm/xhMrdGrUd3L5B8D1vQU1mUBk38MdOLHrw73YfKPgW/K
jCurNzD5x8B1Dnvm8kVM/jG4EDs9xUmXyT8Gca6LCwqYz6dbDFZGVqwY/5s+
v7wYCA4561e/IofEwGRbk0JxBZkfgx02Hz2amO+DKAYNU3r9WL2TnBqD2/9N
NVQNIqfF4IVqU9r4DeTMGFQM+5EiNibnxSDV3THEagy5MAajHhosfvebvr8l
MVg2vjtD8QpZFoMh87jO/yLJFTE4+WDQmycm5JoYXM49b5H9k+4P9TF4Gt7n
qEMxuTEGhsutP0zyJ7fFoN4j6vOn6eTOGPR+X+v7uJXuR90xsKm40ftJJpkl
wOrRzRP6bCArCmA5P59jr0JWEUC13Mnrx02632kIUG6g0f0ogswWYEKafd2/
GWQtAb5eceyIbqH7J0eAm1PO9Nu2n2wkwPpdC8pzVpIhwAzOqrObWWRzAdbO
dpsvOUP3Z2sBTKdZnjJxItsJkOPZYRA0jMwV4N+ygKe4Sfd7NwG2OmntPBJE
5gnQwY3TyZ9CDhFAq326ne1jOi/4Auxt+VVQFE8WCWD0+Pe+ilnkVAGe+EcH
pDfT+ZMmwL55Y4Jn7yRnClA5/1ZxBsh5AsRffqj/5COdX4U917NF7WJHOrlE
gH7+z4e2WZBlAhjoTaqv6KbzsEKA6vl7xGm55BoBTnBzRVvWkusF8Jad1Rjb
m9wowJn8cdsaT9H52iZA1WNnx4It5E4BXnktHiIYRO4WwDqlTs/7Ap3XrFg0
e5TyfF3JirHw7GfosnsYWSUW07Ay9tl1Ou81YrGR12ucpR+ZHYvwcBf/d2yy
VixSVB9kXLnHzAuxKHMdeOhOFNmoZ/9Ct03qemTEIkJL+UDmC5o3zGPh8FR1
YICUbB2Lub+PG+0yJdvFQuvKs9l9n9O8wo1FwuP7w6WmZLdYBBg8l9w8RPMN
LxYP+vMaLvQmh8TC9/6K0dtdqij/WGiaN4z5eIfmI1EsjjidS5rPIafGYmq/
j49c996l/GMx2j1nru8fmq8yYyFd5SWzdybnxeLZxUtA9W3KPxZtBp5b1YzI
JbGYU6iV1JRN85osFq35Xf1OK5MrYrGzWtooDL9F+cdiz4OB3zzf0rxX39NP
9tyvDnbkxlgMK9Dd7FdRTvnHImluceihueTOWNRP+ujdcYzmx+6efvTytV3H
kVlxeHagb8Cg3dcp/zi4Ct82Ng4gq8TBVEX07B2f5lGNOJwKb8ni/LhK+cch
+bb90iI/slYcZlgYFgZ/oHmWE4cVRb3SY9zJRnFYNTvfKL+qjPKPw41b9rPa
7lyh/OMQJdQ7dvMOzcfWcWiuHFtpUUX/H2MXh9Z2h6Cw+5co/zj0frxt3qan
Fyn/OMDj+sZPr5l5Ow5eC/6rWvyphPKPw6Yn20zX9ybz4/BJbexAvWHFlH8c
SnuHWlRpn6f841Dz9Hal0aJzlH8cPtQZaARspfk+Mw5n7S56CyKKKP84CAts
b7tknKH842BYqtQ88eppyj8OR2R9OaWt9Lwg63k/8w40z1AlV/Rcz9R3jUrh
Jyn/OBh3G6mFPTlO+cehY6PasmOmxyj/OGTrRLQfPppP+fe8niD3k/OIPMo/
DpFqoxs+SXIp/ziIHzw5v0Ixh/KPR4FymLqv+DDlH4/ppsvHOqpkU/7xiO9w
kY7PyKT841FUcGXL+m0HKf943EhNuMtKPUD5x+PTyIiNJpVplH88fmjYGPZT
30v5x2N+xqyyDa67KP94XHPt2DfjZirlHw/dg18XDLGXUP4960/H/8i3FFL+
8bj+0nfOpFUCyj8eKyI5TU9rwij/eGS/uh/cyvGl/OPx+ozH/bE/tlL+8fjK
LTSu9zMqk+cfj0dt+UXLFjjLLYrHgYd6AcuT/OVOjce4jZmtVhYRcqfFQ/l+
n93+PvS8mBmPQzuTSg9nJcidFw+lpNRTD64kyl0Yj6bYUebsm8lyl8TjUtuK
Cw827ZBbFo8FybKhN5bvkrui53rF9ZnepbtH7pp43On0Fnj23Sd3fU9eoaH9
Fz9Ik7sxHqKieVMle/fL3RaP5/8elq1bRc+3nfGonf13bNGfDLm743Hup/jv
+axDcrMSoN8SiYsZmXIrJiCm79B90c5ZcqskIKz6VbChVrbcGgnQ8Rnfv+UN
mZ2A2YbH9h44eFhurQSIN7sf4a4+IjcnAUEN5+oX9MqR2ygBzYblfRYfIyMB
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
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-4.770335124607855, 64.47408845686503}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-4.770335124607855, 64.47408845686503}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Theta]\"", "\"\[Psi]\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(deg)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.698506540240511*^9, 3.698506574225786*^9, 3.698550639109888*^9, 
   3.698551274212489*^9, 3.698552484376136*^9, 3.6985606939333553`*^9, 
   3.6985607673466787`*^9, 3.698566987816187*^9, 3.698569180548559*^9, 
   3.698572376860351*^9, 3.698575091669492*^9, 3.698577001017099*^9, 
   3.698596229848143*^9, 3.6985964196295958`*^9, 3.698643324921217*^9, 
   3.698651349803632*^9, 3.6986541731444597`*^9, 3.698654980606743*^9, 
   3.6986588789464893`*^9, 3.698660506094022*^9, 3.698661253967637*^9, 
   3.698667726849847*^9, 3.698672482218561*^9, 3.6986767755930157`*^9, 
   3.698685493955059*^9, 3.6986855668453074`*^9, 3.6986868933531113`*^9, 
   3.698691023600697*^9, 3.698721491658472*^9, 3.6987243526026773`*^9, 
   3.6987284286803226`*^9, 3.698729570923938*^9, 3.698730042558313*^9, 
   3.698737033505286*^9, 3.6987455223959618`*^9, {3.6987457254836884`*^9, 
   3.698745741831875*^9}, {3.698753093853067*^9, 3.698753120271991*^9}, 
   3.698768956788032*^9, 3.698769390625383*^9, 3.6989397701719103`*^9, 
   3.711724658784027*^9, 3.71173336893643*^9, 3.711735776755809*^9, 
   3.711735976436211*^9, 3.711736028837833*^9, 3.711769505727399*^9, 
   3.7117696987066603`*^9, 3.711976519189014*^9, 3.711976558833091*^9, {
   3.711976632914193*^9, 3.7119766387020893`*^9}, 3.711976684503474*^9, {
   3.71197708131328*^9, 3.7119770865837097`*^9}, 3.711977117248887*^9, 
   3.711990323837471*^9, 3.711992278466709*^9, 3.71199266017336*^9, 
   3.7119953743917847`*^9, 3.71199624909686*^9, 3.711996433721684*^9, 
   3.711996588466692*^9, {3.7119966283470583`*^9, 3.711996638286339*^9}, 
   3.7119966751925583`*^9, 3.711998460833888*^9, 3.712029226087419*^9, 
   3.714926117242566*^9, 3.714926205733718*^9, 3.7149296967319593`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures_no_attitude/sim_error_attitude.pdf\>\""}], ",", "%"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{3.71492459647462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "1", "]"}], ",", 
       RowBox[{"aux", "[", "2", "]"}], ",", 
       RowBox[{"aux", "[", "3", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "4", "]"}], ",", 
       RowBox[{"aux", "[", "5", "]"}], ",", 
       RowBox[{"aux", "[", "6", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(u\), \(1  x\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(u\), \(1  y\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(u\), \(1  z\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(u\), \(2  x\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(u\), \(2  y\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(u\), \(2  z\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.7098117708344173`*^9, {3.709811843596953*^9, 3.709811864482003*^9}, 
   3.710227175804454*^9, {3.71172473553301*^9, 3.711724759865477*^9}, 
   3.71177435955336*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw12nk81N/3B3ASKYooKaVRKi3fmrTQol6VrUWRQmmZ7BKNfWcwmMUMQtE6
LfpoV6m0KG3Srp2KaKOSREmL+vk9nPv55/N4dt05c+bM4z33nnuN3DYu9eym
pKTUoKKk9P//7/qvefaRtU233m1+eon+AdjzwFYQe4+sjiXOvY3b/pWStRFz
bvTRn9/2kPuh4IaS6rOBB2Z3WR+HDxyYaKhRSh6MIz+769Rml5M5sLnZu/jJ
p/vkYTj9KP/qw96PyMZYa3m8ISrvCXkkIlIuK3ntfkY2AXeuYnzL+CryGHhc
br6ntug5eRzirPuJyru9II+HV8TNzU6rmbkYk3dBPcuTeSIiKmNi24yZTcHr
az9m4z72epOwKfAOFjSyeJNR1DgsbGR35ik4F+Jj3tTC3t9UyHnv+1VefEo2
w/oc6Rs/f5aPOZKEpgFSlcfkaTBelhYWm/yQPB1H29T+96utgjwDp587nOSf
vkeeick7b1h9971NtsBbcbz6tN7s852FMbkX7Cz2XSPPRv0n+woP08uzWXk7
VEsu9Q0932UBwBt/bsjAuCIan4Om/idDz/Q4RONzoB+n7vffyK00PheK1av7
LNvo2lV/wVwEmGk8dxDsoO/DPLz8JOa1bz5M4/OQVVrT4Dv+FI1bovDCK7e8
Hhdo3BLbXMZaKvldpnErTOtptsvtzjUat4JazYXoraPKadwaR9T31q2JuU3j
1ijLmegQcot9X21wzEI87Yn6Axq3gdp8FYPPBQ9p3BbRo3WGBVk9pnFbSM60
VTvXPKHx+egnVpZnBz+j8fmocuYd4KhW0fgC9D9TFtS26TmNL0DRU05W3yEv
aXwhNiRePxOwt5rGFyIz4OVEjZGvaHwRetV8WRC0tJbGFyEqcfv//mjV0bgd
ZjhHXNx9myywg8nNLX3WJb+m8cXQ+q9ls5nFGxpfjKsHdmgPayUrLcF3zvyl
g/97S+NLsHnqkslGK97RuD3KFvnFjOn5vsuwR3XRpwfcM2SBPfYqnpwb617f
5VJ78CK19/Tt3UDzHbAxb/77Z0VkOKBkypvmoJUfaL4DXCu+OD7tIJc6IDrt
9+dvOz/S/KV4fnKazmWLTzR/Kdy9tpwc95wsWAqHZ5MzR4c00vylKDxU5XZA
4zPNd0TOxsHddyrIcESslvGOn6ZNNN8RBS855UevkEsdsX/t4xOFS77Q/GV4
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
RhfvzXUiK6XhSelem0xfsnoaHqROzy2MIWun4e97SYYinayfhtb9dsrr9pA5
aXi0uvH81yKySRoCXydsWnqDzE3D8YvPnZOqyOZpKN8e+irpExlpMCpK6nDs
INum4fGEDymtfX5T/dMQtsnCwY1DdknDB4M7poqJZF4aZg/P7nZkLtknDecj
5ueKHMn8NPwuXnbH1IMckYaC/Efhh0LIgjT0jcwLaRGSRWlQnTRhR48cckYa
tD88uvNxHzk3DR4asa+2FZEVaZhx8unxQdfIBWngVc8z8n5ELkzDteM1Ggmv
ycVpiCmJsPf5Si5Ng3z8tnuDlf5Q/dMQ0jPVa2cfckXn58Ob8rNxMLkyDcoJ
zj7qY8m1aTg1wnlzszm5IQ0tO5y88q3JzWk4+oN7YeQycnsaNIyiYkLWkZVk
MNaKT5MHkNVlcHlq9TAkmqwtw5ty2eRRIrK+DMPk97fmZ5M5MkgmW3z+oiCb
yPDN+ko/tSNkrgybn6r8ri8mm8twWMST5FwjQ4Z+25uP9Kkg28og/pTs4PiC
bC9D75ZD69zfk106ff2/27O+knky3NGMiH33m+wjw/i/jz2d1Tqo/jKEz+eG
ZGuTI2TQ0TyVu30QWSCDW7HNtY3GZJEMPbqlNPQeT86QofRC2Y8wM3KuDOMu
D3x3EGSFDH+v2+w7MJ9cIEP3GQ9HBy8lF8pwekjr+h6u5GIZRGXbV3u5k0tl
0CqJbE/3I5fLMCWq0VQYTK6QIdVUS3VeNLlShkdZJ73vJJJrZdgmdFvGkZAb
ZKh/7np9Via5WQZL3c2nRuWS2zvfn9JFzoudZCU5FoZOVVmRT1aXY8PXASt3
HyJry2E9hzu86DhZX46cwd1WZ54hc+SIvn5NbVoJ2USO+K3unENXyFw5Dh2I
PVh/g2wuB8/Cc3/THTLkuOI1VK/0AdlWjvRY9z+uT8n2cljs2brqynOyixyv
p76a3lpD5skhWv5nW9Nrso8cv2b5Jxe9Z/WXw+nGqg7Lj6z+clSf39dL8ZnV
X46t1neLrjez+sthb6PZ/XQrq78cuUcslQPbWP3l0LylerqtndVfjnlbJeNs
frP6yxHa9+xGtw5WfznsVhlJbf+x+svhOKhD8lPpL9VfjuS88TGh3cjlcrzq
jg0XVMgVcvTPcfO9151cKcfZIv/EQ6rkWjk2GdeUOaqRG+So7//E+gZzsxyD
5w7QVetBbpfDpEPDQptZKR3TZl94+o79vXo6BIcetKQwa6fDeFPOvlYWTz8d
9+u//BvLzEnH3ZleA7ns/Zmk49vhQWpK7P1z0+FYfuvFNmWyeTrehd4rVGH5
Ix1lj/W2m/3tuPR/8LzMnA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw923k81N/3B3CpVNpIi3xS2rVrF6pXuyImRWSbJCnb2HdmGLNgpF0liZJK
RUnSYqSkkqSFiqINaUEbJX39Hs79ff75PJ5dx507h7n3nvM22sHDbKuigoJC
fXcFhf/7f9d/TYtD/37c9H5WL9A/QPNG3uEPL5TIvfFl38wNF/nMKji6Ld9O
No55MPL85/+9WtSTrI6DVfWLo7cxj8DMZIV5K3oxa+FY/9heemk9yGNw4eEl
9ezlzOOgt3uu2Z833ckT8LBk2gkzAbM2wpPKnv8cxTwZMc1KWZr5iuSpmJUk
3/TDjnk6VnLUFh7/142sA2XxlB6rjzHPhFX05qbfy5hnoTx1u8W9OgXybDTk
26woiGWegwz11pXvZjHPxddd6+ydsv8t7vI8RJn2bFzfk3k+7A487R9p2UHW
xS/TvHm1Z/+SF0AvyPq7ZU9mPUwJKHN+bNdO1seN+w1HF+T9IRug38+Xt32H
MS/EtWezF/r4/SYvwsSE43vGVbSRF8M5WWYetIAZKJk2Uu52pLXLfOB7t4fr
2hXJCkvQZ/ch3Uk7ftH4EuD8n8S/5T9pfCkscq2KJQvJ/KV4fUp3fM2pHzS+
DKYx64aNUifzl6GHwsVTTpLvNL4cJ+WLVKt/f6Px5Tj3c53iWQ+ywgpkn57y
vEddC42vQGrBlX1DNpMVVsLY9nmG6qtmGl+JFudbF6bYkRVWYebHte/21jbR
+CqIXyTuD3YmKxjiU1/r6WofvtK4IRasuDnwtiJZYTX2aKyQLp/4hcZXI+/b
z5s56z/T+BrcSd9+bIrkE42vQc/05YLDtxpp3AgPJz8Mf9+bzDfC2HcHd5Ru
+EjjxridqeuikN5A48bIcxkR2leRrLAW8VZbLzo51NP4Wlzf6WzkVVxH4yYY
WjglPGg2mW+CKXMaul1N+UDjpkg/sKX3liFkvimsM3vmHox+T+McjH73qzyi
GxkchKY+8VkW+I6+ngNh5KGLSs1vuyznoOlE9e9uzmSFdZg+t/RPQPUbil+H
l8r91Ao4ZP46VMs/91teUEvx61DLW70gYjpZwQwfS62K1RJqKN4MoXmK783+
vKZ4M/QJbalTv/GK4s2QoTauQj+gmuLXI9kim3tmUhXFr4fMxHSHoPwFxa9H
dQF3fIfXc4pfj7UfzFMi+1ZS/AbMCZ2gtivxGcVvQNazKw3XJzyl+A0wHJDb
ln36McVvQHuaR/6MSeUUb443JmPqmlPKKN4cZl8s1kfPLKV4c8zmX9ZoHHqf
4s3Ru+OIduKvOxRvgfDo2VemPL1F8RY4m6W09b+sAoq3QGmLZGXu8OsUb4GO
BZYG+x/nUPxGTG8t22u3O5PiN0It8cn1V5nHKX4jMn4sci8/Gk/xG6H9+fzo
uEfh+V3xlngxxMm0blJyl2GJPK/GkYMMMrrMt4Sbm3Xv1qHZXZZbwv1T3aad
HVco3gqm7u3i+4/zKd4KlROfTPt47ybFW8Gwwmz832O3Kd4KzvyOZ8/diyl+
EzrKUn4az7xP8ZsgeJxgNrvhAcVvgrjNYa6BURnFb8Lv6e/E0YmPKN4ag5Le
KonryyneGkLNAq8FM55QvDXGaMvXnOM9pXhrKN421fuZ8YzibdCzu8PO8e8q
KN4GpRvbr6wf+pzibXA8quPJoWUvKN4Gisl/5g9zfUnxtnD88F61bmcVxdti
/369fpPPV1O8LdL1jX8q3HtF8bYYFYYAWc1rirdD7Jz0DwGBNRRvB7dMl6Xp
CrUUb4dG3VfjPkSR5XYwP1tbsazPG4q3Bz9vcmR5NBn2+Oo+RT1V+S3F2yMk
kIMiCVneaWvuWuOe7yiei76nS6es4JO1uGjjVlrI28jgIm7FktISz/dd5nKx
R1fWP7CezOeifPKeHo9tP3Q5mYujI9ao1j8iy7kw0bn4+9byui7XcLF2Q9En
3xyywmYYL17tqzSxnubfjDF3ggSC/WRsRr40zKa5RwPNvxkpOX7n7L3I/M24
c1Q/5OkrcvJmHByfMtF6zUeafzN0TizjtWaTazaj0OiqT/bIRprfAYVta7P3
iclaDnCoblFJ+UqGA77/vfjolcUnmt8BNrfsTnCuk/kO0HEIPfFnzGea3wHV
R3dbvRWT5Q6YtGp3nvInco0Djr2Nn+dj+oXm34JFw9OyR18ga21Bk/bfhMGD
v9L8W+CVP/DuWl8ydwssDXtlPnhK5m9B8PXk0fc0mmj+LXjsFRTJWUOWb4Hm
skBpYCC5ZgvSH8pjlqeTFRyRETMpK/MZWcsRDz7car7Wo5nmd4RH5o7hzrPI
XEe8DDC5l2lP5jtidd7h8H2x5GRH2O0fFj/4Clnu2Hk+KdKZ+p5c44gXFQf8
X6i00PxbYZPQz07TgKy1Fby/dYUtTmRsxaGSSk/LXWTuVvTPGDvC+CqZvxV/
B6zZev8dOXkrWhszah73/0bzb4Vy86QhW+aRa7Yi51tWuJ8dWcEJNmsq9vUV
kbWcMPqOWfGos2Q4wVg5LCrzMZnrhD0vCvSvtpH5TijCL+uFo77T/E7Yp5Vn
PWc5We6EScoZl484k2ucMFkt7YdfLFlhG0QhlWnXz5O1tuGWYsV2j3IytqHv
9fhP0u9k7jb04s36ojz0B82/DfaOLWiaR07ehm3Xb92fv5Es34Ynfr9iXvuR
a7ZBqHdp//t9ZAVnfF3nrmGYTdZyRkH/idye5WQ4I2PwmZL/vpK5zvildaJW
2vcnze+MhJJDi0wmkpOdMWFsybFtS8lyZ9iW/qx/YkOucca72+2q+/zICtvx
ROquf3InWWs7TvdsO66cTsZ2HLW8fP5GPpm7HRblzq9uPmPzb0fonpinQz+z
+bfjmrmNdZ7iL5p/O5Tarm48O4xcsx2xkj+Pv04hK+yAQLDzt2AxWWsHqvTO
DHU0I2MHjGxv79nvSObuQA5P6e9wPzJ/B9buTmn/IiIn70Cg7yjroQfY/Dtw
rkrcEZ/G5t+Be3dlDfaX2PwuGHgiUU9YyOZ3QWp61eR/ZWx+Fzyr1e5fXs3m
d8EZzTbjjgY2vwt01Je4Rf1g87tgw6qVvbYrtNL8LuhxwO3uaWVyjQvKXBX9
jAeTFVxxCa21pppkLVdED0n/ljOeDFeMHxxzLHIamesKEf9b0+U5ZL4r+Aa3
v5vrk5NdsaZ1eon9Eja/K2ZM3XqsYiWb3xVX6+zT843Y/G646JmoqcFh87th
1Jm3yxvWs/nd0DZ4qPOMjWx+Nww16nj6xYrN74ZV2ZNrJ9mw+d3waMTDV29s
2fxu0HhxbvwIeza/Gxz6qfSvZFZwx1h+bqM6l83vjoij34fWsnG4w+Nleu0s
Zq473KvcDqvYsfk7ffPyzpD/n98db9N79wzcxOZ3h+zwdIPelmx+d8SoyTym
mrP5PdBPxau8bh2b3wPtxX7xBiZsfg9cb2ssmbqGze+BiNPrUvJWsPk9sIH7
YnQ92PwesJW2mV1m+ZB74GBb+6zJ89j8HriyOCt7qQ6bn4dZe1TkipPJKjyM
UG+f6TqWvR4ebKf9e8kfQdbhQdVvhHDpEPb6eDAyPP7uQn8yh4c9UwZnPO7J
Xi8Pnr3+haT9pZ9PHg8R6X8/T2U/r3wehPNOSp0/keN5uLpwV+mmt+znmYft
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
2/+l0Pfud5R3gO3/UpQNG3vXO4bt/1IU5NlJVoSz/V+K6/+et7/3Yvu/FAbm
y1eZO7H9XwpH+1rJHiu2/0uh4iB5m2zM9n8p+KdTA0MXs/1fijs/ZrhPmsX2
/871PLv67vg4tv9L4aq+rVvTULb/SyGe8KZeuQ/b/6U44Owm//Gbzjdyaef5
t/Js5idycef77RRRoc/+nqFMihajjY4HHrLznxR+3o+CC+Xs/CdF5cNfK+RZ
7Pwnxfgo20ZZCjv/SXFi6eh9U/ew858U2w5/ck2MZOe/aJTYf0us9mbnv2hY
f28xbdrCzn/RSEyfmfVkPTv/RXfuP2Gfopex8180PqycPl1tNjv/ReOq86hU
tzHs/BeNloLsgEOq7PwXDf3ZFVUHFdj5LxpHIr7/dflK51/DaLw906Gs+orM
iYbBLJfZ0hKyZef395x18kkeO/9H4/CX0v3f0tn5Pxo70gxmf9jPzv/RuGnb
ejZDyM7/0Yhq6tBd5cXO/9GYcLREKceenf87X4+NzZo2Y3b+73w9IybOV9Vj
5/9oGGqN7dYxgZ3/o2G0pLAqX42d/6MhX/yzw0KBnf+jsU7DWE/8nO4vudGI
nuH+ou8FsjwaPSYPNDKIJhdH43tCdZu6A7ksGv43A8xTFpAro+Gt6/GgUoVc
E41i54Xl1+roPlYfjRk6xk9NbpCbojF2x1fDnXvZ/S8afIFjctgOdv+LgVt7
makm2P0vBhX9l5S4DGH3vxj8G5UWs+Mj3SfVY7CK+7SHRj5ZKwZ7jETng/aQ
tWOwct66HrJtZJ0Y1D47G7JOn6wbA05J8+7iAWTEwHO86c2WWroPG8Yg4n25
qCybzImBffQWWwcx2TIGY2T5helWZG4MvD4E6x6fQnaOgSxGUd/8L7v/x+BW
c7zRtVJ2/4/Bfcm8xudH2f0/But0Hx8+x2P3/xjYvBhSo7eE3f9jkJITpB+u
Sk6IgePP1bNCaqnekByDI5r7V8/KIqfHYHCYXq8UPjkzBu2nnjffNyXnxsDp
3cv4zJFkeQwad7m5cj5TfaQ4BgUpof0zrpLLYjBD4drfQim5MgbB3w7cSdhI
romB0c5FPyePJ9fHwFXl4JDgFlb/icGx5UYXpPms/hMD97osq42xrP4TixqF
2oPvLFn9JxbtSOk2azyr/8QixNJbC81UX1KPRR9ToWjgdbJWLHKeXrqVLCFr
x2LuoQOu39eTdWKxYreTSt9RZN1YPDbsu+x9A9W/EIvt49UTIrPJhrF4k3Un
9UMYmROLvKrfvwesJlvG4vP8+bP/DiJzY2E698SbrCqqzznHoshuQPK0NDIv
FhtlLxU9PVj9Lxbr1NVSQ3RZ/S8W8Uobh69jf/8kicVr3bcdX+5S/TA+FtU7
Yz5b7CYnxKJRNS9cuomcHAsPZTeOeAw5PRaR4+f+4Xyk+mVmLIZLZ4+oyyLn
xmLox2GcNYHs76li0XBo5JxgkItjcfjgAKegXuSyWBgcnC80LKX6amUsfBR5
0z7sJdfEovTXoG4brMn1sXhg0pG0ezS5KRYF4viTKXWs/hsLzZtpV4VnWf1X
huRTh0IWeLP6rwwTNyO2QJesIoO587tYzQ6qN6vLoB+yerRJIVlLhkU+aZ/W
S8jaMkRqHN89Yy1ZR4aZfzddrlUl68ogD0npeJpB9W/I8CevaWTCXLKhDK6/
zDX6sr/34sgwdIG5gc5KsqUMQXK9R71LqR7PlYHrO2zCfnOyswz311yTPK+i
ej5Phm57L616soUcIIOB1coL4o/UD+DLsP/gFvUfPLJEhr6i8/c0f1E/IV4G
7xwfje6h5AQZVpkes0pTJCfLsEPz5oveEupPpMswN+tv05T+5EwZCrkDm1R2
U38jV4ZZJkunXhlKlstQZeP6e/xh6o8Uy5A+suG85ShymQxrL+9NMUul/kpl
5/uZW6Q9ZCK5RobTX4wPHjtN/Zp6GX5PdzJqm0ZukkFl4PX9mlms/yPDtiSH
xwPnsP5PHBoH3rV6lEP9ot5xeGJ7I2LLArJKHBI+OJ28c5X6TepxuPRn/uh/
C8lacYh1aVndV079Ku04zFM6Evx5CVknDvaq4SonC6nfpRsHlXyNLQtWsL+X
i0MPbdNEIxn1ywzjsGv/cKuXO6mfxonDcIfLF8btpn6bZRykLXvsJ++lfhw3
Du9VLYd+3Uf9Ouc4rBW+kvkeoH4eLw57hdqh8gTq9wXE4fRCs8PlB6kfyI/D
v9nio+cOUb9QEgerjJ/YeJj6ifFxONl+Z97Dw9RvTIjD/tcDdIcnUj8yOQ73
8vL/zE+kfmV6HEa+TtWdnkj9zMw4eF1de6LjMPU7c+PgO7R/65nD1A+Vx3We
Z4oeeM7Lp/zHIXDyFxPOXPp7v7I4mLwd9Kp19lXKfxyW9y9/x5t1hfIfhzGr
H9y/rnOZ8h+Hyad3/343/RLlPw69moUVjVMvUv7jMLGq8E7F5CzK/05cq9G2
s1l3jvK/E1aC3a/rjU9T/nfixyXzp/aGaZT/nQiD/O/9ZSmU/53Ibdo0kReW
SPnfCYPkc4m2vnsp/zvhtCZJ2FgpofzvhNjesGr+Tk/Kf+f8tq4+Y8e55f8P
Oyqu+A==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/k1WDGLHLtyszf2kNAbTzSNDntPPKYrBdrudL3dwP1oeg0mb1mrbcb9aHYNp
pjPtlK5w/xuD+bkN/x3hfrclBin3rkfbnuX+NxaFRtnVX+j/qMbC8/HLpqxS
6o9F//d72oYXU38skrzuGBwrpP5YXIX0isl+6o/FlHnWHyv3UH8sCibbNi6g
XySIxY6cGReubKP+WAy+XXR7Ti71xyJoWOCcU9nUHwtTiYP5eJ4vitrj7/v2
2plO/bH4Lt15tyfPJ9WxqB+ncS2S55fGWNyWKAx7yvNNSyy8QnPV5tFvkouD
/lLNGweCqT8O9lNfpfUQUH8cSu5ZR63xof44/J3w361r7tQfh/UaqVd1nak/
Dn80RmQnraL+OExK+u7caEf9cVh338936hLqj8NvrWfP/llE/XEYePuE3Fv6
VdI4CF4s+DSH58miOHQ98vjjdp43y+Og+ev0hLbp1B+Hni39mqx5Xm2Mg+jv
v+cc4Hm2JQ4apqdiFfWoX4iw0oGXXUbJWEmI7F997M7S31IV4sOrGAetITJW
b+ed3dREGvx+hJiUu3LP034y1hHCLKXZwlyN35cQ0QGDphb2kLGRENgzeod6
V35/Qhw9o1+SqCBjcyHW/atV8FGO36cQ3dddKnT7Kesf2AnxTbXyx/2v7C8I
kdcz98xi+mOeQiTdSxhb/Y79BiEKhu8Ms2L/IlyIhZoPb9yiXyYUQjPghccq
9j/EQlyxRsBr9keyhFi0fvygaPZPcoRYcahya69b7LcI8fZRndYh9l/yhdDX
bbtnST+tSAjf2Ji2T+zflAqx93LsASn7O+VClPW4MdzmtIwrhdic9PMf5f9k
XC1ESanliEvsH9UJobvnfLf0w+znCNHwpFfQUvptTUJcK9+RNqJAxi3t8WHp
wt/sX7UJMd5qc/wj9rfkRIi8aXa6gv0vJRGMv5Y4HmZ/TFWEpyuPb9zD/pm6
CKqRFZJd7K9pifD18bc1+ey/6YgwIFzTq0TMfpEISce27rmSKGMjETxbo2ya
hOwfiaCR57GpB/05cxHe7crPM6Y/ZyVC1I5hG0JCWH8Rvs+z33EsgPUXYfFx
r7dya1h/EQZf/L1jiTfrL8LBYJeXh9nPDBfB1yz4uTr7nUIRuuyXVqTSrxOL
MMn7VX5ne9ZfhCa1hhOpdqy/CMJgqXb/pay/CM9V7skfZX82vz1+wxmRLfu3
RSLcD+59vgv7u6UinF6s9a58LusvwlvpkaHJs1l/EVYP0xIvYz+5WoSqbJMZ
Buw317XrMwj07D+N9Rdho1umTncj1l+EBPcPeV3Z325pz/8s/H1v+nVtIqSX
RhiOZr9cLh6rNlZuWjiG9Y9H9ZWjetHsv6vGI/ib/ODj9OfU43H6yWfh76Gs
fzwm6s0KtRnC+sfjycx+A4/Sj9OPxyIFNYkW/QSjeAQ9mP98M/0HxCPQd46p
Nv0K83iMzvl+6hj9Dat4vHa+GWhHP8QuHoNe7YpUpH/iGI8Ty4vfVdCP8YxH
wZeSlxn0cwTx6D/wUowb/aLweMwzD6icr8j6xyPXKL/eWIH1j0d+W+WdGZ1Y
/3j0Ucy9uPAv1j8eWZFzKrz/jP0fS+NhNM758YZfMs6Ph+mnpok3fsi4KB6K
1UY1fb/LuDQesyf1uezbJuPyeDy2/HdczRcZV7brtwhSm/1ZxtXxWF3sI77w
UcZ18fhc/nDb0g8yboxH6+kQl08tMm6KR0aoWdOO9zJuaf+8uaenrn4n47Z4
VBkd9NR9K2O5BDyaibhOzTJWSsDKtk7pza9lrJqArv882fTslYzVE3C4dOjh
N00y1kqA6RDfx3+RdRJwffwpg5EvZayfgN87gg+tfCFjowSkj7RYlfdcxkiA
t+7yuR+eydg8AUMjugcvIVslYJuawesLT2Vsl4DjTS2FZmTHBIQXXLly54mM
Pdt525aZoWRBAizjNvcaTg5vH3ewm/v0sYyFCfDLLG8sIosT8DJD/XEGOat9
XElufiQ5JwE21QKNULI0AeOfn7YTkfMTcFSY83sLuSgBN3W7qFwklyZA94Z3
/B9yeQJmNiXYm/PzVSZg6javHCm5OgHVnzMNlKi3LgHyPc+NiCM3JmC67RiB
Ar+vpgRsqrFR3kJuSUCtQ9/mmfy+2xLwtlfx35/Icomwir8QeJz1UUpEn1Em
immsn2oidt2IvOjD+qonorp56F57zgetRPTXtsiz53zRScTrQ067fd6w/ok4
2jJ+fyrnl1Eiapte7T3G+YdEaFf2zfzA+WmeiAeiPVbGnM9WiTju2vR4Yyvr
n4hHZRkT/nD+OyZioM++yaGfWP9E5B0qefCDz48gETllab2yvrL+ibgZ7nXF
4Bvrn4gVi762PuXzKU7E/Qczw3b9ZP0TcaGiZG7Ab9Y/EX6JE6wWynH9T4Rw
/s9oQ3mu/4nIvHGyTK8z1/9ELDaWtE7qwvU/ESr93vaYr8T1PxEndKp+dPjV
le31iE7fsYV+c3Ui7Je8b6qjv1yXiKdjJvw3tOM+QSLOnZX7FUV/uKn9+xkQ
lPOYfnBLIpy39QtaQv+3LRGCoe8Db9HvlUvCV3X/GCf6u0pJ2LgtPuwH/V3V
JBQcSJ+zk36uehIw3/XqUvq3WkkILHFo7sP7HDpJcJAuSH/C+x76SbjgG5B2
gn6tURLmrNl0VarP9T8JOePl9dfTnzVPQnVlSM7ayVz/k7BTw/B5zhSu/0mo
MVX5crDDj01CXZ3pvireb/FMap8vexu/m3L9T8Kz0qywjvsx4UkIXv3QIoT+
qzAJXTq1Glfwfo04CYlvzozU4P2brCRs87n4Io73c3KScMapp+27Zax/EkYc
n7jEYwXrn4QbzxzLXtNvLUqCTrSVU7gT65+E/OLFI1TdWP8kdPq16MlhT9Y/
CQrrzq5ZRX+1OgkPe53a3Yv+al0SRuu22tfQX21MgqtWvn8u/dWmJNhnXS72
jmL9kyBUeNhpThzrn4Teh7pM1Elg/ZPxpquaRm/en1JKRsKuNeuV0ln/ZFic
HuOnsJb1T8aVgUrxXf9h/ZOxvsR1Tz/e19JJhovQunDMFta//feNTwuYl8f6
J+OYYsRZv12sfzIebDQKyuX9MPNkbN24YcW1/ax/MqqKVRd0oZ9ql4zvXo39
5haz/skYWPPhn8xS1j8Zn0Xv1z08yfon48aaKc/0z7L+ydhb0WKf3nG/LRma
lz9df3OZ9U/GpMvPlWyqWP9k3PkyouEU78vlJMPKtnGI3l3WPxkbDsnt/PcB
658MX7+Z+kMaWf9kHNkxeNuOZ6x/Mn42NZeOeMX6J6PC9dLioresfzLqirYY
z/jA+rf//ge6ZtVfWP9kHHDoYuz+g/VPxhnNra1//rD+7eMu4yZs68zzXjIG
3b1fbaws47Zk3EzdkvtYhee/FOi1mtuLe/H8l4Jjr7e8HM/znGoKcsv1utYP
5PkvBWvHJa6XaPH8l4LPHn8sjXle1EmBp2aLSgv9Vf0UuGau3bab/qpRCvxj
O11bwfMo2vPZOHr04nnVPAVevfYbX+V51ioFa4IeaCTxvGuXggfPH92c2eGv
puBg3oaxP3he9kxBz4L678d4nhakILlprVIQz9vhKdisFzNMbznP3ymwnxuh
8YbndXEK5v+yPb2H5/msFMTqtdx18pBxTruee4MMNXx5Pk/BS83zBbfZL8hP
geKqG78yQnheT8H20YZ/zYmUcWkKLALl4r/H8vyeghK/mZaHEmRcmYLw//pP
dBTzPN/+eVZX/qWaIeO6FMhX5yad4v3axhQM+fMxw3OjjJtS0HfFsleqW1j/
FLyrXel+jH5rWwq+vjxZa0e/VU6M1dus5drotyqJIRGrnfiHfquqGOlXNWtH
029VF+N577J+5cdYfzHmbptnZ0W/VUeMZm0314dnWH8xqp5e6ebK+8ZGYtzf
4DH4ZSXrL8a6Vba+bryfbC7GgnMvL9TXsP5iXJHm/rBh/8tOjCMDh9afvc/6
i3EjNWDGaPbPPMU46bT/bSb7awIxXg81ONXM/lu4GLdMdsfObmb9xZDKN3Ta
2ML6i2HlJqf5mP29LDH2ynntHP6N9RejvuGUo8sv1l+M2eNC+l5n/zBfjH4/
VN8+433uIjHmq7UO+tZZxqVi2PT/vl6Z/cpyMbZGG07uy35mpRh3Vz9sHcx+
Z7UY/cNnFw1lP7SuXU/bp5XD2C9tFEPBZ1uDFvupTWIYZKmP6E+/taVdz0y/
ASp9ZNwmxp6ZN/b+ZL9WLhWR2tKyl+znKqVi7wDBtCr2e1VTMfXmb/Ui+q3q
qfCZMX1GxmD2h1PhFzBvkxv7yzqpGOsdoTqF/Wf9VEx6Yr1Rkf6qUSqC+kv6
1LB/jVTcyesTtYH9bfNU3NT4u3gJ/VWrVNzrffdgD/bL7VLheODL0ooOfzUV
Xzwnbw5kv90zFfIt2Z4a9FMFqVComFfYcd8/PBUt3y7YO7C/L0zFvu/FDm30
U8WpODnu1550+gNZqRh0rHxIf/qnOalo6Lf6jJT+gjQV5i0Cf236EfmpiN96
c8j2Dr8iFeufbr6oRn+jNBV9tmlZJtD/KE/FqqXf85vpj1SmYt2735cW0U+p
TsWxmWZbD9BvqWv//EW6/TrRn2lMxe5bs0ctpn/TlIpLv0MubaW/05KKrLr6
xgb6P22p+PvDM08N+kdyaSizMrCxod+klIahP0rWiuhHqaZhdPzu3vvoX6mn
4W1y+K2r9Lu00iCa8fHcC/pjOml43apx6zv9Nf00/Iya81PRhvVPw/eKzvo9
FrP+aTCbNM1VhX/vYZ4G7Ym9MhWWsv5pyFz7c+cXsl0afr0/ltO4jPVPg/0s
c7cKW9Y/DQXD5f9st2P90/Cfmcg+iH9fEp6G3tcPBmMF65+GoJITM7qsZP3T
4KQ3+sh5clYaUr5UXoyyZ/3TMKHgUPDoVax/GtwGziquJeen4ceeqbHBq1n/
NAjDN11V4d+7lKbhW13BhjxyeRqiglXv6Dqy/mnt+/XS5APk6jQUSup3jHRi
/dPwbLuK9hZyY7u+DC15RWfWPw35e0yMfcgtaZj6+3XVJXJb+/eX9+KIhgvr
nw6csHzuRVZKR/61DOdCsmo6HM6vHvmWrJ6OPrrX9Ye6sv7pkBhOirYm66RD
788sxXCyfjq+Rn69sZFslA77vdtvHSQjHUXZ99ROkc3TkRKaKzlPtkqHoFBr
RgfbpSPnnrzOSbJjOlSvDZt/gOyZjkdbT+7OJgvS4ZZnbRRCDm///I4nFSzJ
wnRM3DqihyZZnI7Dk7stbqLerHRk606+U0DOSYdy8PlcF7I0HfMVhkn7kPPT
MXS3WvMZft9F6ehWu1PoTC5Nh8Hh8U6/WL/ydIypE6zLIlemY/hkpz4a5Op0
jHi+uDWP86EuHVd+v9LVIDem46Vv7/NZnE9N6Sg5pnbhF+dfS/v3fyXMwIXc
lo6nFzV7neV8lZPAt2yKdz+ykgRKrqYm7pzvqhIkfO28/SCfB3UJVKo2p7zl
86MlwTBtH4URZB0JPp4dpWnL501fgpdnHjwU8nk0kqBW87rZLj6vkGC+aLPb
aT7P5hIsvjja9GbH8y/B2uPFz+u5PthJ8GF38fJnXD8cJXDq9GXvE64vnhII
FTPv3+u4byDBCOOHPy5zPQpv16eR1vco1yuhBNNz0yZt4HomlqCgpL+rgOtd
lgTXlE8enM31MEeCAZYzBvfq8OcluN9YfLaO/nu+BEfMo3bncL0tkiCreEKt
NdfjUgkOhV9c0bnj/ooE7mIn8w5/vVKCk2/DCpZyva+WQGJ8Nv0T/fQ6CWYr
T/kl4fuiUYKShYO7a/J90iSBQcOHi/von7dIcPlm5HR9vo/aJFB7fiKqsOP+
TwaG1f/8R4fvM6UMlH04n72FfrlqBoyHPshQ4vtQPQPum+as9ef7UisDem3m
BdX0x3UyILzo0Tya71v9DNQVOnmJ6I8bZeBtg8H4GvrhyMA6K7WlA/k+N8+A
Q9/QFw4d96kyULRf6et2+uF2GQg0OpJTx/tZjhkIrVv/qDv3E54ZeFwvXzeN
frggA8791m924/2v8AxYKigapdH/Frbr0VpdUUD/W5yB9T0vLzpP/zsrA0Me
H2y515/1z4CdyZ6y1/1Y/wx4HYo9/YX7q/wM1O+bpPab+6+iDIjffr8qR/+7
NAN714779Zv7t/IMzJvieKKN+7vKDIxfYDnwXcf+LwOpis/HN3B/WJeBnqXG
va9x/9iYAZXabXeL6Xc3ZaBtUOi63A6/OwOlVU62kfS72zLQb9mC2EO8LyiX
iQKL1acceZ9QKROdfozI6faF+/9M5OwaNK2Q9xHVM/EsvkvtAt5X1MrEyd/v
JY+buP/PhKRGf6OA9x31M1E1wV3jG/fnRpm481fgwij628iEQ0O47Vfu780z
scCu0dOP/rZVJtJ/WxQ94vnALhN/JUvtzXlf0zETEY++bj3I84Vn+8/PKZCq
8L6nIBP+bqabPHk+Cc9Et1XJRad5fhFmIuG2j4YqzzfiTKDnwG6reP7JysSa
d28O/MvzUU77zyu4Grzexf1/Jg5sm3htFM9X+Zn4ecpovwfvuxZl4ql+kNwO
3octzcSHlO6/7tDPLs/EyMHWN5V5n7YyE6b9Cw9P6fCzM2HrVXzNnX52XSbi
L3Vfuo5+dmMmlhyNiy7jfd6mTCT5vwtu6Ljv2/59/bIWdPLn+S8TRn3LpMO9
Wf+1SNMxMzJzY/3XonjhWC83R9Z/LSJnH3FLWMn6r0WF5whH6TLWfy3M979I
O2nN+q/FJ/Fy9ToL1n8tFOTfTv04l/VfiydZvYf34N9fYi0GD5mrrDtDD/8H
JiOYkw==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw923dcjf/7B/CsZGclMg5CmakQipdRimhqaGhq12mf9jmtc6pzTkdWiCai
j4QiKydSiSgjyTqEIiM7K99+j6779/nn83i6z3Xe57rf59zvdTXVJcDcva+c
nFx7Pzm5//t/73+dK3VrV9w5tOfFZfoH+Dks/RQ9rImsAGOn2KvfuJfJipDU
SMee1ixb2esxmFqbaNbCbiQrQ5j7trSA/5g8Ea6OKuXTDVvJLFgV35FvrW4j
T4Pbi7ki06sdZFWcjezU0lr9kTwTNx3cvepUP5HVcFS5w0+X/Zk8G0ZDQ1yM
+F/Ic/Fz4sMlcv5fyfMxJmlafZLaN7IGjnjqqvw6z3gh/rz5ARf172RNmAdU
Bu8JZ6yFqiufhcuOMtaG0reYc0WVjBfBUJN1ZkAV48WIl+V1qZxmvAS+UyfM
jtrOWAf7781y8XFmvBRJ1T4FX1QZL4PvlTztp0+Yz7ccE4u4XpdEjHUxetnZ
8s5FjPXATx5Vc/QBk+8KzNxyefOnYMYrEV+Z+aloCGNgwMan5gez6X5xgZa3
s10DNZj7twpnWzVflVXQ/eWuQqntv0tt65n7vRoLp21+wb5P/cFdDbcLX94V
OTL9swYNK/a4vn7dSdfXQMfW8qSLP1luLUxLjM+ffkv9y12L9m1d8r9+fKDr
+sjbdEjzfX8yVx+fQ0d3N418T9cN0Frn2vhj8ju6boBLc2esFsxlvj/rIG51
tjm/7C1dXwd+58b9543e0HVDLKy0eV9i207XDSHP27ui0pv5PhpB3HhfZWjM
a7puBAO/iiknJK/o+no8DfXecO3QS7q+HrGjd6/3uMh8vzfgXm3JkaJ7L+j6
Buxotf5y+MNzum4MhYUBL3wGk7nGqCrJcx+iJqPrG3FayzdCPf0pXd+ITfdW
j5hzh/k9bYLFC/VirfGP6PomuLxbEmXj9pCum2BSmXdV0ekHdN0Ede6X1fUG
NtF1U5y3Sakbv/Ver2GKNvk7YcYX7tDrTRHrOv7lExX6PUtN4Wb4sfZon9sU
bwb3lLt6fvduULwZrhl/FA8rqaV4M1z0ry1K33mN4s3glOEc/J13heLNkaif
q57cWUHx5tBX5ta//VBO8ebocPf2Uv53iuLN8Vv57QCl1cco3gImLOOv38wP
ULwFBEXaytl5ERRvAYMKvVnNyyS9zyupBfzD1Lfe2ZBPzy9L5P70uP3OqrjX
sMSzCctOumWX9pprCVZdt9KFPucp3hISp/D/uObM828zMkbNNXxqeIXiNyP2
MPvn+WdVFL8ZWj//DW/xq6H4zZh34PGKlV+uU7wVti+8Z/Eh4CbFW0Fwylyj
o/UWxVthkfGftqwjDRRvhVWTn0//2NxI8daQzt7s8mHAXYq3xsz/XKuy5t+j
eGt8PRwZ/Mf8PsVbQ6Fx18ERwczz3Aab+HfDmsUPKN4GiWppc2wPN1O8DdaW
/n2149xDirdB1PdzVam1LRRvCyOF+qaVdx9RvC3qzjQplT18TPG2OPVw3LZ3
j55QvC1sOWJ+28OnFL8FmvkLVQrvPqP4LRi7vPjmHjcZxW/Bg+fLjqx8QpZu
wbvLAXNuWjyneDsk5+6v16slww5XxOGvdy6j8YtrhxGmeScbj5GldmgduNH4
q3IrxdtD2X9C6Z9EMuxxPGhh9dsPZK49dKsSVlRYvaR4e1QrGp4Nu0iWcwC3
4kjhaNYrinfAdbtsz508MtcBOXIj53TJyFIHzPAa2HfFitcU74ivV9Weuu0l
wxEHLlin+3wmcx2hFs27ZmrURvGOEC3YM3L0QbLcVgyJP/m6pJOMrbh6zn6/
2qp2it+KwutDfDjpZOlWXOl3MvzgI7KcExpvR97InPGm1ywn3G87tcXdjwwn
bDpbMaDvabKTE1xWr9zv+53MdYL5FJOWvCVve53jBDXFJyF5YWSpE2KLpo7y
Ok2WOeHs9vlmX9+T5ZwxoXDXjVUzO6h9ZwRXzlQ2sSfDGQ+mXakfLyE7OSNr
4Yrk7Eoy1xl7Tzg+f9JJznGG9olH/DuT3lH7zgjYFzY/ypAsc8ZxC5W999lk
ORfEHhxy8NluMssFn+6PUt9zngwXtL+/vOLXI7KTCw4W5P+T/03musDuqqTo
wrj31L4Lvms9LlDSJEtdsPLkvmCl9WSZCyTHHtae20qWc4WffCPvXxCZ5YpP
lkOKXieQ4YrJbbwE/wyykyuuWhyL232QzHVFn1tBxo6FTPuueHBp9p1rJ5j2
XXHnr+WS+lKmfVeYjHVuDTnLtO+GggeGvEuMWW4orBvRt7CMad8N2cVTsxed
ZNp3w7si0WOPY0z7bohLUElDLtO+Gw476tRV7mLad0NSffmgD3ymfTec2eM3
pDacad8dhdopL83dmfbdsejC3e7tpkz77uAYF41PWcq0746akbfX67KY9t3B
nv+l+0R/pn13zHqj8qv9NdP/7ihuqrB+V830vzuajhemXi5g+n8b5rYctvfk
Mv2/red+fXn/zpbp/21ov7mt1GIh0//bkPzWJTJfnun/bdhWm+bQ+pD5/m2D
fsLS+glFZOk2FNiWCMwiybJt8FupciB9HVnOA7kH17s+GcV8/z0gdNWJWfOY
fh/wgNd787t1+WQnDxhtkmyP9iJzPeCfZKzqMo/5/Xlg5YKv2kkf6fcp9UDA
pdjDH0+QZR6YfPX89iJ/spwnZC4Bq67OYX7/nrg61Gr+qjZ6PsATdYM6fy3I
JTt5osljecA+W+b54olHwzeEpCmSczyxV6F6xPBq5nnliSk/zbbOiyTLPDFv
wPsdX+cyzy8v2CYtf+//lJ53LC/4X64vPSJmnodeeKzjsvSYHtnJC3pf1ep4
Hczz1QuaE4eeWppJzvFCPqev1pM1zPPWC4rj2LzwD/S8lnkh3Hrv5dGZzPPb
G39Pzf15EWSWN4ont02ObWfGA2+MH2fd1yWd7OQNS4UrZsGLmPHBu2c8X7Dz
YguNLzneaLQ/OMMwjhlvvJFS7qbFmk6WeeOKU2X5pmpm/PLBvuwDUU88ySwf
bBqaOKhpMDOe+eDC6frSVf/R+Ofkg617Bmaob2TGRx80fZ/eMfcRjZ85PnDK
/fZiqgpZ6oOvbmpHVm+h8Vbmg+bB6euyM2k8lvNFSugG/XVNNF6zfHF9mZfE
aDQZvlix7HNSqQmN706+OH4m6sOuNBr/ub6Y8XX231/VND/I8UX/o/NNOvsw
8wVfiOSKOni6NJ+Q+SJv4di1F8JoviHnB1fnX9pHSmg+wvIDu27+QNO3NF+B
H4Z+2Rp4eTrZyQ8twgH7uu2Z+Y0fvI4UjVfaTfOfHD+8l0n+Drt9h9r3A68u
o+79QLLMD/2DXLgXwcyf/MEZ8zuLG0HzK5Y/Eu8Wgut2m9r3h7zrTlafpnpq
3x/u1W4/Retovsb1x86axQM1ztVR+/64qGBd9HE2ze+kPT68OPReFs3/ZP54
0E8w59Xwamo/AHq3w+7P4tF8kRWADVUfruZ+YeaTAbBY+nKf9bZKaj8A3sNn
lu07RfNPbgC8LmxqHLr3IrUfgIl5Qs0h3HPUfs/7yd8P2OdxhtoPgEfoOFaF
yWlqnw3FluEdHJ2SXiuywTk2UGvvmmP0edg4oSIzChlX0GsNNs7aNowf+HA/
fT42HpdnqikPSe+1KRs3N0x3z8z3os/LRpG+/5Fd2vEre5tjw3Gg0s4z23b1
mssGe6Jdjl9zTq8lbEz9t+q5y5/Dvc5h4/aT2Q6rpxzvdQkbC5d8H5eac7LX
UjbuBPzO7Cwp7XUDG0teHw19KD3baxkboy/NqTJqON/rTjbUivu1Gzy71Gu5
QJiHDFzXESbttWIg7hgUWv77W9lrViCO5+iWv0i82muNQJhUKhZnDqH1DAJx
u8/9DNWM6l6bBmKNuW1rijKtf5wC4eEs0r158DrlHwhL1Ut2H1VpvcQNRNO9
PlN+HLtJ+QciVelpUpvGLco/EM3j/p6sOkPrrZJArM4bEGJ0sIHyD0Reponh
HGdanzUEIqhi58TBqrR+kwVin0Hg+vbX5M5AbFvXtKL26F3KPwgjPdiR//nS
+k8xCK1l/7bvWXCf8g+Ch3XWfOFnskYQvr1tHSYqo/UjglB2ZEjfAxxaX5oG
YZLP3U8Vy5sp/yB8d7Bq/tZNZgchtbOsau0VWp9yg8Bel/WwOKmF8g9CW+EO
4yVGtJ7NCcKVMxruz4fSerckCP9lDYsuaSBLg7Csz66fR3Y+ofyDINyx3/KG
Da2XZUG4erJGcfKkZ5R/EE7Mr7mY/5wsF4zIMvWuBRa03lYMxmzDvjOKysis
YCiKIhfrK9P6XCMY/S6p/PsXSUYwUupGmD15QjYNRkTkyT9PQet9p2Dwxwy6
LV9AZgfDO3CJxGog7Q9wg9E8vLFPgzdZEgxDvTlPQm6Rc4LxyeFAo4Em7S+U
BGNlfHn8ut1kaTBaL4Ync36RG4Khx/dxfeRI+xOyYBy/+0IceJXcGQztJWN8
dNVoP0MuBG/ajPT1RGTFEHgojbYM/UxmhYA7K6bslTXth2iEQCnd2i/9Ehkh
eLI/0TV4Ou2fmIag65ytS0YK2SkE93eNHPv+I5kdAvFic/lEK9p/4Yagwvr6
QetLZEkIlt+WTfdUpf2anBD4/xaeKUsjl4RgyoXF5vhCloYgNebKjYF2tN/T
EALbvLKGIcz+oazn82+Ier1hDu0PdfZ8fvZ1r5odZLlQnGufKY75Q1YMhem7
DAc/d9pfYoWij9qm8l23yBqh+Jh3zfLbEtqPQiiK5mZfTs0lm4bidedrO8sh
tJ/l1PP6ew6upqFkdigSzrS9jn7G7HeFYomzsK1DlfbDJKFocmP7L9hCzglF
+gX1+/x0ckkoVvepvv+liiwNhY7f/XFBv8gNodj77ZtGHw3af5OF4stDr0PZ
7uTOUKhUlbdv2M/sz4XhYdIWx/6NZMUweBd6b6mRp/09VhiEj12n7dAla4Th
6NQX792DyAgDa4xPm14h2TQMp2ctnzf+KdkpDD4tSne+jab9RHYYgk2nPG00
YvYbwzDhT6FJURxZEob0itETuWXknDA4H83X2NRBLglDYIJt8OiptH8pDcO8
GXVX663IDWH45Pz1d6SQLAvDD9aYT8pXyJ1hqGgLCjn0g9n/DEfkKm3LyfNo
/1QxHBvtJ9vzXMiscJzIdbC6uYesEQ47izVD/94kIxxVu7sNRval/VrTcFjl
mDTILyE7haPWUzv4kQ+ZHQ5brfQ/whwyNxwu06uXj79PloTDt599v9hBPyj/
cCR+5qmf0yOXhENpcJ6gNpAsDcflpBf/jh4iN4RDe0hesN1Dsiwcbzzf1bcM
7aL8e95fr717BshyHJj46f1dFkxW5OCYMKR63GEyi4NQA5Ot55vJGhykfR9/
jzXkJ+XPgb34u46RHtmUA91O1rGFAWQnDt51zTVuziGzOZA3XWG8/A6Zy8Fs
m2Uym36/KH8Ois2+GizQJudwEPPbovaiG7mEA0dZWNm/nWQpB/y9Nz2/V5Eb
euI15xtkfyXLOND42Hm+a/pvyp8DvZNf9fpYkOUiELW02OQsj6wYgamceZHj
S8isCDyfzzKb+ZSsEYGKsY2Bj4f8ofwj0HFlesKypWTTCDxKFC1auY3sFAHr
bUPWvMkgsyOgvnNswJLLZG4ElplIktU6yJIIjMs+v/WC0l/KPwI+3ye0fFhF
LolA3Uevp5W+ZGkEgkyjHLX2kBsisCB2xubVlWRZBJYkz6p+/5bc2fP6F8Mq
tMd0U/6RcJusZK6kR1aMhGrQyJzt7mRWJOaJDW4dEpE1ItG93XyIeRkZkejn
Nki86zHZNBKaUZt3BfT7R/lHYvPicZ7P1MnsSGTX9dv80oTMjcTLnwmnYkLJ
kkgMjM94emwfOScSp0L3rfC5TC6JxLO4zSsrWsnSSGSO2HyssZ8cevOPxJhf
VX+EY8mySMwe2f5AcRa5MxLtHSPkHHTIclEwi3+uG2hEVoyCXf5a241byKwo
NIstpn/yJmtEwbpkva99FBlRME3kKKSnkU2j0P/IvNuC/WSnKNwddXyfURGZ
HQWWaKJh43kyNwqV+qFnp9SRJVH4eTTkhvZDck4UovxFXort5JIo5N9sjjj1
nSyNgvTnwLYJA/pQ/lHY2bT5oNFosiwK+nc56Sumkjuj0DBq138/55PlojHn
yvy3kbpkxWi4F01cecWIzIpG17/IgttWZI1oaDgcHJvvSkY0dg8aKNFlk02j
sc/DcnRWNNkpGvr5OrmVAjI7GqU7ffWO7yRzoxH2IP+9Yw5ZEo1DKrxzTUXk
nGhsKUw9NuYsuSQaqSOn3FS+QpZGo0LVe07rTSb/aLT23/Ig+AGTfzTiwnbK
6p4z+Ufjr7OvbXsHk38MFsQ82HzzG5N/DFzmunWE/WPyj0F9yoKF7Qp9Kf8Y
LD3waCVrFBkxMJcmLZyiQjaNwdY5l6a+mk52ikFFccS8oLlkdgyuZowKrtYm
c2NwOm/RqBe6ZEkM0u2fzrm2lpwTg7z1G18EGJNLYjAp7p/NCwuyNAbdSw6X
TrQjN8SgqmCyyhQXsiwGDxq9Tr/xJHfGoOF0waHoALJcLF5ay6k0h5IVY/Fr
4Xm9P1FkViz2i8csfcNj8o/FzWkmS7P5TP6x2HMh22eyiMk/Ftyhc7q3ZTD5
x6LP/r9TIvYw+ceiu7Z/n81ZTP497f0ceOdXDpN/LE405VZ5H2Lyj4X3saVD
Dh1l8o9F/yd/mo8eZ/KPBSe52TniJJN/LHInB7eMLmPyj0XLqpmciHIm/1hY
7OliH7vA5B8H3Zo9vw9XMPnHYY3Y3CSgksk/Drbtowr6VTH5x8HcwkbTrZrJ
v8dqmlrba5n84+AzaJkstY7JPw7nfMXBZjeZ/ONgqV0/61U9k38cdrkN1zG4
zeQfh9S3T5+FNDD5x2F5xHK7wEYm/zh4RKe9Xn6HyT8ObZOyKu4xbohDrfN+
lu5dJv845FuOXh/EuDMODiavOOGM5bj4Z6TfsYGxAhdr1pc9+8i8nyIXco/k
drkyVuai30Gd9UeYz8PiYs774ysuMJ9XjYub4g8ns5l8NLhQjJS2Wt4i63Ax
6OSkMY+Y+wEuJs/WSNC8QTbkouv6xkC768z95OI1++tkqxqyDReF46tvTrvG
3F8uQuWTLlReIXtyMamv4lwtKXO/uQg44bg1/BKZw8W3NzG7xeeZ+9/zfkuF
oyLOkgVc7DY9M2ZJKdMfXHzI1npaW0LO5GJG1+qS+cz3L4eLkuWzbnoy389C
LoSTVYPDme9vCRfbfka+3pJLLudi6TEPj9EHyFIuIuMnLcnNJNdyUW5Ytbv/
TnJDT/4GoTV66eRmLpS8dAZvTCXLuNjs1SdHM4nczsWsYcevf4gjd3JxKbC7
hhdJ7uJC3S3rUUcIWY6HjJvD9ecxzwMFHnRnXlxr4EVW5EFbvm3CEleyMg85
JUUD5RzILB6sK/6uz7Uiq/HQcvuQqoopWYOHN5tW3vMzIuvwMBmL9+5dTQYP
maxrpw4uJxvy0HH/89YY5vloysOLQsmzRfPINjzMtNBh184gO/HAH7vedNFk
sicPu1vfXopWIrN5KM/s++PgcDKHhz0rli3NkidzeWh1+lUZ0k3PewEP/QK9
bql9Z8YjHlwWee8vf0/O5MHIeJ+76itmfOq5H+WmXr6PyYU8LI/LeiG5y4xX
PJyyWDMso45czsNGC6kqu5IZv3jg3FztNqecXMuDifJx+apiZjzjoYK3w2DZ
IXIzDw90ljuK9zPjGw8zbPfypdvJ7Tws/m32p4HPjHc8zLM+++1yDLmr5/58
qf1PFMyMf/EY91pzyzIvskI8FrM2Lq52ZMbDeITWT4hYaElWjkfWBaMt0f8/
P4jH4+aFI4+sIKvFY+i5e/dOajHzhXh4LnjyKEuNrBOPts8H7T0nMfOHeHRv
VhKNGUU2jMcP+fa8XHlmPhGPyFanuyN+03zHJh55D0Mttn5k5lfx0G+6ai1p
JXvGY3lV+pj8B8x8Kx4Ru6sv7blB5sTjrOvfZP/LzPyrp31xYP6s02RBPF51
KxhcPczMx+JxzcU8d9U+cmY8viQlteWJmPlZPBRKEta3ccmFPR7b/Ht4CDNf
i8dU8/K5EzzI5fEQ/ug/fBAzv5TGY/TU9Q2PjMm18ZirIs3PWMnMZ+Oxfaxx
+TxNcnM81rRy9Y6rMvPbnvt/Ldtl5DhyezwOGe212jKIme/Go6/ZRIniD5ov
d8XDLjanbvEjslwCLo+uKZ/FzK8VEtDm0F3WmkdWTICBxqRJPslk5QTcneZu
WOFFZiVA/WPi9ifGZLUEJL7aZ3Z9AVkjARn+S57zRpF1EhBYtDVz4Ddm/ZCA
ohmSW1sekA0ToL/nckvUOWY9kYDiy86jffaTbRJQsNn7lloM2SkBrH6mzmWO
ZM8EDAkfMXUkyOwEOKfOd9GdSuYkYFzQZc6SvmRuAs7KuZX3baX1kSAByv9M
Qw5eJUsS4Jhq9m9wATkzAdLkuiLDRGZ9loBjEytuWLuRCxNgtvZ2ic5aZr2W
gJ9b9P/rmE4uT8D56yNGBPZj1m8JUCq+rn79Ba3/ahNQvfOS8ddKckMC7Je9
qfmcQ25OQI1Zn46qOLIsAQLr0AE+juT2BNzwCt72SpfcmYDHM9/Za6uQuxLQ
lb57ic1PZv2bCO/PX9aaPSArJGLofYu7U8qY9XAijrU90KjKICsnYsj38KIV
bGZ9nIjClgHb0zeS1RKhH7pwwdnZzHo5EYJs4d2ygWSdnnhW+o20l7Q+RyIu
5OxzW1pJNkzE6YPdHRUHyKaJSNr8p3hiJNkmEbuL636ZW5GdEjFedd9EF02y
ZyJ8CjKd1w8nsxNh5/1Naehb2m/gJCLr3suUI9eY/YdE1GgVDJyUSxYk4m1a
zBPfaLIkEWyrGzZ7rMmZiSjQ+FOdpUnOScSKtN2hMcPIhYlYvlr31NJ22i8p
6bkfOsV1jVfI5YnIab491OAAWZoIyx3HqneHk2sTkbox0KDKjNyQCGNpQsut
OeTmRETdCGw8M4AsS0TZue6I6Ge039OeiFOBqtNZ58idiXh4QGliXga5KxGl
FfqlfX3Jckmwn++yfLU+WSEJt0ds7eM8mayYhKxFoVZbf9D+lHIS6tpnpOk1
kFlJqDqs1/m7kKyWhFW3mpr28cgaSfgzz14yYQtZJwmzU9P8ozTJSELxEM7V
S4PJhkkI2yN8/vwF7a+ZJgFjxCrtTH2mTRLysw5UNWSQnZIwcN8yjSxvsmcS
cm+uPbV+NZmdhOwl3QcfjydzkjBywLAN5p9o/4+bhNB1MUP+qyULkrCz8Mqi
t9lkSRJSB56fMiycnNnz/t3HpozdRM5JgouxkbDvDHJhEgo1z1y8/5vZr0zC
oFKeQvodcnkSWq4V1cw/Spb2vN7pkHkZs/9ZmwTdZLO+063IDUn4PltegzOX
3JwEnYGiRWV9ybKe9u1U/Vqaab+1PQl998QtbC8mdybB6l3Nk6eJ5K4kmDRm
1VdsYeo3k7HIfYyDQIOskIys6xfalzP7v4rJqHDYU//wEe0PKyej+cM0L5eT
ZFYyntWajW9KJqsl4+olse4ie7JGMsJGXVzIXUjWSYbWFi2bs/JkJCN8xbUR
jx7R/rVhMuS1z5V3lJBNk5E9qf70mySyTTIKWrRd7jP7407JmFazd8aJBWTP
ZKycMcEpvD+ZnYw5nyXt9qdov52TDL2izalH7Zj992RoTg7xvd+fLEhG0f1K
q+fHaT9fkgwPn+8jb1mRM5PRnnHUI+sfnQfkJOPWVLNpGwvJhckIbFox7Lkp
uSQZocoHv9r8pPOF8mQoHgg8VJZLlibD/aXk/Q8jcm0y+hw9tJ/1mTnPSIbq
fPU4jX3k5mRYxjp7qq1mzjeS8YfvqDboLZ2HtCfj0/QfkrvbyZ3J2DGhOkSw
lNyVjJbPM4+oPWfqX/n4Ua35p1RAVuAj699Fw/kaZEU+jD6buOx6QOc3ynyE
xalP6Ygls/g4s32JlcZMshof63eOeeZez5wX8eH+oF+GMISsw8fKjvfrDqkw
50d8zGmzbym5QudNhnzEHeZML/Eim/LhLNevO1+RbMNHRpuFvugsnWc58XFC
vPm+L3Pe5cnH7zBu6poBZDYfXyMfrBr1H52PcfhY09za/NCcqdfl49f0k/P2
/6TzNgEfbgbXJ1vnMOdxfOR7aqQNX0fO5MPluZP5lfd0npfDR8j4dZbBO8mF
fLwP1QuctpxcwofPfIXUhud0PljOx+VFjXGxArKUD+8RqtrzFpBre+5PyRvB
k/t0/tjAh7qNm5MkmtzMxyvvOQcMppNlPZ8nb9PavjvpPLOdj+KcCYd4z+n8
s5OPHU/PTB+2gNzFx7DCQv7haDovlRNAwfR7pkkdnacqCDB+wBTWYGWyogAF
WaNeP3Cn81hlAS4nqJeeP03ntSwBjkgmWpb2IasJkPLvT3q1CZ3vagjwMGSu
5pcDdP6rI8DKP5YDdN/ReTEEsB/vfC9vGdlQgNRPwd7qKXS+bCrAjrDnGY0P
6PzZRoATOTPHH5hJdhLA4uzzWlEonV97ClB7vM7vUBWdb7MFME0vuvtqNJkj
wJofNtWmrkx9swBNGcdGtp+i83OBAHnVwbzjfckSAZ6bRz/PM6fz9kwBMud/
/rVDn87jcwTwqhi02uh1PfW/AOIEzQVefDrPLxGANWuE7Q81Ou8v78mnu3Xz
jzqqB5AKIP9XcMHXj+oFagWYbmE/xU6xhvpfAEGZtlL1aao3aBbAd6ql9knr
Kup/ARoObxnG+kP11O0CfNJdqq2US/ULnQJkKc5YvseA6hu6BAicMtZj40Om
/iEF4od97CUzL1D/p2DxsqiQ7hCqv1ZMwQFdxVsHq+jvO5RTEBVol8gZe5r6
PwWrpnaUZHiUUP+n4EO5eVN7aBH1fwqWtaRIjKZQPYdOCv7e1jqz+QbVeyAF
8ut8GhZ/3U39n4LKrXcG5RcLqP97rqdND43qY0/9n4LXStodpXm8y739n4Kg
eNW37fY7eu2Zgn3RX/eGvzjQa3YKVnxZuPqbBtWvcFIgnO3dkuF3tNfcFBSu
4ubKH6H6b0EKWl/ftcz9cLLXkhSULbieNFFA9eCZKbjaveHL+ylne52Tgrvz
AkqGn6F6m8IUBP++fDd8PdXjlKRgrY9t+LQnFb0uT0Hp8ajH/c5Key1Nwbz/
+jtIuqm+pzYF4RdemGjpX+11QwqmGh8wepNK9UHNKdgQfVJWfPtar2UpMB65
/zh3NNUXtafg0I4n6+2sanvdmYLt/YdtXp5J9UhdKdCRNXlPekj1SnKp0L82
eF63MtUzKaRCfU7+ihZrqndSTO15ff3a4l1Uj66cirhTX1+H3aH6KFYqdv12
8VDmU/2UWiq2OU629FWl+iqNVFw8dU+yqJKskwrhs8ehQQ5Uj4VUzJRK7af+
JBumgqO6Kgc7qZ7LNBUG3bZZt5h6dptUdLgYFF+vJTulwi4vUVvDherDPFNx
0qRFLPebzE6Frb7N5KU7qL6M0/N++Y76zbOp/oybipdPcjweV5IFqTA/of52
jQ3Vq0l6Xq+yVWvYB3JmKnTd5IsWJzD1bqnYMdTwfMU4qocrTIVJ/ekb+UXk
klTMFa3d8HIF1c+Vp6LB3e1wbCNZmoqHos4Nga5Ub1ebipVb9f47/5XckIqv
thOW2iZRvV5zKt6MbHLfMJap5+vpn1Wrj6QXkNtTkVR5NlhVi+r/OlNRumPC
GoVKclcqnv/0r5k4i+oH5dKQObu/l50fWSENXyv2r115mqyYhh2bzPfWdJGV
0+C+cMyRL3pMvWIaVqdlF1+JJ6ul4Y1L8ietGrJGGp6f1jhlMITqH3XSsC3+
qdavTWSkofrX0fMbM8iGafgpTknDfbJpGt4PNn/XOI7qLW3SgJry6X22MPWY
aUi4tjmifj/ZMw2xTw8tWvyEzE6Da8fQvGWTqb6Tk4aLfx4otDiSuWk4K1pZ
NjqbLEiDQZnXl9dPyZI0fPHzVbSYTPWkmWkou2myxdqBqTdNQ+16RdaX/eTC
NEQNyj05o4VckoZ5qh+2fhhH9avlaZj8+2m08WaytOfz8G3sVmaQa9Ow59xK
k+pb5IY0HG+IOi4bTPWyzT35XOy6ITJg6mnTcI5/tE89j9zek39p6uEDF8md
adhdXjD633dyVxpmuA/P79Rg6v+F+On88USgN1lBCOX8+N28fLKiELI3yqVT
HpOVhdi7TsVjwximXliI0P3DRvQ3JqsJ8WHO9qFGCWQNIRbO9Kgcf56sI8SJ
JcGS0E7m7wuE4LAqntjNpPplQyGqN3CG37QjmwrBD/4juCYh2/RcX3KndN01
ph5aiKk1Jb/MfpI9hZBL5lW1zqV6arYQXuUuMX+2kjlCOMw9tn1/BvP3A0KY
dbb5S6vIAiE8/rUneH8nS3o+f/c57J1F9d6ZQrR3HFUytiHnCJHyzJgTLyAX
CqFeF/tweTm5RIjkudtOhLeRy4WYJAtjL1Ji6uOFWH83ZGfIWnKtEAqNYTu1
mb8HaBBCb/WbtyHZ5GYhvv6UjF50k6mnF2LiD1FaSBe5XQi7uY6NmqofqP+F
GLJJ5hZgQu4SQrDdqkY9kiwnAi/aK8q5gKwgwsTC2QOUbpEVRRBKxr01+EFW
FsHZaOLJL1M+Uv+LMMxh9wsVQ7KaCHXh1gqXA8gaIujpFh5/vJusI8KHb+u3
hlwiQ4RVbrFFSa1kQxF+acuNFPTvpP7veX9PhWODxpFtRCjvWuq9Tp3sJMLj
8+dVVi0ne4rwX2xoyndjMluE684qcR6OZI4IfdVmXN8RQOaK0CflnnYUlywQ
gR25SDJpO1kigmb8lGORueRMEfhdi80zTpJzRPiz6YONWyW5UASBGT+9s4Fc
IsI2tzG1i2Xk8p77KY24v/gjWdpz/bB/Wudfcq0IGdtjK1yHfqL+77HX4LWS
CeRmEaoLjD6HqpFlIvwN3ZAzZjG5XYRbL3/M8F1D7hThxFtF+2hTcpcIc9O0
Juo7kOXEOC9rRrUXWUEMx5nWh/6FkhXF8L78YsYnHllZjCit9Ox9IjJLjGpV
087fmWQ1MU7o//o+poCsIcYyvbU7XhWTdcQI2F5zyO8cGWKoR/dRPH6VbChG
U41FaX492VSMtbsHhJk9INuI4a6+dukZGdlJjKkHp7c2viF7ihFakG1b8JnM
FiNvTlbCvN9kjhgO/V4b+vX7TP0vRkiEVobrELJAjNQOVSPF0WSJGCUm+jbB
E8iZYiidHlwknErOEeN1SdM8ezVyYc/9evq9/vl8cokYxmqHIiYtIpeLMV5L
gTViOVnacz8Pap08A3KtGJtM1SaPMSA39NyvQ/dsZm0gN4vRXDDGstOELOv5
fBNO9QuwJLeLEVHuZp9vQ+4UI3bMHQuRPblLDJ/TItlcJ7JcOsQ/lH/xXMkK
6VAY1Jop3EZWTMej04ZnjL3IyumYv3in8RUfMisds+T/Wr33I6ulY5ngSGN9
AFkjHd/KC865BpJ10jGq8dPQE0FkpMO/MbzuRPDny/8DN6rJzQ==
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
mrGjbLXjCv8PRB1EPw==
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Ov1IUgKuTl++tQv9SmoCunqUj3Wkn8lIgHzgrh0p9DtZCbg5WFJ3kX4oLwFf
lm6cXke/lJ+APgemn+5KP1WUgEufJ/mNpt8qSUB2XqDUjn6sNAED7vVoL6Bf
K0tA8bqDlp70cxUJ+Nyn2kBIv1eVAAO/G6U+9IO1CejUdF2MK/1ifQJaa45O
XUo/qaPBlStvJ82g39TVIMZwUPLwP98DaGCzaruj/gDqr0GtX+7xavpZQw2a
6P24ep5+10SDHS6OBRvoh800GHazNN2ZftlSg7s+OzIGd6H+jT//YsLT9/Tb
NhoMeTM1ZD/9uL0GMxuUSS70644a3Gv4a3ZP9vsFjc97/XPJdfp9Nw0yPmYO
jeB9QKjBmUHrU/v95v1PA03bENMrf/4eU4P3u3p18mJ/X6lB0S+Re2v295M0
CL50Zt5u3ldSNWhX1vXT+A+8/2ngcvuD9y3ed7I0sMi6VOn8mvc/DdqaWYs/
8r6Ur8Gkw72cov58v6rBxOAxOS35fWuJBk52MlHCn36+BsXGHXU7sJ9fpsH9
8NZr19/m/U+D3i33nup0k/c/DR72tTJbx78PrdUg193ktV4J738avBtU1VzN
73l1EuFQ//tAc37vq5uIXcNbtIr68z1wInyEW0Z+Zv/eIBHGw32WebB/b5iI
rIFjM/5l/94kEYs+nB64gP17s0S8cDnXpWQf73+JmDLLIGUc+/dIxLc9yWdy
d43G/wCXkR7V
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.9468278869568478`, 
        25.737953858528087`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.9468278869568478`, 
        25.737953858528087`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1  x\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1  y\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1  z\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2  x\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2  y\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2  z\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711724720452669*^9, 3.711724760398329*^9}, 
   3.711733372633285*^9, 3.711735780440785*^9, 3.711735982438286*^9, 
   3.7117360331068697`*^9, 3.7117695098708878`*^9, 3.711769701397931*^9, 
   3.711976643527371*^9, 3.711976689493754*^9, 3.711977082901428*^9, 
   3.7119771226805563`*^9, 3.711990324275758*^9, 3.711992278765443*^9, 
   3.711995374790902*^9, 3.711998461256652*^9, 3.712029226484692*^9, 
   3.714926117801708*^9, 3.714926206163927*^9, 3.714929697114887*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures_no_attitude/sim_input.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.714924629379219*^9, 3.714924643764648*^9}, 
   3.714925932933712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensions", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}, {
  3.698506725913652*^9, 3.69850672844914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"tensionsList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "2", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(2\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.69850669195057*^9, 3.698506717899823*^9}, {3.6985508208686934`*^9, 
   3.698550885416868*^9}, {3.698551309719589*^9, 3.698551310008038*^9}, {
   3.7098119851768627`*^9, 3.7098120064221*^9}, 3.709874876888335*^9, 
   3.710227167729561*^9, 3.7117247803969173`*^9, 3.711774379730167*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9W3lcjOv7HimSEEL2kEQhJJ2DXEiSkD0VhhZpnRbtyzRtU01JOmTPHlKD
OCGM9WRLnNBJGAlxkqxlOfzm9/nO1fnnfC5P93u/13u97/M89309M2h1wAIP
DYFAUN9WIPj////vv6YpXzrLIuYEa0D9D9h3cvP4ZD9ibTS62ntK1xDrIedr
kPuSVcT6sEySCz84ExvAq3i8z4pFxP3g3fu/yO1ziA1hL5sfUmhLPBhXCrNH
bZpCbITjw40iFlsRG+PHhtiBjebEJjA5u6ph1XDiEaiONS84PojYDNG6SaNq
exOPwgfTbjM/dCU2R63r69t1HYjHoFvIlF1n2xCPhST2+tbwr23UeBwSd9zY
0/89sQX2yV5vLagnHo/aj888hymJLRF0e/Dr9Q+JJ8DG2qtNfTmxFZzCXdPH
XCP+TcXfbrn/OeLfEfu0xjavmHgids7srnf9CPEkVJ4cG/5mD/FkWGx7b9Fu
K7E1HuSfed9/A/EUCN91mzdOSgzMvW1YOzNOjcXAYNECi+WhHJ+K0JmDL4f4
cXwqfhc1/1rvzvFp0Hs80FHuwvFpeHDpme7DBRyfDo1duxO07Dk+HZGCPl8m
TeW4DXK679kaa8VxG3jeidt+czTHZ0A/dVq/ocM4rsJ5g81lAzhuC4PG1XVt
enLcFjpF8okpnTg+E6sLYkf31+L4TKTtdpJf+SFQj9tBoGd2IPaTGovtUNop
sWl2A8dn4bjmKc+RdRyfBe+a/x4OqeG4Pbw3STuaV3LcHuW6fooFtzg+G4NN
Nx6VXeH4bFwpSIt/UspxB5j1WFhrd5LjDjCY2Mvv1lGOz0G1/dOTaw9wfA7E
WybNHLSL43Nh/OnD7o+bOT4XzrZ7Jz3L4vg8FIdEJbxJ5fg8HB727mGXBI47
4lRzdNb8aDWGI7Z/l7QUrePfO0I4dqijaYAaKxyxZMfMW5e9GD8f/uN3bIpY
zfj56Db61m0HV8bPR/mSg0mTlzB+PjwPRf0125HxC6CvEGWH2TN+AUxGfHuk
sGH8AviGLs0aNoXxC/DEy3Djkd8YvxCfiqsvOFgwfqFqPtn0Rmc04xfiyrL1
yhfDGb8QaSblXo+NGL8IJqtu2rwfyPhFeHCz05hBfRm/CAu0rr7w7cn4RfCv
W96rsivjF+Pwxi5hSzoxfjFG+QtPfNRm/GJ8+bg7/Igm4xfD19MtMEbA+CVw
lZ/MuNfya8r/4pdAf1nqtMdNaixeAumCYMc+r9VYsQTRV5u1Up+psWApJl1Z
d8ykmvFLUdWyc3fLPcYvhfLU06EtNxmvGs8qyTS+yngnKDJ1RiWcZ7wTxKOW
Lu1UwngnTJr3eeWVY4x3Qs6gSbsOHmH8MjSY7vc/tZ/xy1Cz6uXwpl2MXwal
tdboRVsZvwyCK25PnuUw3hlVxmVbc9cz3hmTGlZeD0tjvDPc+164G5vEeGfU
Danpf1TMeBc0CDr00YhmvAtEPd9YxIQx3gX7LH2e9g9mvAuumJ+QPfdnvCss
0PP4bW/Gu+LWgfZ/PfJkvCtsTujM6OTGeFcY+u89uGol45cjr99M3yoXxi9H
zRWHboFOjF+O4geP+5guZrzq73u90m63gPErYPBvh1Vt5jF+BcS6mYf6OTB+
BXBzoffSWYxX/f0/18yO2TJ+Ja4cvxs13IbxK7G98O7zC1MZvxIWxekfgqcw
fiUa9g2aMGMy44UwW6c9bdxENTYUQtryc9/k33g9IcSrtT66TVBjoRAW4YsV
+8fz+kI0Bbns0bBQ4zwh3LOKRkeOZT4hih30BLpj1FgphMn05QV/jmb+VaiR
Z5dHj2L+VWjaeLWNy0jmX4U8N8Pa+WbMvwqJy5S6q0yZXzVut9BQOoL5V0Hv
2/2z14Yz/yro6/4d149YuQqasy51SjVh/tXQX2eirUtsuBrRKZu77R/G/KtR
Nrvo7kJi4WpcWT3g317E4tXQ3LlX670x86uud7TL9SfEitXIMZj5REmsXA0n
sc27L8QCN5T17nvQkNczdMM+j6/Hlrfmd0NJT7NzR1vzu6HfoEFherxfsRsc
G73XJxHnuaGq4PIp3Vb+bsg6qbdrfyt/N5j/8vg+j89L4A6TrR3EHfk8Dd0h
GxlW+5AY7sj1d/unuPX5u6Ml/UK/PdRH7I7i5FKPXdQvzx3ywHL/AuqrcEd4
dtHHMnPmd4e5i9uxT3wfBB4o+/03z9HjmN8DVVZ37obzfYIHZK76Jyv4vgk9
4Fhpf8+S76PYA9o1Hd4etmJ+D0xynnLD7Hfm90D0mDHmpXy/lR7IsY596dT6
/nsCbQae0uD3YeiJffUea0+D+T2hPf3XzehpzO+Jpr+aDjvwexN7Yvv53EoT
fo95nhCeKTDoasf8njB/PcFOy575PaHbnDtei9+3YA0sYuKK9eYy/xpEC15v
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
DEy7c973Gfc/earnU7u/Yy33R/mq5zP9a+Fj7p/kGZC03ehTSf++JAMamuIl
11r9+wx8GPgr8QTPs5VlQNtBrLud590qMtD5zF4NMf36qgwYNVvFrKRfr8zA
AR3r7N/p19er9Mx6srQr/fqmDDy5H1T3nPvLFtX9NcTOPU5/XpCJa38dK4im
P6+dCUv7uh7TW88DZkJ3hcFuLfrzBpk43jbc48oe6p+JgtWLIuPyqH8mdB4a
NVvupP6ZcPiZ9PEN99dWmdh5ySplG/14ZMLGfdANO/rxdpkYK7Gt/MD9u2Mm
nAwrzm3Jpv6ZKDzabtdk/r5RmAkj7QVZT1gfeKmuH2d1OJr+u0h1vw+XaxnQ
fw/PhLmd5Iy81X/PxPno+Fpb+u/STMiz52+qZv2SlYn8nhrvfOKofybuCc5q
fWf9k5eJ0qKzH1N4PjU/E8bPl93rxvOr8ky8KRac3Ua/vSQT/bJH/zU4mPqr
7mdshF4+/fayTKzOlMhN6bdXqPI/bHPxKP32qkxk+Z5zGUW/Xal6/rfTth7l
ed36TORlz9lsyvO8TZmoc/3ik7+K+mfiy834sUYrqf96eAU0a+7i7zW11yPy
tNd/Bs7Ufz0s378bn83zxwbrET6kqEyH55MN12On/p07EvrrJuuhGBPr8Y31
s/l6XBO/2xtIf91qPbZuWLa/vvX3nuvh7/85YaWdAP8HhnVwdg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
2Ib98dJkuBnldalUUP9keL5VFS6gv1idDJfaSYbP2I+vTUaPX7QDJanUPxnR
R1rKhqZQfzW/N3+OuC+m/snoey2sdn0i9VfrlTyk3IV+Qmsy7DzsfhtEv0Eg
geLLi5et9Cd0JXg3//TCOvqL+hKEPejqXUG/w1CCpoq/JhfTDzGWQP+D+9si
+ifmEjQ4PlOeoL9oKYHdhw7jq+nHWEswfsovrU/p30CC5mGHX3Wgv2MvwTVp
0IAJ9IMcJajtMeGgkP6RqwQ2r7fkF9Nv8pSg4Mjx/u3pT/lJYPVknLkH/S2h
BAt6u90+R/8sWoJTwc0TRnpQfwmcy5es2u9G/dX8ukV4DVtG/SVweHxh3qml
1F8Cwe+OI5xdqL8EBlf3GHx1pv4S6L2uN/hjMfWXwHrF/ineTtRfgkdDxuZY
LKL+ElQ72Iz+sZD6S+C0sFufewuovwS+ByM8K+ZTfzXf1Ze6HHeg/hLsCG8a
WTyP+ktQE4K/y+ZSfwmMO5/6emsO9ZfgTeGV0s/21D8FDR1FBqbEuik4Uz66
7/LZ1D8Ft37o3dxlR/1T8NMoe0bLLOqfghVLbkQsIDZPgSJsdWjJTOqfAtOY
lVMtiK1TUOXn3fDHDOqfApsv6z3HEdunoNRp/fkrttQ/BSaNGV2FxK4pyB1p
ZjeA2DMFR6PWB9+fTv1TkFGVkrmLWJgCi50WeSLi6BR4fZ16eDGxOAVXun0+
ZUMsT4GVU5e/xhGrUhDsWH7Nmjg3BTsKr9bNJs5LgaR75P+8iAtSYDcy/l06
cVEKtE6Yfj1DXKq+34DxWj+Iy1NQ1vdbh9nkU52CN1WTdHcQ16ZAvn6WoB2f
T50ad2p6E0LckAL0ia1pIm5MQeLcmg2hfN7N6uvdHT1bm/q0puBGU8bD3cQC
KT5VjVk4n/rqSnGttePm9m36S1G0T3TsL2JDKVpK3Tat53wxliJsrPnUtZxf
5lKIRVe3OXH+WUrRKePcwRmcn9ZSeEhbfcH5CykMr38ps+f8tpei5+bKPz04
/x2l2DDomUk83w9XKX5MC+6935H6q+/nyNeUer5PflIc2pvvMoDvn1AK6cB+
qUF8P6OlsFZkaf21hPpLkWh6pMKc77dciuKMmuJNrtRfiup5+Ve7c33IleJA
yNZ/c9ypv/r5dFWMa/P7C6SIf/Xcp5L+e5EU/XX3JPrRTy+V4rP73JDeXL/K
pWjybTa7Tb+8WoqgxgkbttIfr5XCMctpXxD98Dopsve1s7fn+tkgRcOjHP+R
XF8bpYjU+udzf66/zVJMOal62Jvrc6sUxotDdQZw/RakonL9aM+RXN91U9Es
Edye3bb+p+Kd7e6Fgfw+GKYi4JXwVC79a+NUGKxY/t/fPL9irh6f2tyhO78/
lqkIPjf3rDu/T9ap6LtniG4R/Wmkomf/h7Vd+H2zT4VZret/In7/HFPRcNoi
7jn9aNdU6NrGD1vJ76dnKn6aGHx5oqT+qRgu8axay++vUM3n3eoYLX6fo1Ph
FlrzfSe/3+JU5GxpsLTj912eije5Of9+ot+sSoXYMdmukPVBbiq2RD14H8j6
IS8VhiWy+rGsLwpSEXRJ72N71h9FqfAqzPv1IeuT0lTUVAwwOcP6pTwV+u1/
bbeX9U11KrTHFmWvZ/1Tmwq/Xx+UZrA+qktF1x1mS9JZPzWkonr6Hft1rK8a
U2Fl8li0jfVXcyoy3F+dLGJ91qp+fnMWtV5m/SaQQXLNXP8d6ztdGbTyrZ8Y
XKb+MvgdbjfPjufDDGX4MaNsePx16i+DlWK1Tyn9YXP19e7tvvmN9aelDNHt
Xi+Z8YD6y7DtrH/N7zyfBhmudO7S7cUT6i/Dt/XSdqAf7CiDQ9cZSTsbqb8M
hwqTfLTfUH8ZitIm/B78nvrLYKE36nF9C/VX32/Qx2FO9H+j1fdj8HDxZfq/
YhlUg/TGzvmX+sugfSd832Wez1PJ0KP7DZmTtgbnyiC7dfxoPc/z5ckw90yS
9lr6vQUynEpavVTQjfs1GYaL/GWbemhwqRp3FwaNMeD+TQbdyBHPantrcLUM
uR8sq8Po79bKEJD5rKUX90t1MlQqlTblptzfyXDfYHFqIPdbjTIEbxu3qzf3
Y83q5yEzCqrhfq1V/fcnqs8lcD8nSMPIwa8jxnK/p5uGA949/F5zP6ifhpIZ
JSH7uF80TIONxwTfVbbc/6VBcaDBdADPW5qnQW/wK+mjOdz/pcHbOWLlTvq3
1mmoeZ2btYr+LdIQvNq10XQJ939pcMw+YP/Klfu/NOyYE5t2yIP7vzQUv9+f
IPLk/i8N2X07a0/25v4vDXvHiT62o18rTENrp0Oml+jXRqv/PjxJqKJfK06D
6evCw0vDuf9Lw4uR3071Z39AlYbP94cFPo+l/mmI7NBx85/sL+Slwe6FR79Q
9h8K0iBc2Vo7jv5sURr6Hjqm+Mr+RWka4v8NGXqG/mx5GnS1e4sTfqf+adiS
l+8/dSP1V2NR/3Pfc6l/GqoTNy4r3Ub91c/z+Oge4XnUPw1jdg2rHEY/tjkN
bz78bfuUfmxrGkRGyWtz/qT+ctg9L+1jz36Qrhw/OnUa8uUo9ZdD7+JA/z3s
JxnKURB46bQDzwsbyzHm08vWFvajzOVwzkn5tpH+q6Uct5zObxn3F/WXIyOl
+dj1auovh7Z/tHHAFeovR+nxt6d+/k395ejZu9OKdTepvxzeFw8/68P+m6cc
FwSvh+5lf85PDlXOR13zR9RfDs/gkcv3P6H+cmxrP0rL5Dn1l6PkRenNTY3U
Xw79yRUHddlPVMlhMEYYJGK/MVeOuVKTN/fZj8yTo6wxoOOUz9RffT/pv+7a
xPPaRXJoRQ1Qvf1B/eWQGVw5NpV+arkchr9nv0pj/7Rajhs2Q7tdYX+1Vg5x
11StTp00uE6N39zfNZ3+aYMcrYN3XQ6jf9ooR361asX2tn6vWj+t/RMr2A9u
VesVYzblUW/2f9OxbX/urE/0S3XTsXvE3+Pas/+snw6Pwc/fdKI/apgO3VDM
69zmj6Yjo8P60drsd5unI3LKQ/E/7IdbpsNZJ8DoMf1Q63Scwf3H5aPZP05H
SVOfY1vYf7dPx5TVwsigCewnp6M0L0hvPPv5rulQ+Hxb+oX9fs903ApdNqWI
/oBfOnyLjLd70t8UpsNh1bQVuvQzo9Pxzebn6v30M8XpkO0WrJ9K/1KejqN5
s2pr6Heo0tEyeGi7hfRHctMh6uLTuabNn0yHjlWP25PpvxSkwzXtj5l72/wa
9f13/2V6e/o9perrCVYdcaU/VJ6Owj88EvbST6pWPz/Zd8UL+lG16bgyJr+6
P/2wunTkrBrWe7439VfzrS1fE+pL/dMht9LekelH/dORaPZj39YA6p8Oe53e
AbuCqH8GKuvH3d7G3z/oZsBlyuYbWULqn4Eq/c/zRWHUPwPf4oLGOoqofwY+
5WWEDIyk/hloCpn//mUU9c+AQdDAvD0x1D8D2sH/C3Hm7y+QgZ8rnzh8i6f+
GXD+cn/wxkTqnwH5Gq0mUzH1z4Bv93/lfyRTf3W+Ec9aTFKofwZ+hM0y/F1K
/TNwqHhQ08dU6p+B4clfls1r+z1IBm6dOLxsk5z6q6/f5+iDu+nUPwNTHj+4
oZdJ/TNgYSkZM15B/TNw4UTYu8VZ1D8DzUafvvkoqb96PPyCQ9A66q9+HhcG
3fNVUX/13weXb1zyO/VXP+91l6Ots6l/BjzC30d3W0/9M2D0flHWfeKGDNiU
bTi4mb93acyATt3t6w4bqb/6eVcebvlI3JqBSQ8mdlyXQ/0zYbtXt1v/TdQ/
E7WCkT/ziPUz4Rwx8XqvXOqfiarl1ikSYuNMOA0s6faE2DwTxSvPhI3dTP0z
Ydj7ZkEMsXUmLG4IDh8jRiaUR2okT4jtM/Ew18qk/Rbqn4kFEysyDYldM9Fg
HFY2kNgzEzp/XTzZn9gvE76yioRuxMJMdC2q7/SJ14/ORGRob68rxOJMjL/Z
LM0llmfic/6KCFdilZpf6MNxesS5mahZ6HXpGPnmZaKsznfsQuKCTCg+P4p6
xOdXlIkXZ6ZuXUVcmolOk0W76/j8yzNxZdaH7BnE1ZmQTdsVtpt61WbCu+7t
7H+ob10mjK6c7T2FuEF9/U2i95GcD42ZcBvZUruP86dZPb47+0I151dr5v/5
0/cec/4JFPDu3KvHa85PXQUW5PWNa+L81VdAkZXW/xHnt6ECiTp9Olzg/DdW
wKRDT+zm+2GuQE69+e2wDOqvwLfD8hsT+D5ZK2Dw7/2ZH/j+QYGCXtMm7pRR
fwXKt887O53vq6MCbk1dHtfx/XZVQCXpeNBbQv0VqEycMP451wc/Bca//SXD
LYn6q/OPXlpalUD9FSj2TL4+iOuNWH0/2fNfRMVSfwV8x33pUBFN/dXX8xhm
/x/Xt1wFpFq6J8dEUH/19Rb1WeseTv0VsHrsFRUTSv0VuPJi7mtFCPVXYIz4
4MONa6m/AoLa6ys3BFJ/BWzGBabL/am/GofmBoetof4KvLj81NTJh/qrn8fY
qZVDVlN/BR66tl/+se28gwIr/mrtfJznGVrV9/t+9osgnlcQZOHWnOT2fXg+
QTcLcNgSd47nD/SzoIh/4+vG8waGWbgmtHr0mucJjLNQcFX1LZznCcyzEDY9
+XYLz/tYZiE67rncj+cFrLMg6v9j5O2280NZ6FS06qk1zwfYZ0El7Va2nucB
HLNgmu9W/5znl1yzYHmyxX0Uzzd5ZmHbw4YlwsnUPwvjZbKXBfT7hVmo8dg2
4t446p+F3XqjZ7UbS/2zUGRUMG8g/X15FlqOlq6YSH9flYVv4UHb5vC8V24W
msb3H+REPz8vCx63orsvpp9fkAXtFxEyB54vK8rCyFSPXTb9qX8WeuiUJw9t
8+/V93c4cXYX+vfVWTAKK+/R1JP6Z+Fdzj/ty+nX12WhLOz25HX06xuycL/b
8gdL6dc3ZmHmvavtjXj+rjkL5Si8c5u/J2xV67m6LCKT/rxAidI/O7WfTH9e
VwnPkDt5z9rOAyqhlbU3VM7zgoZKqH6xyjX7xPpfCd0NiRPONbP+VyLa9kSY
01vW/0r4/Wu/toF+vLUSjYNuz/WnHw8lJAZjRr19yvpfCefz/jZBj1n/KyG3
LN324gHrfyWU2hnBHnWs/5Ww1Yuru0r/3U8Jr3PO/03ieU2hEvHn9XT30n+P
VmJu0PleHdv8dyW6Tq5cHHCB9b8SP9xjn1ysZP2vhI5JyouB51j/KzE+OVce
zfOneUoUpm1+e5nnUwuU2HZLNrkvz68WKeHbLTnXn7+nLFXCxP2iRTH99nIl
Zl4+bviDfnu1EtLb5+XT6bfXKiE+L9klpd9ep0Slybb0v3get0GJXKvaNdo8
r9uofr7un7ym53D/p4Rb5odd8dnc/ynx7kjlvBIl93/rYDIkPO0df6+puw6e
Bv3iB6dR/3WoffXS0Z3njw3Xwfi4zggVzycbr4PuzpIJVfTXzddBNndq7hfu
ny3Xoev0lxEW9Net18HRTafVg/461qFkcPOsdUG6+H8nhw0t
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 1.8618160785763838`}, 
       PlotRange -> {{0., 1000.}, {1.9378938925864047`, 3.4594501727868234`}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 1.8618160785763838`}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {1.9378938925864047`, 3.4594501727868234`}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6985508860612507`*^9, 3.698550937005148*^9, 
  3.698551310865361*^9, 3.69855252877886*^9, 3.6985607992224083`*^9, 
  3.7098120102199163`*^9, 3.709812545526105*^9, 3.7098127709698057`*^9, 
  3.7098128899612722`*^9, 3.7098130833818398`*^9, 3.709814637333356*^9, 
  3.709815070848659*^9, 3.709816732377987*^9, 3.709816928592106*^9, 
  3.709868588124206*^9, 3.7098736135156593`*^9, 3.7098748776027718`*^9, 
  3.709876309578061*^9, 3.710161064855397*^9, 3.710416427378765*^9, 
  3.7104175232696533`*^9, 3.7117247814569263`*^9, 3.71173338094178*^9, 
  3.711735783926182*^9, 3.711735989145216*^9, 3.711736038024972*^9, 
  3.71176951312871*^9, 3.711769703660239*^9, 3.711976648920352*^9, 
  3.7119771294106407`*^9, 3.7119903244005747`*^9, 3.711992278987151*^9, 
  3.711998461465029*^9, 3.712029226699256*^9, 3.7149261183739567`*^9, 
  3.7149262068857317`*^9, 3.714929697606163*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures_no_attitude/sim_tensions.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7101607845755167`*^9, 3.711990363325194*^9, 
  3.7149246030980663`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Attitude Control", "Title",
 CellChangeTimes->{3.71490597501705*^9}],

Cell[CellGroupData[{

Cell["Generate a point in augmented state space", "Chapter",
 CellChangeTimes->{{3.714924800679097*^9, 3.714924807567317*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zal", "[", "l_", "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"zl", "[", 
     RowBox[{"l", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "14"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"uv3", "[", 
     RowBox[{"l", "[", 
      RowBox[{"[", 
       RowBox[{"15", ";;", "16"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"uv3", "[", 
     RowBox[{"l", "[", 
      RowBox[{"[", 
       RowBox[{"17", ";;", "18"}], "]"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zalR", "[", "]"}], "=", 
   RowBox[{"zal", "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "22"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Timing", "[", 
    RowBox[{"Zp", "[", 
     RowBox[{"0.1", ",", 
      RowBox[{"zalR", "[", "]"}]}], "]"}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{3.714924809879911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Augmented vector field", "Chapter",
 CellChangeTimes->{{3.7149249184192753`*^9, 3.714924925930287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Za", "[", 
   RowBox[{"za_", ",", 
    RowBox[{"{", 
     RowBox[{"U1_", ",", "U2_", ",", "\[Omega]1_", ",", "\[Omega]2_"}], 
     "}"}]}], "]"}], ":=", 
  RowBox[{"Join", "[", "\n", 
   RowBox[{
    RowBox[{"Z", "[", 
     RowBox[{
      RowBox[{"za", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "18"}], "]"}], "]"}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"U1", " ", 
         RowBox[{"r1", "[", "za", "]"}]}], " ", ",", 
        RowBox[{"U2", " ", 
         RowBox[{"r2", "[", "za", "]"}]}]}], " ", "]"}]}], "]"}], ",", "\n", 
    RowBox[{
     RowBox[{"Skew", "[", "\[Omega]1", "]"}], ".", 
     RowBox[{"r1", "[", "za", "]"}]}], ",", "\n", 
    RowBox[{
     RowBox[{"Skew", "[", "\[Omega]2", "]"}], ".", 
     RowBox[{"r2", "[", "za", "]"}]}]}], "\n", "]"}]}]], "Input",
 CellChangeTimes->{{3.714924920036673*^9, 3.7149249200373363`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["UAVs attitude ", "Chapter",
 CellChangeTimes->{{3.714924712380805*^9, 3.7149247172767963`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", "[", "za_", "]"}], ":=", 
  RowBox[{"za", "[", 
   RowBox[{"[", 
    RowBox[{"19", ";;", "21"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "[", "za_", "]"}], ":=", 
  RowBox[{"za", "[", 
   RowBox[{"[", 
    RowBox[{"22", ";;", "24"}], "]"}], "]"}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chosen throttle control laws", "Chapter",
 CellChangeTimes->{{3.714924712380805*^9, 3.7149247172767963`*^9}, {
  3.714924773686322*^9, 3.7149247791269608`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"U1cl", "[", 
   RowBox[{"za_", ",", "ucl_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"n1", "[", 
      RowBox[{"za", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"ucl", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], 
    RowBox[{
     RowBox[{"n1", "[", 
      RowBox[{"za", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"r1", "[", "za", "]"}]}]], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U2cl", "[", 
   RowBox[{"za_", ",", "ucl_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"n2", "[", 
      RowBox[{"za", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"ucl", "[", 
      RowBox[{"[", 
       RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], 
    RowBox[{
     RowBox[{"n2", "[", 
      RowBox[{"za", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
     RowBox[{"r2", "[", "za", "]"}]}]], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ucl", "[", 
    RowBox[{"za_", ",", "ucl_"}], "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"U1cl", "[", 
       RowBox[{"za", ",", "ucl"}], "]"}], 
      RowBox[{"r1", "[", "za", "]"}]}], " ", ",", 
     RowBox[{
      RowBox[{"U2cl", "[", 
       RowBox[{"za", ",", "ucl"}], "]"}], 
      RowBox[{"r2", "[", "za", "]"}]}]}], " ", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uclaux", "[", 
   RowBox[{"t_", ",", "za_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"U1cl", "[", 
        RowBox[{"za", ",", "#"}], "]"}], 
       RowBox[{"r1", "[", "za", "]"}]}], " ", ",", 
      RowBox[{
       RowBox[{"U2cl", "[", 
        RowBox[{"za", ",", "#"}], "]"}], 
       RowBox[{"r2", "[", "za", "]"}]}]}], " ", "]"}], "&"}], "[", 
   RowBox[{"ucl", "[", 
    RowBox[{"t", ",", 
     RowBox[{"za", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.711737029919223*^9, 3.711737042314995*^9}, {
   3.711737081466873*^9, 3.7117371578304443`*^9}, {3.7117386495579653`*^9, 
   3.71173868915406*^9}, {3.711776149266609*^9, 3.711776258608714*^9}, {
   3.71177658164739*^9, 3.7117766288411617`*^9}, {3.7119778285127068`*^9, 
   3.7119779447231417`*^9}, {3.711978379988017*^9, 3.71197840949708*^9}, 
   3.711989216236335*^9, {3.7149247671838217`*^9, 3.714924820560401*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vector field Z with chosen throttle control laws", "Chapter",
 CellChangeTimes->{{3.7149248228798733`*^9, 3.714924836840557*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zp", "[", 
   RowBox[{"t_", ",", "za_"}], "]"}], ":=", 
  RowBox[{"Z", "[", 
   RowBox[{
    RowBox[{"za", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "18"}], "]"}], "]"}], ",", 
    RowBox[{"Ucl", "[", 
     RowBox[{"za", ",", 
      RowBox[{"ucl", "[", 
       RowBox[{"t", ",", 
        RowBox[{"za", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error in dynamics for chosen throttle control laws", "Chapter",
 CellChangeTimes->{{3.711988571875931*^9, 3.7119885752710876`*^9}, {
   3.7149247422216988`*^9, 3.714924755109568*^9}, 3.714924842024022*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClosedLoopIdealDynamics", "[", 
    RowBox[{"t_", ",", "zz_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zz", "[", 
       RowBox[{"[", 
        RowBox[{"10", ";;", "12"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"v1cl", "[", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"g", "[", 
             RowBox[{"zz", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "18"}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", 
        RowBox[{"nT", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], " ", "-", " ", 
       RowBox[{"gravity", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"\[Omega]T", "[", 
         RowBox[{
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], "]"}], ".", 
       RowBox[{"nT", "[", 
        RowBox[{"zz", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"nT", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
       RowBox[{
        RowBox[{"v1cl", "[", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"zz", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "18"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "12"}], "]"}], "]"}]}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Omega]\[Theta]", "[", 
         RowBox[{
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"u\[Theta]cl", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "18"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Omega]\[Psi]", "[", 
         RowBox[{
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"u\[Psi]cl", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "18"}], "]"}], "]"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "/.", "PhysicalConstants"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"error", " ", "is", " ", "proportional", " ", "to", " ", 
    RowBox[{"Skew", "[", "ri", "]"}], " ", "uicl"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ErrorDynamicsDueToUAVsAttitude", "[", 
   RowBox[{"t_", ",", "zz_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", "#"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"B\[Theta]", "[", 
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", "#"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"B\[Psi]", "[", 
           RowBox[{"zz", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", "#"}]}], 
        "}"}]}], "\[IndentingNewLine]", "]"}], "&"}], "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"n1", "[", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"Skew", "[", 
         RowBox[{"r1", "[", "zz", "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ucl", "[", 
           RowBox[{"t", ",", 
            RowBox[{"zz", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "3"}], "]"}], "]"}], ")"}]}], 
       RowBox[{
        RowBox[{"n1", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"r1", "[", "zz", "]"}]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"n2", "[", 
          RowBox[{"zz", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"Skew", "[", 
         RowBox[{"r2", "[", "zz", "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ucl", "[", 
           RowBox[{"t", ",", 
            RowBox[{"zz", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", "6"}], "]"}], "]"}], ")"}]}], 
       RowBox[{
        RowBox[{"n2", "[", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
        RowBox[{"r2", "[", "zz", "]"}]}]]}], "]"}], "\[IndentingNewLine]", 
    "]"}], "/.", "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DynamicsEquality", "[", 
   RowBox[{"t_", ",", "zz_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"g", "[", "z", "]"}], ",", 
         RowBox[{"{", "z", "}"}]}], "]"}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"z", "\[Rule]", " ", 
         RowBox[{"zz", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}]}], ")"}], ".", 
     RowBox[{"Zp", "[", 
      RowBox[{"t", ",", "zz"}], "]"}]}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ClosedLoopIdealDynamics", "[", 
       RowBox[{"t", ",", "zz"}], "]"}], "+", 
      RowBox[{"ErrorDynamicsDueToUAVsAttitude", "[", 
       RowBox[{"t", ",", "zz"}], "]"}]}], ")"}]}], "/.", 
   "PhysicalConstants"}]}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"DynamicsEquality", "[", 
   RowBox[{"0.1", ",", 
    RowBox[{"zalR", "[", "]"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711988580255814*^9, 3.711988798552527*^9}, {
  3.711988843172764*^9, 3.71198892557724*^9}, {3.7119889776009483`*^9, 
  3.711989152207108*^9}, {3.711989428444458*^9, 3.711989429211735*^9}, {
  3.7119894758864737`*^9, 3.711989479547316*^9}, {3.7119895306287947`*^9, 
  3.711989558914631*^9}, {3.711989624929249*^9, 3.7119896358686113`*^9}, {
  3.711989674837825*^9, 3.71198994245354*^9}, {3.711990029103986*^9, 
  3.711990039229166*^9}, {3.711990073819121*^9, 3.7119900907420263`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.711989943553462*^9, 3.7119899964074583`*^9}, {
   3.7119900302320213`*^9, 3.71199004034783*^9}, 3.711990325283989*^9, 
   3.711998463709635*^9, 3.71202922892564*^9, 3.714929699546809*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time derivative of desired input", "Chapter",
 CellChangeTimes->{{3.711772383637796*^9, 3.711772385131974*^9}, {
  3.714924876136795*^9, 3.714924881729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"slow", " ", "option"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"d1ucl", "[", 
     RowBox[{"t_", ",", "za_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"ucl", "[", 
          RowBox[{"\[Tau]", ",", "z"}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "\[Tau]", "}"}], ",", "z"}], "]"}]}], "]"}], ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"Zp", "[", 
          RowBox[{"t", ",", "za"}], "]"}]}], " ", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", "\[Rule]", " ", "t"}], "}"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"z", "\[Rule]", " ", 
       RowBox[{"za", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d1ucl", "[", 
     RowBox[{"t_", ",", "za_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"ucl", "[", 
         RowBox[{
          RowBox[{"t", "+", "#dt"}], ",", 
          RowBox[{
           RowBox[{"za", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "18"}], "]"}], "]"}], "+", 
           RowBox[{"#dt", " ", 
            RowBox[{"Zp", "[", 
             RowBox[{"t", ",", "za"}], "]"}]}]}]}], "]"}], "-", 
        RowBox[{"ucl", "[", 
         RowBox[{"t", ",", 
          RowBox[{"za", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}]}], "#dt"], "&"}],
      "[", 
     RowBox[{"<|", 
      RowBox[{"\"\<dt\>\"", "\[Rule]", "  ", "0.001"}], "|>"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"d1ucl", "[", 
     RowBox[{"0.1", ",", 
      RowBox[{"zalR", "[", "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.711736373712511*^9, 3.711736388697962*^9}, {
  3.711736426304922*^9, 3.711736445320668*^9}, {3.711736496813868*^9, 
  3.711736600299403*^9}, {3.711736643208214*^9, 3.7117370272329607`*^9}, {
  3.711737160417882*^9, 3.711737263989277*^9}, {3.711737309112638*^9, 
  3.711737406162859*^9}, {3.711737441718347*^9, 3.711737468985025*^9}, {
  3.7117756221692753`*^9, 3.711775630925233*^9}, {3.71197798960365*^9, 
  3.711977997363833*^9}, {3.711978031974667*^9, 3.711978098049843*^9}, {
  3.714924857457172*^9, 3.714924873129513*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.64`", ",", 
   RowBox[{"{", 
    RowBox[{"230.67417425674154`", ",", "18.160538307620655`", ",", 
     RowBox[{"-", "669.3424768016794`"}], ",", "255.4250229460203`", ",", 
     RowBox[{"-", "164.60142781242615`"}], ",", 
     RowBox[{"-", "204.79030827651457`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.711776286545608*^9, {3.7119779843326197`*^9, 3.711978038030685*^9}, 
   3.711978100068458*^9, 3.7119784318625603`*^9, 3.711990325717523*^9, 
   3.71199846448184*^9, 3.712029229775552*^9, 3.7149297002215147`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Control laws for UAVs angular velocities", "Chapter",
 CellChangeTimes->{{3.7149248873853683`*^9, 3.7149248956815166`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]r", "[", 
   RowBox[{"r_", ",", "u_", ",", "du_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Skew", "[", 
      FractionBox["u", 
       SqrtBox[
        RowBox[{"u", ".", "u"}]]], "]"}], ".", 
     FractionBox["du", 
      SqrtBox[
       RowBox[{"u", ".", "u"}]]]}], "+", 
    RowBox[{"k\[Theta]Attitude", " ", 
     RowBox[{
      RowBox[{"Skew", "[", "r", "]"}], ".", 
      FractionBox["u", 
       SqrtBox[
        RowBox[{"u", ".", "u"}]]]}]}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"k\[Theta]Attitude", "\[Rule]", " ", "2.5"}], "}"}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete control law", "Chapter",
 CellChangeTimes->{{3.7149248873853683`*^9, 3.7149248956815166`*^9}, {
  3.714924952491293*^9, 3.7149249579472637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"uacl", "[", 
   RowBox[{"t_", ",", "za_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"U1cl", "[", 
        RowBox[{"za", ",", "#"}], "]"}], "/.", "PhysicalConstants"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U2cl", "[", 
        RowBox[{"za", ",", "#"}], "]"}], "/.", "PhysicalConstants"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]r", "[", 
       RowBox[{
        RowBox[{"r1", "[", "za", "]"}], ",", 
        RowBox[{"#1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
        RowBox[{"#2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Omega]r", "[", 
       RowBox[{
        RowBox[{"r2", "[", "za", "]"}], ",", 
        RowBox[{"#1", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "6"}], "]"}], "]"}], ",", 
        RowBox[{"#2", "[", 
         RowBox[{"[", 
          RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "&"}], "[", 
   RowBox[{
    RowBox[{"ucl", "[", 
     RowBox[{"t", ",", 
      RowBox[{"za", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"d1ucl", "[", 
     RowBox[{"t", ",", "za"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zarandom", "=", 
   RowBox[{"zalR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"uacl", "[", 
   RowBox[{"0.1", ",", "zarandom"}], "]"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.71173767525668*^9, 3.7117376851115417`*^9}, {
   3.711737735963459*^9, 3.7117380843330708`*^9}, {3.711738132647863*^9, 
   3.7117381617403793`*^9}, {3.711738211581072*^9, 3.711738322606598*^9}, {
   3.711738352646832*^9, 3.7117383733782587`*^9}, 3.7117384228313313`*^9, 
   3.711738457869507*^9, {3.711772930527638*^9, 3.711773010648875*^9}, {
   3.711773253628406*^9, 3.711773314653648*^9}, {3.711773395065905*^9, 
   3.711773428137615*^9}, {3.71177384297946*^9, 3.711773844078217*^9}, {
   3.711775847935454*^9, 3.711775848078649*^9}, {3.711775939148888*^9, 
   3.711775952004566*^9}, {3.711776798102644*^9, 3.71177679827913*^9}, {
   3.711978217023978*^9, 3.711978267881263*^9}, {3.711978300522554*^9, 
   3.711978305850749*^9}, {3.71197844615298*^9, 3.711978453200099*^9}, {
   3.711978505743137*^9, 3.711978575468018*^9}, {3.7119985956316566`*^9, 
   3.711998595933509*^9}, 3.7119987070985203`*^9, 3.711998916603387*^9, {
   3.711999075519343*^9, 3.7119991011042624`*^9}, {3.7149249049471273`*^9, 
   3.7149249712360353`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.864`", ",", 
   RowBox[{"{", 
    RowBox[{"187.7846354101544`", ",", "163.72336951455856`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.83719144343119`"}], ",", "27.168525907817152`", ",", 
       RowBox[{"-", "2.4810067259291304`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "9.560971909691753`", ",", "11.190006039914527`", ",", 
       "0.6630945108710641`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.711737688088388*^9, {3.711737994417563*^9, 3.7117380045009193`*^9}, 
   3.7117380872874317`*^9, {3.71173814715904*^9, 3.711738164718306*^9}, 
   3.7117382297443542`*^9, {3.711738462371413*^9, 3.711738481323084*^9}, {
   3.711773234018097*^9, 3.711773256394537*^9}, 3.711773360942409*^9, 
   3.7117734196771927`*^9, 3.7117738475132837`*^9, 3.711774167771901*^9, 
   3.711774245286817*^9, 3.711775175844432*^9, {3.711775839521597*^9, 
   3.711775850613765*^9}, 3.71177595412714*^9, 3.711776310031836*^9, {
   3.711776397759091*^9, 3.7117764156635723`*^9}, 3.7117768029895077`*^9, 
   3.711978283415881*^9, 3.711978318212743*^9, {3.711978436203964*^9, 
   3.711978456517446*^9}, {3.7119785101693993`*^9, 3.711978552379157*^9}, 
   3.7119903261376343`*^9, 3.711998465405675*^9, 3.7119987144929333`*^9, 
   3.7119989255169888`*^9, 3.7119991081306753`*^9, 3.712029230705825*^9, 
   3.714929701114376*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Closed loop vector field", "Chapter",
 CellChangeTimes->{{3.714924980795752*^9, 3.714924985044417*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Zacl", "[", 
   RowBox[{"t_", ",", "za_"}], "]"}], ":=", 
  RowBox[{"Za", "[", 
   RowBox[{"za", ",", 
    RowBox[{"uacl", "[", 
     RowBox[{"t", ",", "za"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zarandom", "=", 
   RowBox[{"zalR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"Zacl", "[", 
   RowBox[{"0.1", ",", "zarandom"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7149249724520597`*^9, 3.714924978556566*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.832`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2502248064015675`"}], ",", 
     RowBox[{"-", "0.4975969490915255`"}], ",", "0.8455171605076743`", ",", 
     RowBox[{"-", "0.46994230100634404`"}], ",", 
     RowBox[{"-", "0.5171139122139531`"}], ",", "1.056765651189425`", ",", 
     RowBox[{"-", "0.3855707432562364`"}], ",", 
     RowBox[{"-", "0.476292898303231`"}], ",", "0.8815958683266295`", ",", 
     "3.143478986427896`", ",", 
     RowBox[{"-", "0.4530463794345967`"}], ",", 
     RowBox[{"-", "0.9970459320768223`"}], ",", 
     RowBox[{"-", "35.60874534491249`"}], ",", 
     RowBox[{"-", "53.1579693593334`"}], ",", "107.98271056317517`", ",", 
     RowBox[{"-", "6.253201335111578`"}], ",", "61.987508994384115`", ",", 
     "42.97568941936126`", ",", "23.087913446397817`", ",", 
     "10.236153751555944`", ",", "11.24264197112129`", ",", 
     "6.9347257393714425`", ",", 
     RowBox[{"-", "6.395494314008499`"}], ",", "7.936880671103515`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.714929701965465*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initial condition", "Chapter",
 CellChangeTimes->{{3.714924992700221*^9, 3.7149249957400227`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"use", " ", "previous", " ", "initial", " ", "condition"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"z0", "=", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"L1", " ", 
         RowBox[{"uv3", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", 
            RowBox[{"-", "0.2"}]}], "}"}], "]"}]}], ",", 
        RowBox[{"L2", " ", 
         RowBox[{"uv3", "[", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.4"}], "}"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z0", "=", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"z0", ",", 
        RowBox[{"uv3", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"uv3", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.711978133535119*^9, 3.7119781671655407`*^9}, {
   3.711978582220042*^9, 3.7119786007031717`*^9}, 3.711979117426663*^9, {
   3.711998758055026*^9, 3.711998758576467*^9}, {3.7149249909727077`*^9, 
   3.714924991128483*^9}, 3.71492508750315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Project any point in R24 to augmented state space", "Chapter",
 CellChangeTimes->{{3.7149250003807592`*^9, 3.714925019052676*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Proja", "[", "za_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Proj", "[", 
       RowBox[{"za", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "18"}], "]"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox["#", 
         SqrtBox[
          RowBox[{"#", ".", "#"}]]], "&"}], "[", 
       RowBox[{"r1", "[", "za", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox["#", 
         SqrtBox[
          RowBox[{"#", ".", "#"}]]], "&"}], "[", 
       RowBox[{"r2", "[", "za", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "/.", "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "-", 
     RowBox[{"Proja", "[", "#", "]"}]}], "&"}], "[", 
   RowBox[{"zalR", "[", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.711978601746978*^9, 3.7119786359043627`*^9}, 
   3.714924998653399*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.711978633414424*^9, 3.711990326701283*^9, 
  3.711998466460512*^9, 3.711998715471683*^9, 3.711998765811989*^9, 
  3.711998926620681*^9, 3.711999109186367*^9, 3.712029231783903*^9, 
  3.7149297019908323`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Chapter",
 CellChangeTimes->{{3.7149250914549437`*^9, 3.714925093287827*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stepsize", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NN", "=", "1000"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rstarList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputList", " ", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tensionsList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kk", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "NN"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"time", "=", 
     RowBox[{"stepsize", 
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"input", " ", "=", 
     RowBox[{"uacl", "[", 
      RowBox[{"time", ",", "z0"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensions", "=", " ", 
     RowBox[{
      RowBox[{"Tensions", "[", 
       RowBox[{
        RowBox[{"z0", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "18"}], "]"}], "]"}], ",", 
        RowBox[{"Uclaux", "[", 
         RowBox[{"time", ",", "z0"}], "]"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"stateList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"stateList", ",", 
       RowBox[{"{", "z0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"rstarList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"rstarList", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ".", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}]}]]], ",", 
            FractionBox[
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"4", ";;", "6"}], "]"}], "]"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"4", ";;", "6"}], "]"}], "]"}], ".", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"4", ";;", "6"}], "]"}], "]"}]}]]]}], "]"}], "&"}], 
         "[", 
         RowBox[{"ucl", "[", 
          RowBox[{"time", ",", 
           RowBox[{"z0", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], "]"}], "]"}], "}"}]}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"inputList", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"inputList", ",", 
       RowBox[{"{", "input", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensionsList", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"tensionsList", ",", 
       RowBox[{"{", "tensions", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"zdot", "=", "  ", 
     RowBox[{
      RowBox[{"Za", "[", 
       RowBox[{"z0", ",", "input"}], "]"}], "/.", "PhysicalConstants"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"z0", "=", 
     RowBox[{
      RowBox[{"Proja", "[", 
       RowBox[{"z0", "+", 
        RowBox[{"stepsize", " ", "zdot"}]}], "]"}], "/.", 
      "PhysicalConstants"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[GreaterEqual]", 
       RowBox[{"100", " ", "kk"}]}], ",", 
      RowBox[{
       RowBox[{"Beep", "[", "]"}], ";", 
       RowBox[{"Print", "[", "i", "]"}], ";", 
       RowBox[{"kk", "=", 
        RowBox[{"kk", "+", "1"}]}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]",
   "]"}]}], "Input",
 CellChangeTimes->{{3.711978644342827*^9, 3.711978687620389*^9}, {
   3.7119789558350067`*^9, 3.711978987288021*^9}, {3.7119790366747837`*^9, 
   3.7119792074683523`*^9}, {3.711979296713131*^9, 3.7119792974743443`*^9}, 
   3.711990117084175*^9, {3.711990841293456*^9, 3.711990843394446*^9}, {
   3.714925096800412*^9, 3.714925097488185*^9}}],

Cell[CellGroupData[{

Cell[BoxData["100"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.71492982657353*^9}],

Cell[BoxData["200"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.7149299529129257`*^9}],

Cell[BoxData["300"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.71493007789956*^9}],

Cell[BoxData["400"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.714930203406638*^9}],

Cell[BoxData["500"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.714930328821973*^9}],

Cell[BoxData["600"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.7149304547611303`*^9}],

Cell[BoxData["700"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.714930580612009*^9}],

Cell[BoxData["800"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.71493070706563*^9}],

Cell[BoxData["900"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.714930833427217*^9}],

Cell[BoxData["1000"], "Print",
 CellChangeTimes->{3.7120293591692467`*^9, 3.714930959431547*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"NN", "=", 
   RowBox[{"Length", "[", "stateList", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.711990620069028*^9, 3.711990631538419*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["export", "Chapter",
 CellChangeTimes->{{3.6986842721543627`*^9, 3.698684273291647*^9}, {
  3.711979309217812*^9, 3.711979310869019*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/matlab/data_state.mat\>\""}], ",", "stateList"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<data_state.mx\>\""}],
     ",", "stateList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<data_input.mx\>\""}],
     ",", "inputList"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<data_tensions.mx\>\""}], ",", "tensionsList"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"stateList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data_state.mx\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"input3dList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data_input.mx\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"tensionsList", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\<data_tensions.mx\>\""}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6985036578259974`*^9, 3.698503658498044*^9}, {
   3.6985513603944273`*^9, 3.69855137572093*^9}, {3.698560606380211*^9, 
   3.698560634232679*^9}, {3.711979313310882*^9, 3.711979335566371*^9}, {
   3.711980293744038*^9, 3.711980300908019*^9}, {3.711980334145215*^9, 
   3.711980361512087*^9}, {3.711990635023378*^9, 3.711990665202327*^9}, 
   3.714927004718945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error position", "Chapter",
 CellChangeTimes->{{3.698506618023499*^9, 3.698506619623864*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"errorp", "=", 
   RowBox[{
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "NN"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], "-", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pd", "[", 
       RowBox[{"stepsize", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"errorp", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"errorp", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"errorp", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
         ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorv", "=", 
   RowBox[{
    RowBox[{"stateList", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "NN"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "]"}], "]"}], "-", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"pd", "'"}], "[", 
       RowBox[{"stepsize", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"errorv", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"errorv", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"errorv", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "3"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(m)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.698550255215838*^9, 3.69855026401581*^9}, {3.698745561186461*^9, 
   3.698745577829392*^9}, {3.698745668643263*^9, 3.698745710637939*^9}, {
   3.711724385452343*^9, 3.711724392971949*^9}, {3.711724441810029*^9, 
   3.711724467387265*^9}, {3.711724546412539*^9, 3.711724603728877*^9}, {
   3.711775754673036*^9, 3.711775767459071*^9}, {3.711976273950782*^9, 
   3.71197633529193*^9}, {3.711976459925086*^9, 3.711976489937935*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
qehAodkl5B9MSSpTo+Leucg/mJY8bjAtuu9F5M9u8frKUdEF5B9MLoWXjvlZ
5yD/YKqjsS3OTTqP/IMpwOLdoXVO2cg/mDTh443fBWQh/2CK8R9z8taq/5B/
MAmM1uwUyc8h/2BS1lbcaHPpLPLn9Xb+UrXk5RnkH0yGU233TWsKC0JoWEVi
952iTOQfQll7Hmydt+A08g+hHrO3vF21/hTyDyHx2jl3TS4rkH8IyToNOW5a
eRL5h5B0bcJRlecJ5M/tn1l8HKY5hvw5nrDVa7z7UeQfQpLUN5lV7w8j/xBS
JiZ1HBGVgfxDSJQVuk7f8BDyDyH5CPGeBccOIP8QMlwSvK/b9HTkH0KqqsMb
p1fvQ/48ft81XdSH9iJ/nt8889TJBXLkH0oC5eTilKFpyD+UaPwHd1HWTuQf
SmIzC4vOdtuRP8fXxrUfVbYV+YeS/NQwx6XJm5E/x58uzzs2PgX5h5LGu2vx
5cYy5B9KyvZDxw89sA75c/v2DZMHzElA/qEkFQaNsuiyEvmzm2w4aPZrGfLn
9YbLvQxLw5A/2961YE6NP/JnB0xuVvPPPORfn982a/O/w0Zr82eLTnSZ5uem
tWAJCXY2LRryIkhrwyUk/fBh482/4VoLOZ5j52BVtkxr0RKi568vnJ4RpzWx
qz8dfbtztdYO7I8FN2vvJWot5v4te2wdVLVOawl7RmjG1QbJWkvZ/Tyd6v7I
tJYtIWX29zNNQ1O0li8hcaNi2/Rnm7RWcPvsuZKvo7ZorVxCmps/pP9u26q1
iuOfduX1KNumtYbXs/xilF3/7cifxxOdvilftAP5h5F8svnNyWk7kX8YCXL/
LPG5uQv5h5FUtfJI24rdyJ/jZk/6RjTbg/zDSJNYfMPRQI78w0h88+7A8k2w
mNvXpXyMM96L/Nl7+2013wRLw0i5wzSjVct9yD+MhNtmJghXwnIeb9Cj5Uu/
wwruP+PL1e6e+5E/W2HiP+wurOJ81P8EZw1PR/4cX3vlTO4OuJLj1b9/OtbC
gnCSb+n6PMnpAPIP5/fLvg/Bp2FhOAlX+a42anYQ+YeTRty2crkLTNw+YPX0
vGOwQzjRYauDX2pgcTiJn5Q+/Hf8IeQfTsr7NduHr4OlHO83YqPfXVjG63nq
M/SCYQbyZ/u9KrKcDit4/vk+Rz6thZU83oxbuW+vwiqOX75cN/QXrOHx9x3t
82LAYeTP+bxfXPbdFRYsJYH39JOr1sOGS0l58FnxtmxYuJSE6eq0Ea9h0VIS
3+7RJKb5EeS/lGjo1V+eg2AHjsfdpQYzYTGPH7dy6cIQWMJx1ej2iTJYyvFt
26MTjsEyjn8PuOubD8t5fs03ocVzWMHrG/5y7u9vsJL7Fy23yG96FPlze+8i
113tYQ3HrxTYru0DV/J65VOm7rCABRFE/gm7Ho2DDSNI2LylnZ09LIwgpXfT
UXVzYFEECdZLxtcsgCmCpBZ2DSZ7wA4c33b/109vWMy2ublBfxEs4fm+HKqT
6Szl8X2fiTf4wrIIkqe2O9dS11/O6zm4oqidO6xgj2629KwLrGRPSR/82VGX
P49/c1v07Wm6/NmPLx1xGq/Ln9sfUlelWunyjyRNaEHQ1gG6/CNJafW+9Tyh
Lv9Ikg+ed7q8tS7/SBJW2TSb1kCXP7cf1Fax/ouu/pEkeN2i2+kXuvpHkriJ
1YXLhbr6c3zzr4tXs3T1jyTSjLS7tF9Xfx5v2F33nPW6+keSdEfG19xwXf3Z
t+iaylVXfx5v5NP4nxNgFecjun/bqj+s4fXf+2yY1hqu5PGtM4/1/aH7+48i
ZWj6q9Inur//KBJO3vek6ILu7z+KBHqD0wR7dH//HK8p6BYghSmKNDk9qIsb
7MDtHZLPdhoDi9mlg/ssFsKSKKJ5bmbGf/H9lEaR2OdD7w7PYFkUyaM9Vq04
r/v+c3xAUJzDNt33n+ef/e/0pFDd95999tdfK93zQcXtJ9za5NpX9/3n/Oq8
v/5pBFeyh4z41PUFnjeCaBKuXjM6Pws2jCbx2FMbfmyEhew5EX5n/WAR+9ys
aU3HwRRNmoknd1V2gB2iSW5jfjjsq+75F03KqjYnd9yAJWyye+Qhh6Xsns+H
FIXDMh6v5fC8r1NheTSRt32UshusiCbByYb9x1bj+axkV83eG30bVkWT9PTB
DZJ9sIZt1nhrj6VwJbc38J60cwosiCH5mXdCdVfd8z+GxBs7Jj//hveDMIaE
fYZ8OnUdFsUQ+divdtwJE/efe15WGAg7xJB0Qm/LDmNhMbenD5vGGMMSHq/R
qGMTyvG+ksaQwDYssk8OLOP2gfTm83pYzuNvf523UwwrOG4WUj5oqO79x/03
6jU92Vj3/uP4wcZ3OqrxvtRw/xHjiiOOwJXcfqh9bkEMLFhGyo+7q1tOhw2X
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
2V+yLTo10f37UfamEyaNDeNG/x+QSow5
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
u+5H5qHbFw7awGz953wif0cx89H9Z5kvZePd0Y39taIDyAJ0ulatSRBZiHZ6
d/iQkCxCB6XJHcPI8ehv/tpZ7HrEf44v7LJm15uO/jHnaXgcWYI+cNB/cCI5
Bx3esZMjJueiz52qtTpALvzz+anrqLDPX4o+4yEel8nyR5/e1xB9muX/5/Pp
mrL4Issfvc4jRI/l3YiWt3OSr7P80ReufJ5cwfJHW9TE99xh+aPdho4f/ojl
Hw8cXQ01t5csf/Rt+b32Nyx/9M+2R7mfWP7ozvu5kk6WPzp1ZXfJb5Y/erBi
S7+B9PeujZaax/sPJeuil0au6jeODGjeX1uvsvvHCO03pyBuDpmH1v66ULCY
bI1+WVEnWMXuf7RruyTWlN3/aP6xzHNW7P5Hzz/245UDu//RsZaPJniz+x9d
nezh/n/3P7qv238FInb/o2+ObVRKZPc/WqfDZ8sBdv+jxcOGnM9g9z/6sNei
rjPs/kdv3OW6PJ/d/38+P//pIaVkKXrgcbUzVeQqdFlueU0tWYbeFfjpxUty
HTr3nzXPW8iNaH+1lHIFWY4e8TntwE+yAr1i/QKzvjR/dqHTr5p8VCFzdgMn
oXeN5yiyEtrQMquGS1ZD97S+VNIia6BXjoyaPJ/MRd/8maGxjM3/aI2krS2r
2fyPbnBvTjBl8z968BV+301s/kd79R+6fiub/9HO+su2u7L5H/09epbdNjb/
o19/XTY6iMxHD79VkxlBdkdv/rni206yAD1tq+rQPWQhuso+t3MfWYTO6crJ
PESOR78S71CXkMV/rr/54epscjq6b8uCJefJEvSVHFPFZXIOugMqXa6Sc9Gp
5zcduk4uRHMLr+6+SZaiZ7y9sOA2uQp9lNf3aA1Z9ud6DiVdu0+uQ4+onLy/
ltyI3j43Z+ITshyt79bH9RlZgZ47cqr9S5Y/2qmjj/Irln8C1jt+zIut30po
j9TO8GaWPzpTecyKtyx/9Gj56MstLH90Yrpq7TuWP/r5wFGZcpY/2j7R+q/3
LH90eNGvNcyAznNbOobZCB2dYHCIjeeh/524tYwd3xodNPl2KqvPR/dxrRrC
zs8dXZaYP4+dvwD9+dOrnkaWP3ph/CmfBpY/esMbl50vWP7oEf13QR3LH+1l
FZD5iOWPrkk9ni1j+aPvFYWZ32X5ozs+xR2pZPmjL/pCQhnLH/1P4qyxJSx/
tFVQnSn7e6lCO5jKJrK/Jxm6qTsn7SzL/8/nqdV97iTLHz19lrPDUZY/Wt4R
W5DK8keHfel/jv39d6Ffj9+nx+4PTiL+/dx9Ighj+aMtzsav9GP5o6dfsM91
Z/mjq3+PKmH3Kxcd9cXXbQPLH/2XYu6ltSx/9D5nbqoeyx998OrAkWz+AHSE
bqnOdJY/2kFtqGIMyx/tOL/eUJXlj9a06F7ai+WPFt9Zd/cLm//Re49f7nrL
5n+0pe2wm0/Z/I/2G7NlajWb/9GHXIKmFrP5H/1q/qabZ9n8j/72tK3rMJv/
0RO+LrqbwOZ/tLnPzKWhbP5HX9las8aDzf9oU5VhrWw9KkRffDFotgGb/9Gq
ekWDddj8j+Zd1IydyOZ/dKTE9bAqm//RS4J3rOtm6/+f6xHuS3/H1n/06rIz
0Q/Z+o/uWdHU/wZb/9GeGVaaZ9n6vwefTw00W1LZ+o8eaRgIUWz9R2+0dlzk
wdZ/dFvViDsWbP1H/wgq7F7K1n/0vVuB1VPY8x/aKTVMR4U9/6Eb5v9c9i2Y
8kcv3jql+SXZCD1j1pzpFWQeuo+6xcBzZGt0/6rbu/eS+ejUjdU5wWR39Ikf
B13tyAK0l6Z/uT5ZiB4Yc+zGdLIILajZskWZHI8Ofv01TRFE+aM/FF/2e0RO
R3dvqm+7SpagJcUVg4+Qc/6cv7ygOoKci+562ncGn1yItvLtpaVPlqIDdvS6
N5lctQdEotItQ/uRZeh7591/vg2k/LG/xfmY2NvkRnQveb/8bLIcHbOeFxdH
VqDLDt/scSF34fFezbk2ag2Zk4Tz+VzJ08lkJfRL78fLepPVkkDUufmmYWMA
5Y/tt9TvdpWQudheamzPO0LWRL+waDETkrXR8wfd/7qBrIvj/6nfqT+XDOi3
N0N1VchG6G+zJj6V+1P+6LSRH8dXkK3RnXITtQwyH82Pu34uhOyO9cauuNxu
SRZgO+f+yaZZZCH6laVq1ACyCK1h6V3Z6Ef54/jF55ZcLyKL0bdSv9vtI6f/
GX900gVPsgRtn7nsrD45B/ufu1u5cQw5F31vr2Fuuy/lj/2TcqC4iixFSwYu
DsggV2H/gR+vNgSSZdi+5vqan+vIdegnk7wrJ5Ibsf/BzisG3wWUPzpE75Lw
LlmB/jHzrV0muQvH141r6Qwkc5JBdD9p5WpjshLafmK8wXiyGpo352BP83bK
Pxmfl9KX1yWQudj+0vXviXPJmtiudSGh7sk2yh/bZSd3/Q4j62K78QneQS4Z
sP3F6JGZFT6UP7YfTRk03p3Mw/b5Bx2HDCZbo7ff2xB0wZvyR5+vHb3BnOyO
47+taT2j8KL80ak3lEL2koXYf+DdC2VzySJs7/tubPwDT8of7RZ0oEZAFmN/
11tbE4eQ09GZv0vuXPCg/LH/1Znde9aRc7A9T4svk7tT/mizs7oHY8mFySDt
p1XbNJEsRa9qD8svcaP88Xh/Ke9S2UyW4fgKA4PPX1wp/2SAsTNUtySTG3H8
pg4dC02yHPs7pQ59ctOF8sf+ny5x5DbkLjy+LMVm9xdnyj8FRPVTIq4lkpVS
gHu0V2XUZLIatn/fmP602Inyx3ajjxYV68ncFNBumGBjKHek/FNAEdU01DGS
rI39tS41jxhO1k0BXp8EHeczDpR/CpiIu7eZ6Tnc+H9m5F4u
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
mD+71qrpWe0czJ89vvv//sbg7zNidm//nsd7zMb82cc19TWKLTF/tu3s313n
z8T82UWTL1T+sMD82S+CqqdunY75szN7bJSNmYb5s3ud3ZBca475szWjw72i
pmD+bHFQo243M8yfnT35yaWjhPn/O68+4Phe/H0pmv1595sbT8dh/v/OO7rk
o3gM5s9+Nm3TEFcTzJ9tn3IldZsx5s9uiHw89K4h5s8uM8wYZaCP+bPr90+4
mz8Q82crpRa+en0xf7bidCttq+6Y/7/8kEHuNnXMny0yeKfXsmaiav5syZMw
U3u1s6r5/+vX3k0vp4vKSnb6t6SlG/qoXM92dHN/M3mAyg1six/u/ieGqNzE
Np/+wbKrocqiVXw/XHtv1zUjldXZ6ZHluStGqazBPrDk19SxpiprsT2cNnm9
H6uymO2ou++LfILKeuxn87p80COVDdkpfrJE2WSVTdkDHZYa3zFTmdgdXke9
1zdX2YJ97nnJ/qVTVbZmJ6/LkdRMU9nxXx4gba5nobKEnX0pMClmhso+7I/+
tXVXZqos/Xd901630Z6lcjR7nejuJ6/ZKsvYbvm3N/zPSuVk9q/5mk/+4O+X
6ez8gAU+u61VzmRnbv2Rb2Gjspytdira+C2cy3bY7P9rja3Khew+PXxEI+xU
LmJLN6mNrYYVbGudW7tC7VUuY4ddk5pqOqhc9a/ffqEfC+FadqRlaIXVXMyf
3TWofekbuJ49XO1J+Ur8PbZhFX+e7JPxTNcR82fvv3hG/TQsSiFRfyNNo7lO
mD+7RN9k/ntYI4VkMQ53ExKdMX/2/dCCzT3nY/68funZAHkhrMf5vNFV680X
YP6cy59tCbgDm7KT9dMH+Lpg/ry+Y88lJ7/DFpy3OWTab5Ur5s+eOWCjS3f8
vdmRnTMlzH03LGHvsnnQXUuC+fN+wb9zXV1gKeetj25R2wlHsyct0G/xApal
EE25+8Rl8CLMP4UUmwymdAiA03n9y113NAvgTM7T6g18P8ByPq/a5EEHQzfM
n/d7HxnVTAoXcl6yaPvEQ3AR1+vt+nD+Hazg/R1/dVk71B3z5zzK8+R2H7iK
622Hr3m3G65lr+o/c7ESVvL6pPy86T3x9/l6zrs/CZrtADf8O//yotVr4CZe
n2Nn/fcSLFpNoulbOuz7A6uzy19EykZ5Yv7sp099V/nDWquJVhZePyuHxWx9
tfV9a2C91fx5d9r+A+pemD/X6xRpLhwHm/L6qOVXTQJh4vyP8tGIbNiC8+AR
LlbXYevVpBjawzXlN+zIbpCLng31xvx5vcF0fycn2Ifzb/0r6hNhKXuzmlP6
YTiafSJqjtUDWMbnD/r5WdwK/79DMufGrTa3Gg6n8/779Fb/ngtncj5Hd3iL
BFjO9f1/1mvthnM5/9Vj0NgrcCHXP5VIvN7BRezGMV2yNHwxf15/5UT5XSO4
jPMte7v0toereP+jO1d7h8O1nBcPqz66HlZy7nR+fYsjcD076d0Kh0q4gddL
HN33voGb2Ouef/nSyg/zT+X3g7PtpvSF1VP599tvaepYWIPzLXdNbtjCWmzd
eG0NP1icSrTDoY+FDNbj+tdqFtEbYUPOo+5m7ciDTVNJ1rbe8HQJTGy1Tn2r
rsMWXD+0y4Y7j2FrdrPsU9UfYEc+f6dDpeIPLGH3e90tp50/5s/nxfdRhmrD
Us6b318+agAczZ423LN+OCzj9Tu9G1PGwMlso87yXmZwOtu646esGXAmX29e
RuR/1rCcr08xotTbAc5l/20MO+wEF3L9bIux9QvgInafgeX/LYQVvF830bOe
EriM8941tlqCq9jNRr0VCetref8t09JrhP2UXO93bfAm4bx6drVBgZlwPQ3s
3Eid+3PgJnbQ/GULhX5EaSQTmX2snAyrs89Rmr7w89BI498v3YQI4eelxa7y
/pHfHxbzeu+ZZte0YD3Oz5bIH/wHG7I3+/vf/S3Mn9drnml+4b0wf3ZIzY2s
R8L82V6pVh7XhPlzfXXE9x7FwvzZv+65lO4T5s/OPNnJcT3sw36uOPY4Hpby
ftutvjh6w9FsS/+kC3NgGa8ffGlwv9FwMudJhfkROnA6+7jW45LmcCavD1qx
7/sLvJ7k7BttP+iXw7ns+7P3zzsAF3K9f9iD2DS4iH1ZJ21zoPD65/V57tUF
s4TXP+cvLl8tHSK8/jmPM9x1o7Xw+mdPfZj6+CnuJ0pe39f18tszcD3n55O3
/ciEGzh/GbigbSjcxLmBlbfOTFi0hkTha/qN6gurs0v2N7f7hvujBjvPQBZd
AWutIdmS7L775LCYnR8WqQyD9Xj9pzZaA6fBhmyddXkx3WFTXj9YrfbBS+H+
zx75n7PNCeH+z+vP/P1Qmyjc/9mHrrlH2An3f/aj+mQ9MSzh+h7jxn9+g/cf
H84/anrcOw5LOX/ZqeGBDI7mfFaPu79nwDLOj47vO0kTTua8+Z6bO+/i/TCd
/TepxVA5nMnrt7a9cdcTlrPvjl54eAicy+vVnjz833u8Pxdy/m3diqeH4SLO
z0WsNwuHFexKsrs5Snj/Z9f36Zr5Fc8HVezj243WH4dreb+3qe0vR8BKzrUb
O5qMhOv/Xe+L/U8a8XzSwC5PnV8pPL80sY+8kv/xg0VrSeZS0zJsIKy+lkTv
HvUcXofnIw3Oc4wXj9oGa3FumXg52R4Wcz62Yc/Q9rAe54dK0yan4PnMkJ32
sbSmCc9zpmzPt+7aXjCxLQb97lTtcvb/ACNn1NI=
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-1.4022361044884697`, 
        0.05353978237323753}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-1.4022361044884697`, 
        0.05353978237323753}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.698566978625875*^9, 3.698569164713573*^9, 
   3.698572372333726*^9, 3.698573211656267*^9, 3.698575087901354*^9, {
   3.6985769951525927`*^9, 3.6985769990099382`*^9}, 3.6985820355583477`*^9, 
   3.698596218402944*^9, 3.698596424105398*^9, {3.698636319025185*^9, 
   3.698636326433777*^9}, 3.698643317180711*^9, 3.698651342870118*^9, {
   3.698654145350697*^9, 3.6986541692102823`*^9}, {3.698654975157387*^9, 
   3.6986549781932364`*^9}, 3.698658876040854*^9, 3.698660503413991*^9, {
   3.698661225467407*^9, 3.6986612512035313`*^9}, 3.6986677240339622`*^9, 
   3.6986724792202272`*^9, {3.698676769057242*^9, 3.698676772572802*^9}, 
   3.6986854904274273`*^9, {3.6986855600666*^9, 3.6986855637809153`*^9}, 
   3.698686888580523*^9, {3.698691013930455*^9, 3.698691019641794*^9}, 
   3.69872148592509*^9, {3.698724331755579*^9, 3.6987243411475973`*^9}, 
   3.698724471243079*^9, {3.6987281818980227`*^9, 3.6987281949352303`*^9}, 
   3.698728423162883*^9, 3.6987289946821404`*^9, 3.6987295678281813`*^9, 
   3.698729682665985*^9, 3.6987300402985973`*^9, 3.6987370303202047`*^9, 
   3.6987455191920357`*^9, 3.698745556479059*^9, {3.698745671791685*^9, 
   3.698745720340805*^9}, 3.6987530830482397`*^9, 3.698753125799821*^9, 
   3.698755273431437*^9, 3.698768946011731*^9, {3.698769349822709*^9, 
   3.698769354829199*^9}, 3.6987693870158463`*^9, 3.698939546793846*^9, 
   3.698939614839422*^9, 3.711724352190515*^9, {3.7117244557919703`*^9, 
   3.711724471524047*^9}, {3.711724530006316*^9, 3.7117245507668247`*^9}, 
   3.711724594580964*^9, 3.711733363894684*^9, 3.711735773814241*^9, 
   3.711735970376442*^9, 3.7117360253098917`*^9, 3.7117695018179197`*^9, 
   3.711769694149818*^9, 3.711976490496048*^9, 3.7119765565927057`*^9, 
   3.711976681802099*^9, 3.711977079626976*^9, 3.7119771146602583`*^9, 
   3.711978828577969*^9, 3.711979416553405*^9, 3.711990667853732*^9, {
   3.7119986352780523`*^9, 3.711998654797083*^9}, 3.7119988579886913`*^9, 
   3.711999039667527*^9, 3.711999203831567*^9, 3.712030495103266*^9, 
   3.714930959655221*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/zZ2Dy2g87M6unVUvxapkPJHG/NufTniQfmjd20a45nlTvmjIwcqVxxxo/zR
goEvK3JdKX+0XlDR0RMulD+6ri9HvciZ8kfLDRc+la2l/NE9j/WdWEvnez66
MSHqw3knyr/9eTrM91aspvzR/NeaDV1XUf7o6d+tDMwcKX80R2+mj7cD5Y/e
MmNIetZyyh8tsVceUiyj/NHdg/N36C6l/Nvn54zx8LSh/NGyiwbGXkso//b5
n3CXdVtI+aNTB4wdU2RJ+aPNuD3yveZR/mjeSYfH+nMof7TyS7XzsxmUf/t6
xiWWCaaUP1ps6CCYOonyb39ey5VTu+hR/u3rD1h5I7Yv5d9u0YcGja8zVfmj
4VXvWee0Z6nyb8+HY9PZcKzKnA34vAeC7ygNVVZH83Qe1Z81U1kTLTZ720s4
U2UttHQsp7rjHJW57e2mb2fcNFdZHy0/U+y20UJlHlpYunPBNGuVzdDcKfdb
Xi5UGdBJvL+BG5eobIkWBdU/72WjMh9dnbYoyp7uhxzQrWddkvcuVVmAVnAz
e99fprIQ7XBq14C+y1UWtdeX3HrA0l7lcPSdvNi8CAeVxe3zHW6dn7NC5aT2
9uEQWOuocmp7e/4coy8rVc5o9/y2lN6rVZagCzuFJxusUVnaXu+NurFznVQu
RLd92Vk6VqByCdrYeW3xSbIMHWrlkzJ5rcqV6PgwpznnyHL0e8u3d6fQfVkj
OiPm8oISsgKd3O9IjrGLys1ovUE2b/LJSnRZQtqA0a6UP9qnt9GkA2ROIj5v
367Te7tR/uhEm/dT1pM10XpPSsd/JWuh3ZX2g9e6U/7oUxeOd6gh66PTl2a9
mexB+aOrA3i3M8lm7Xa1utRJSPmjYxTNp4VkS7T+wx6nb5L56NvC85fGelL+
6Du7Wh8lkQXoYxbyHi/JQrRuLxu7WV6UP7qk59ai3eRwtPXtPcYfyWI0Z3zq
7TnelH9i++93y46d5FT04aS8yFfkjPb6VvXdbEL3mRJ05JiX1+PJUrStrpVx
LbkQvf2bsH6gL+WPfpAjkjqRZWiN8JSibHIlOvTiF85bsrx9/ut1yQZ+lD/a
uHiFvS9Z0f48wmueeeRmdOGiRVffkJXo6fzRvqP8KX+04FSKqxOZsxE4tZ8u
5u8mq6M7Hfy2uJasiQ4+OvmImojyRy++aLRkCJmLvqHXe6wxWR/9rdpv8kIy
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
/bWX/gfhRW6l
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.005555555555555556], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/+icgGc6r+2of/Sca4erh9pQ/2iVz9tnrTel/tElaUpemkuo/w3AqnHIyw+b
Rf2jubvX8XJHVsv6R0c+aP03Z6HMHPTestVpjYYyA1qqs3GJt7nMXHTb9Dtp
vlyZeWj13uyqgfYy89Htd1f/znaUWYgewK+IHrpG5iz0wtGOoXx3mUUbQHhz
/6PhrTyZSzD+8VOOq3CtzGK0TnU6jPOWWYLrc2Y8f3TYR2YpxoPH5SyZ6Sdz
F8YPRJ/OFPnLzNoIQgf1iR9GBsqsiNaYWREUF0T9bwTWigQHzpNg6h/dmlZk
Py+U+sf1/R46/YhfR/1j3OJM3HgvPvW/ESDa8u8IuTDqH+OeYt/P+8lCjLu/
eX5rQTj1j/vditp45BZZhOvbDtrlrKbfr0o2gvjUTs+jUrIY8+OV9r32i6T+
Mf/0mLeeH8lSzFdRV1YPiqL+Mb/emGX5jszaBJDJsW30iKb+0dlzKuqayOxN
wLJLb7QwjaH+0dH6MxzPk2ETiDsCNViqAup/EwhXTLG2SyXz0KbNUrcPZD7u
XzpBQ8sylvpHx09yry8kZ6EdA/as7B9H/WP+urD3FS7kEqz/aPEK9hmyGNer
9+3exlpP/WO8oeHUYBuyFK/viOny43vJXRjnKLPC2siseGAJnwoiZm+g/uNB
uHH37MvBZHY8iL+mxNqfJnNwPaes3PIjGTDudmf66ZkbqX90fNaLZA8yLx5g
ftO3F7lkPu4/g+Vy+w5ZiHH3Z53mf8hZuD/egYarb6L+cb+1H49YOZJLcL3R
wEGvE8hi3O+2ymTjE2QJ5h8WWwkkZCnGc1c93/ad3IX7HbjK2jounvoXgrj/
mvqNi8gKQgCHNKNwe7KiEFiu+UbhfLKSEIQfj+9O20pmY/7VBZ3Vh8lqaOPp
T6eWkzloSHh8uY6siz5qaZgrJQPWU7dbU/6FbIb79988cw9LSK8neoXeyJRB
ZCfMD3zvUzCczBOCdNrzEX2jyP64/rBv+67xZD5ev8NDcdhEskAIvFI/p52T
yUIhsDuWevafQk4TgqjSOv76VHIWrh/qaNYyjZz3//1bjMynk0V4/ZKhH8cz
LsR6AxoLzZn1JZjveanlFbN/GdZb/O7eO1WyGK8/Y1a16yRyDe4X2PTaRJks
QS955nF8HLkZ91e8YpzC9CtFlyXuaWNej3Z8fZ7eXH1LgdyF19t5cu28/uQe
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

           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.40964248417840027`, 
        0.9135886948621658}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.40964248417840027`, 
        0.9135886948621658}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"x\"", "\"y\"", "\"z\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(m)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698469943974267*^9, 3.698469970044737*^9}, {
   3.698470107328289*^9, 3.698470116667494*^9}, {3.698481384616886*^9, 
   3.698481412261808*^9}, 3.698481524038104*^9, 3.698494014689568*^9, 
   3.6985036157679863`*^9, {3.698505664074839*^9, 3.698505675203444*^9}, 
   3.698505706744568*^9, {3.698505738431473*^9, 3.6985057860874443`*^9}, {
   3.698505847732589*^9, 3.69850588992857*^9}, {3.6985059216233892`*^9, 
   3.698505938460219*^9}, 3.698506081280951*^9, 3.6985061756350203`*^9, {
   3.698506208351253*^9, 3.698506238026346*^9}, {3.698506442623125*^9, 
   3.698506459723701*^9}, 3.6985064985028677`*^9, {3.698550258678968*^9, 
   3.698550275942671*^9}, 3.6985506183401127`*^9, {3.698551257631946*^9, 
   3.698551269709711*^9}, 3.698552478288631*^9, 3.6985606831794577`*^9, 
   3.698560763235948*^9, 3.698566978625875*^9, 3.698569164713573*^9, 
   3.698572372333726*^9, 3.698573211656267*^9, 3.698575087901354*^9, {
   3.6985769951525927`*^9, 3.6985769990099382`*^9}, 3.6985820355583477`*^9, 
   3.698596218402944*^9, 3.698596424105398*^9, {3.698636319025185*^9, 
   3.698636326433777*^9}, 3.698643317180711*^9, 3.698651342870118*^9, {
   3.698654145350697*^9, 3.6986541692102823`*^9}, {3.698654975157387*^9, 
   3.6986549781932364`*^9}, 3.698658876040854*^9, 3.698660503413991*^9, {
   3.698661225467407*^9, 3.6986612512035313`*^9}, 3.6986677240339622`*^9, 
   3.6986724792202272`*^9, {3.698676769057242*^9, 3.698676772572802*^9}, 
   3.6986854904274273`*^9, {3.6986855600666*^9, 3.6986855637809153`*^9}, 
   3.698686888580523*^9, {3.698691013930455*^9, 3.698691019641794*^9}, 
   3.69872148592509*^9, {3.698724331755579*^9, 3.6987243411475973`*^9}, 
   3.698724471243079*^9, {3.6987281818980227`*^9, 3.6987281949352303`*^9}, 
   3.698728423162883*^9, 3.6987289946821404`*^9, 3.6987295678281813`*^9, 
   3.698729682665985*^9, 3.6987300402985973`*^9, 3.6987370303202047`*^9, 
   3.6987455191920357`*^9, 3.698745556479059*^9, {3.698745671791685*^9, 
   3.698745720340805*^9}, 3.6987530830482397`*^9, 3.698753125799821*^9, 
   3.698755273431437*^9, 3.698768946011731*^9, {3.698769349822709*^9, 
   3.698769354829199*^9}, 3.6987693870158463`*^9, 3.698939546793846*^9, 
   3.698939614839422*^9, 3.711724352190515*^9, {3.7117244557919703`*^9, 
   3.711724471524047*^9}, {3.711724530006316*^9, 3.7117245507668247`*^9}, 
   3.711724594580964*^9, 3.711733363894684*^9, 3.711735773814241*^9, 
   3.711735970376442*^9, 3.7117360253098917`*^9, 3.7117695018179197`*^9, 
   3.711769694149818*^9, 3.711976490496048*^9, 3.7119765565927057`*^9, 
   3.711976681802099*^9, 3.711977079626976*^9, 3.7119771146602583`*^9, 
   3.711978828577969*^9, 3.711979416553405*^9, 3.711990667853732*^9, {
   3.7119986352780523`*^9, 3.711998654797083*^9}, 3.7119988579886913`*^9, 
   3.711999039667527*^9, 3.711999203831567*^9, 3.712030495103266*^9, 
   3.714930959773863*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/sim_error_position.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6985057832421618`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error attitude", "Chapter",
 CellChangeTimes->{{3.698506624711748*^9, 3.6985066267613287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Theta]", "[", 
             RowBox[{
              RowBox[{"stateList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{
              RowBox[{"stateList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Omega]\[Theta]", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"stateList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"stateList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], " ", 
             FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ","}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
                  RowBox[{"nH", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
                  RowBox[{"nH", "[", "#", "]"}]}]}], "]"}], "&"}], "[", 
              RowBox[{
               RowBox[{"stateList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], " ", ")"}], 
            FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], "*)"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<\[Psi]\>\""}], "}"}], ",", 
         "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(deg)\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
    RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.698506525212187*^9, 3.698506565612026*^9}, {
   3.698550631492511*^9, 3.698550637743202*^9}, {3.6985508013439083`*^9, 
   3.6985508016424522`*^9}, {3.698745727513345*^9, 3.6987457339500303`*^9}, {
   3.698939767564035*^9, 3.698939769221393*^9}, 3.711617601580361*^9, {
   3.711724627445345*^9, 3.711724656489009*^9}, {3.711775775709437*^9, 
   3.7117757804003277`*^9}, {3.711976498252227*^9, 3.711976516544635*^9}, {
   3.7119765677802343`*^9, 3.711976632164248*^9}, {3.711978837775489*^9, 
   3.71197887171798*^9}, {3.7119905687199*^9, 3.711990583449336*^9}, {
   3.712030565557334*^9, 3.712030580914138*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nk4VH3YB/DRIiRbG9qmRaFEuxb1rVS0WioqMdm3GPvODIMxM5b2PdMu
lbRrn3ZKUVFUilS0ohSRer3Xuc/zXu/zz3N9np97fuf2PXPO/XM9Q10D7Ty6
cDic+q4czv/+m/mncZazz8AIh8E2oP8Al/9nFTzUDlq++j9r4fKfk2ed/3Mf
rN/uYeL2n3WxcH2cted/HghB+eX0/zMXk3rxYl3/8zAcHq283fE/j8D1oTUe
C/7zSPTkeASa/GdDTHKMmqv6n41xKH5hROUg1mPgf+/R4d3/eSxaTumE2f5n
MxhEOsl+DWQ9DluLJu6V/OfxuPHQxU39P08A//ejXdEDWE/E+6YNGmX6rCdh
5+n7af3/82Q0Rx95O1eP9RSE5rv9dNBlbY4bL5cdsuvPeio8jatfje/HehrC
XBXpLX1YT8fSL5/zs3uznoH0iML5xjqsLcC9PtthqxbrmVBXft/0VoP1LHir
tZto9mIN+DhmG+v3JAuAybplGl1V2fXZaN63QbVImV2fjR72j239urHrc/Bq
4aaRH5XY9Tl4f/HqnqS/y2h9LjqWxUz42EoWzMWvq65XlH6w65aIe2L168EX
dt0S3BHH8uZ/YNfnwW5w/E3+G3Z9Hnxdvw+yrmDX52P0+PFXHpWy6/Nx8UD/
I5widn0BFri/+lWlYNcX4EvJrcceBey6FYYMV/htO8muWyE/ubdy8GF23Rou
OV+/Ne9m162hflhZOGQTu74QrSVThjeJ2fWFONClt5VPPLu+CH37Ra1PDWHX
F+Fyk+nARd7s+mI8VkTWnXFi1xejx6XD/jds2PUlsHl73i7Ekl1fggDDj9ZF
U9j1pZCbrOl5y5hdX4ry7occeYPY9WVYMi6yXa7Jri+Du+rsOyIldt0Gjx/f
z+j5Yylj2EB5x4cpk96RBTZQ6tn3iFI5WWGDEvsJRfw7ZI4ttI1Gb0g8x9bb
Ikv9cMvkQ2y9LcrKbrWlb2brbWErKtuTmsTW2+F4SN+Pw4PZejt8Lgn66Mpj
6+3w3md+vuVStt4OGY8N7Yums/X2eHX21OdGQ7beHp8iFm673Jett0fm745w
oy5svT2swxefnPZtCdUvh0dUF++GSjKWY8YDneIFd8iC5ZiyMETVMp+sWI4R
u/7YvNvJ1q9A7z2Lnxkms/Ur8Fp6rEQ7kK1fgcArP8KyHdn6FZhfFdPtyWy2
fiX2H+p68agxW78Ssqr9T0f2ZutXoufRS1ut2xdT/Uo84nycr1NL5jhAPuev
sfA+GQ7wut0s3XqKLHCAw/JPZ+22s/UOOLVhwI9z8Wy9Iyar1mxRuLP1jlip
lPcteCFb74gub7VsH5qy9Y64MeKcTmkftn4VGi56SmN+L6L6VVha2q9vaRVZ
sAp3v9T0fHSDrFiFEej/KOwQmbMaJ41mX7knZutX43vZ2Km3/dj61Yh9+/eo
31K2fjUuqo0Ov2bG1q+BwbHNPa7qsPVrwBm78b5X80KqXwN9iw6T6+VkxRo8
y5994NZ5MscJq8as3xu2jQwn7HCctbU8gq13gkr+tG7vHNh6JxQVn3PfN4Wt
X4sHo79O1ujP1q/FYoe+Hca/rKl+Lab4rZ/RWkZWrMWmD7Zx4WfIHGc8vLJs
0eENZDjDaOeUSeJAtt4ZpUvHPRy4hK13xlf7khx3Y7beBTHOw9bxerD1Lrj4
o3ij1jsrqndBjx/9XocpyAoX2Koq1WXtJnN4GNvFcYVrJJnLQ8ene2Wf7Mng
we/Ptz6jTck8Hj7O5BcNV2M/n4cTr7vnlr9bwFjOg+qITcGzr5MVPLR2m1zr
tYNczcMHS0eFdQiZsw4P+iue1C0mc9ehzUJeN2ckGevwJ/1I6Zp/82n/dRj0
VtN9QgVZsA7LXI7H3s8ny9fBv2fL76FpZMU61OYMUkxbR67u/LyHvQr6TiVz
XOEyVlByRovMdYV/r66/+9bPo/1dMb+06xiL62SeKx4cfu5uvJUscMXlObcO
vvYny11xcbPS99VzyQpX9E4tcpDrkatdsSjP7sPJBkva3w3f6ypOS+6QuW4Q
VO99Pm4XGW7oH9UQcphP5rnhoPLg4x/nkQVuuO+WfPSPPlnuhsKS5J3VDXNp
fzdEbRae3nqbXO2GYQEVRtwdZI47fp+ssYhfT+a64xv3vdnp2WS4Y7pMZ+HV
vmSeO/4pRZbLP86h/d2x9Pav4c5XyXJ35FVNlv7KIivcYee8w8PPnVztjk8W
RjrXppA5Hqh+I2luUCNzPWA09VNol9ezaX8PrN1a9+9XPpnngaNKScolSWSB
Bz5YKf+VriTLPdB24KuLqRFZ4YGmP4+OXmoH7e+BVy9mrTV9ROZ44lfTxX8Z
cjLXE1gTr/8ymAxPtIVHTOs7j8zzhEecXuPM/mSBJxxESXvPPJlF+3vC2tno
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
EjfrfwAUF+Q2
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-4.520480276931969, 64.47500937789118}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-4.520480276931969, 64.47500937789118}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"\[Theta]\"", "\"\[Psi]\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(deg)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.698506540240511*^9, 3.698506574225786*^9, 3.698550639109888*^9, 
   3.698551274212489*^9, 3.698552484376136*^9, 3.6985606939333553`*^9, 
   3.6985607673466787`*^9, 3.698566987816187*^9, 3.698569180548559*^9, 
   3.698572376860351*^9, 3.698575091669492*^9, 3.698577001017099*^9, 
   3.698596229848143*^9, 3.6985964196295958`*^9, 3.698643324921217*^9, 
   3.698651349803632*^9, 3.6986541731444597`*^9, 3.698654980606743*^9, 
   3.6986588789464893`*^9, 3.698660506094022*^9, 3.698661253967637*^9, 
   3.698667726849847*^9, 3.698672482218561*^9, 3.6986767755930157`*^9, 
   3.698685493955059*^9, 3.6986855668453074`*^9, 3.6986868933531113`*^9, 
   3.698691023600697*^9, 3.698721491658472*^9, 3.6987243526026773`*^9, 
   3.6987284286803226`*^9, 3.698729570923938*^9, 3.698730042558313*^9, 
   3.698737033505286*^9, 3.6987455223959618`*^9, {3.6987457254836884`*^9, 
   3.698745741831875*^9}, {3.698753093853067*^9, 3.698753120271991*^9}, 
   3.698768956788032*^9, 3.698769390625383*^9, 3.6989397701719103`*^9, 
   3.711724658784027*^9, 3.71173336893643*^9, 3.711735776755809*^9, 
   3.711735976436211*^9, 3.711736028837833*^9, 3.711769505727399*^9, 
   3.7117696987066603`*^9, 3.711976519189014*^9, 3.711976558833091*^9, {
   3.711976632914193*^9, 3.7119766387020893`*^9}, 3.711976684503474*^9, {
   3.71197708131328*^9, 3.7119770865837097`*^9}, 3.711977117248887*^9, {
   3.711978831610756*^9, 3.711978877347361*^9}, 3.711979419745861*^9, 
   3.7119906733304234`*^9, 3.7119986586894817`*^9, 3.711998860341837*^9, 
   3.7119990422140837`*^9, 3.71199920702567*^9, 3.712030495891226*^9, 
   3.71203058198701*^9, 3.714930960118545*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/sim_error_attitude.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{
   RowBox[{"inputList", "[", 
    RowBox[{"[", ";;", "]"}], "]"}], "[", 
   RowBox[{"[", "comp", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"inputList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"inputList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(U\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(U\), \(2\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<Thrust(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/sim_uavs_thrusts.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"inputList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"inputList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"inputList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"inputList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"inputList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"inputList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"inputList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1  x\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1  y\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(1  z\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2  x\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2  y\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(2  z\)]\)\>\""}], "}"}], 
        ",", "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<angular velocity(hz)\>\""}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/sim_uavs_angular_velocities.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7098117708344173`*^9, {3.709811843596953*^9, 3.709811864482003*^9}, 
   3.710227175804454*^9, {3.71172473553301*^9, 3.711724759865477*^9}, 
   3.71177435955336*^9, 3.711978823354053*^9, {3.711979365586822*^9, 
   3.711979373207986*^9}, {3.711990436480165*^9, 3.7119904799091*^9}, {
   3.711990509995043*^9, 3.711990513922105*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9m3k8lO37/pUSbbShXYpIoiTaOCqVtFGIkobsxNh3BoMx1pYn0qZdu/bt
qUapVE9FWvRpkxZKSbtU+vm9vnPon17vrs4557jP+76uc7lnmHvQIs+OCgoK
9YoKCv//7//702SZbnuk9VW5MeT/gFF9xPp6t8nK+DsraJ92FVkNGRtNS6se
kvti7KWhXSc+IWuik1NU54U15EGYMclgXa9XZC1kPdL3iKsja2PmJ5U5me/I
I7Cwq0vipA9kXRwqHvI47SNZD8F7Jr9c9Yk8Cl/udX764TN5NNb2M77Z+St5
DBbZXVl5op2NcUnBVeFPO49FiM6CzKftPA4XHBr8ndrZBIZxgaFBX8jj4ZHg
c3NEuz9TrFs0/01ME3kCFCdPCwlrJJvh0iP1BX3fk83R6/0s0fK35Ino3CXf
aPEb8iRYHRuyubmWPBmJvsuH2j0nT8GjxEFDBI/JU+Hk/LKnfns8LGDbvyL4
8F2yJR7GHL39/RYZqIuxPdrxupxFwIL6sv0PLnN9Gi6sb5wTcYHr07CrtUHz
9WmuT4fFge1bdY9xfTqENvbLLQ5yfQZCs62uGe3h+gyUNofOai3iuhWuHgk1
PVjIdSs8WOn4zHId12fiZFVp1Jlsrs9EH9MReoPTuT4LeudUW1aJuD4L3hYX
Xh2K5vpsWJpduFIbwvXZKLt0XdA9gOvWkNRccx3jyXVr1BX/mDfXletzsOee
1SbPJVyfA+/8sqJEW67bwCjZefXGOVy3QffXcennpnN9LqoaDRJfTOb6XFgW
fXdUNeX6PDwRjamYNYbr85DfMC43YyTX58PgSPXAR1pcnw+Ny+9eTBjA9QV4
sbp07M4+XF8ApfJGaPfg+kKYqP4adVSJ6wvhlW/y2V6B67YQ2HTtoPHV6P8Y
bfy7zPZgnZxFtvhvhs/cwMdyltniZvGWqcvuyFnBDqbmr23CL9PeDqFvMoPO
n6K9Hfb3Ops8/gDt7XBRK8z8cRHtF0Etduvwo//QfhFK7TuePiOl/SJMVp06
73Mi7Rfhv5HnBrqE034x8hs3WP/wo/1iJMemPL0soP1i9MmMu1PqSPvFOK+7
82/TPNrb46neqyl2M2hvj4Ca1TNrJ9LeHg4WreU7jGlvD9GQbz7/jKS9A+54
GJw7OYT2DuhattGmizrtHRA/5G5BWg/aO+Bnrs7Q8Z1p74je018sVP0zRm7v
CJmFS77GNzmLHGEvUVg+74OcZY7od2Nap4Ov5aywBNkK4g/mz2i/BNqJnyM+
PqD9Etwpm/3nzh3aL8HltWlPHpXT3gnxpTuF3S/R3gl/J+mpe5+jvRMOnzk5
6u1x2jtBf0tBjzWHaO+M5UIjLbdi2jsjN1Jw1WE77Z1h++KLV9Am2jtDUlfv
f3A97ZeiaOXF6aqrab8Uv81PuazLpP1SbP/d2WhKGu2XwmuyoolSEu2Xwffi
3DefYmm/DEsNn9xojaD9MgxdNNx7dAjtl+FYRPdZMato7wL9Hh1/1PnQ3gWN
Sm97hHvQ3gV7dfsNHyagvQtqNk+oalhG++WImzXt4r0ltF+Ocf/Nz3q8mPbL
oTcw/OXfhbRfjtF+u4OnzaO9Ky5ZRtVttaa9KzwqvjYPmEl7V9wc7L786DTa
uyJmhtIdTwvar8CBlfVdTSfTfgUWHMqpGGpO+xXooHj2hY4p7Vfg1cmhHWeP
o70ABt21fyQbyVlLAPdP6emPRvPzBMjfMT7WZpScBQJE3nteeH8kP1+AT99u
H47RkXORAMcc8lImDqc/AWwOnH7ea5icawRovLYjW3Eo/buh/ru5Y8/B9O+G
Y7ePdRg3kP7d4FcXvCSwP/27YYPG1cGXNejfDcpHK/sbq9O/G1aYeaie6Ev/
bmh8/EJm14f+3bDeeOzHzr3p3x179UqcK9Xo3x2nNxpfOKZK/+4IX/y7+kBP
+m9bX1Pj8W8P+ndHfBMG1nanf3f8njn2+GCyzB3GjuvfBHajf3c0XJjnc78r
/a/Ein0OjbZkrZVw2aNs+EKF/ldiVsuc6lSyYCW+7C3bYUEWrYRSysgZ3chF
K1E4xcOvQZn+V+LTh4+3npFrVmJGi+Lw12QFD/Qseja0lazlAR3XjnH67f49
MNsrtMmr3b8HPnt/NjvZ7t8DR5XGq2rw+xd5wG5lX9MMsswDGeOv+nVv1+8B
vz+/Q4vICp7Q6NxbYyavl5Ynam8NH9xChieiHhstusjrLfBE/iHd1HWMh8gT
/376mR7NeBV5orlup1Eg4ynzxJApRvYhvejfEwfc9lWktsffC73L9VOKeX9o
eeG53sl5/+P9Ay9Mmjml10DeXwIvjBNGnvJrv/+8cMmqWu+6Jv17oe69t92E
AfTvhXiX4qFHeT/XeOFAXbB4Cu93BW+sWXc75P4Q+vfGaEnV8zgt+vfG2Lqo
S+O06d8b/UTCPj/4fIm88UP667/r7c+fNyZdu/huH59PmTdiTDf5FurTvzd6
7o6fXWBA/z7YMN8kZach/fsgKmPGoIvcD+CD2u+y3vVj6d8H1c1DvYeOp38f
BF7pPsBzAv37QL/79NFnuP/IfDBvmmDLQO5PNT64suGKMGsq/fti7b9eO7qB
/n0RbVRsumE6/fviWIK5rin3Q4Ev5g1vCHk+m/59cXTkOs0CG/r3xVfpq94r
5tN/2+d5zHYZb0v/vhh74+IHDe7PCn7oGX/tgooj/fthkfuYKyrO9O8H+4qW
rxou9O8Hp9M2GL+C/v3w45xpvqs7/fvh7eSSuvWe9O+HyuCgwU95vtT4QWnf
7WFjA+jfH7rHTzxeE0T//ojZITLqGEr//pjTUt+awPNM4I+Prk16KjH074+K
H/9lFMXTvz+O5D5sseL5KPPHip2xi76L6d8fkkR9j+MS+g9AbIKNQmIW/QfA
ttjsq0Me/Qfg3PFxXSeuo/8AzNrhpqJXQP8B2K9w64Q2z/eiADz4JqjQK6L/
AGRP/qQ+aSf9B2BFF1g5Ml9QWIUTnZXV4g/Q/yrMClQxOlRC/6tQM2PA4vb8
Q7AKOqcnGow5Q/+r0Ona7pVx5+l/FUqaf+6qKqX/VVCcPX2DyVX6XwUbTZ3a
jTfoPxALJncY3p35kVYgmm/1/Z1SRf+B2Nu0q5tiNf0HQld7TKPkCf0H4o2W
xKLfC/oPRISW1vo9zM9kgTDV0822fEf/gahwv3T2SSP9B2HFqLknEr7QfxB2
5sX11mmm/yA8HX3E+85v+g9C1JuBNvEdmF8G4b/EjgvHKMm5KAh+G5q71XZl
vhmEVW8HaBSoyrkmCJoCmy62fZl/CvHqs1eYSn85qwlhcCXjx+XBctYSosHP
wiBRW87GQvxtObt/EvNfCOFzSF3ju4GcbYXofTWhxxHmywIhpoT7jvU3lbOw
bT3n6sgRk/j9hUg5bFjw2ELOeW3f54yK4Wrm40VCGNmUrrWylnOJEOpKT+K+
MX+XCVGUNGLTDjs5VwjhJL1avID5fo0QZ/f4Lv++VM5NQvjumh1VuIL6g7H+
t8W5SR7UHwxJS03DAx/qD8aM5NiqwFXUH4x/Fw6x7BhC/cEw3LPxb14E9Qdj
mbv47YBY6g/Gy4VD729l/SIMRmPdsi1DxdQfjAQn2YhCCfUHo+jbormq2dQf
jArdxOaE1dQfjJ0N3/q9Zb0kC4btMGne/ELqD0b9CWWnA1uoPxjzO/ZY0XkH
9bfpyaosdNpD/SHoE/Wn4+791B8Cj1+Bqz8cpv4Q/DJQnG50nPpD8FS8rLf/
aepv45xtHbb9S/0hmKw2R61SRv0hsDGrtPxVRv0hOG6cumbodeoPQdXmKd0s
blF/CBxWDDroWEn9Ieiv7xTre5/6Q+C86FtUxCPqD8GuBbnF8U+pPwQfJw/p
nviC+kOg8u7izpjX1B8ClzMpIcK31B8K+10TwwQfqD8U8det9th8ov5QDNoe
3MXoG/WHQmpVkdPjJ/WH4vSZNaZvflN/KAZX/ohyYX0tCMX0TZ2eTO8oZ2Eo
5gveT9HtxHo8FOdMctcqsT7PC4VJ2b4HL7vIuSgUkTsf/DqvIueSULifTP6x
rpucZaHoufHHvz6s9ytCUTnM2WKiqpxrQnEwdV+AUi85N4XCKuieWUVv1v9h
WPvPgZz1feWsFoai6lZXZ3U5a4VhzLn8fzQ15WwchhA12yH3+ssZYVA/1/9V
5kA524bBdnmPSsvB1B+GsttRtz8Oof4waE1uLNvY3s8IQx/Z4k0ztKk/DNJV
XybXDaf+MKimZ0rTdKg/DI/fuAYOY39EFoZe3jNvndKj/jAET/g3a84o6g/D
YoXvqx8YUH8YdO++K3U1pP5w/LPXu0Mt+y9q4ei+abCpwJj6w6GcWjLt0Vjq
D4fH2Cvd5ptQfzjEP3tGnRtP/eGoLXPxHzGB+sMxIWDXjXQz6g9HfUSf2Nfm
1B+Od8Zq7lMnUX84rPou8Mxlv6goHFqSu36Pp1B/OGRfW52GWVB/ODqM2aDu
Zkn94ag2q5IWgvrDEe+9aPOtadQfjuNvTCe0tPenIvBs0yALLSvqj4Bh6qgt
ljOpPwIG4T3gNIv6I2Dj2qGn32zqj8Dvbvc+h1lTfwRCfeofRbEfJojA6/kT
D4fbUH8Eyt8tW+E/l/rb7GVJD53nUX8ElsyM6TxtPvVHQFf3+EOtBdQfgUew
mPqTLIuA/dxynRsLqT8C+812JK1lf64mApZOpdMc7Kg/AjPmnFyiuoj6I2G2
++SJUrJaJJRy8hcELKb+SDT9udVP1Z76I3GtU+DfvWRE4t09fYWpDtQfie3H
bXuUkwWRWP/o1qC5jtQfifyRI3WukkWRuP0sdvBE9hfzIhFvlvJnB7koEpUf
pOeVnKg/EtpXwx3dyLJIvO14tvQYuSISW+6v+PmHXBMJq/K/PyydqT8S1rql
p6PJClHYvcLJbD9ZLQpWvp2F98haUbirtWbFN7JxFOYet1XsuZT6o7C4wwDn
IWTbKFztOG+FLlkQhcGTy/u2szAK84d/jhpMFkVhxo6Dmd3JeVEwkiyf/4X+
iqIwpVPthUpySRRmTsh/sYcsi0LLkcWnwskVUbDu5T19MrkmCseyClKbeT2a
2vTm64gPkhWicSlZNm0pWS0avUfmXmrl9deKRuU6/W4bycbRGHm9QMuIjDb2
c1A+x3jaRqNP+qxyC7IgGvoCmddZ3g/CaHiMS3lnSBZFQ1nl7NINvJ/yohGw
7ueF37z/iqKxWtFyqBO5JBrubxpT9vN+lUUjWe3et++8vyuisVk0JGESuSYa
gxe460bweWiKhkrB+ua9fF4UYnAnou/f+3ye1GLg+PUfqxY+f1ox2K1oek+d
bByDXXF+Zwz4vCIG7/v3UJjI59k2BjejbI9b8HkXxGDywLLaKdwPhDEw819U
YML9QtT2eRcta7W5n+TF4KS7/u2u3G+KYrC8oJNfA/enkjZ/uweXlc2g/hj8
75l6w3ruZxUxSN1R98GN+11NDGaHPX6sw/2wKQaVX/PKarl/KsSi+/fmUwVT
qT8WrfEOV2dzv9WKxco75gpN3J+NYzFXKI5YPZH6YzHU2GfSaO7ntrH4beC2
XNa+/8fi1l3zT/PZ7xfG4sgbReX7PD9EsdiZMOy4wzjqj8XZTpOUK3j+FMVi
zngLDSsj6o9FY1+vr0d4fsliUfTV6Fj/0dQfi4ErVnjHtp9/sbjb5/eIhzwf
m2Lh+dNWwbB9vhCHsp4NPeJ5vqrFwWFpgfs1nr9acTj3wKtPd57PxnHQWr7D
dC7Pb8TBM7v6mZjnu20c0o7dGnFmEPXHwWR/6uB6ziuEcRgnm/q8F/MHURzG
ZgeIJmhQfxycH8o0HPtRfxw0fbT+FXK+URKH4Fe7xWnMZ2Rx2LRtpySf+U5F
HI5Fbn6+g/lQTRy6rJm9bT/zpaY4YKr09SHmUwrxeHk0ruwg8y21eFx66eFY
3Jn642FsefLYFkXqj0f/aLVveR2oPx7CjXFera3M/+LxJN2nZ1UL8994/Prf
kL5F35n/xuO+jd4+z8/Mf+PhtdFZcUQj8994JParXPSY+WlRPMb8+nIzk/lr
SZu/Fv/tpsxvZfHI3DSi66MnzH/j4XLc2iyimvlvPMquW7r2uMf8Nx79xPuP
bWmf3yQgubdnwKibzH8ToLsu5nzJVea/CfgnfvSTsZeY/yag6e+7PwfPM/9t
sw9Y7KRzhvoTEFRoOKyA9YKg7f/b+OYolVB/AgxzBj4Qst4QJeD9yLgxD3dT
fwJSvtXemrid+hNgt/jKu4LN1J+AeeJj574WUH8CPAc4Rs5fR/0J+OPqb78j
l/oToHWxLOM750lNCXAzs1owO436EzH70qPqf5KoPxFu10WC2jjqT8SW/KmD
DKOoPxGhtwfMiAil/kR4PtXtfiGQ+hORExd8qBPnUYJE2OuruNl4Un8izu1u
XprbPp9KhFRkVVW1jPoTMWZ1vYLmEupPxPCs+wNcFlF/IsKkjUuK5lN/IqI3
Kn18xfq4os3e+Zn6KCvqT8R40TAloSX1J+JbpseXk6y/FURY4Kjd7y/rc2UR
3p09s816LK+HCG8t/e+sHS1nTRGuyBzv1bD+1xLBYmj0G6PhctYToXfz3slJ
nIcZi9CwdIPKffYXzEXoJLmVatCP108E9SNFr8VqcrYWYajMwvVFN15PEa5p
7RgxrYucnUQYl7d+1c6OvL4iFHw8sKpbq7w/4iPC9MEznCN+ylkoQuudOI/X
X+UcJcKw6OmXnZrYvxHhvb7l3ooGOUtEWJvwbM78OjnniSDLsqm+XSvnAhHy
H/qmO3DeViTCKuunGS8eyblYhA6jW3uF3pdziQh7TZ7Yda2U82kRrsdNjt3z
H/tDItRvXHPRhvO4chGOHFC2/XpZzhVt19srdPnOi3KuFsHXzEFzGedzNSK8
XPG4RPOUnOtFyNN84vj0qJybRJh9+t7EvZzXNYtw7EWdJG4f+09J2HH8cciS
3XJWTsJTRU3dSZzfqSXh37ydFSO2yFkzCWtsRhZpFLJflYTEtbWlvTnP00uC
tvSYu/oaORsnoWqJ2mHtHDmbJ6GXWKnKTMr+VhKy501sceB8zzoJnh1rFsYn
y9k2Ce/9y1oPJsjZKQkBBtPG1rP/KUiC1AC9Rkcy/kkoUZ1YHs3+qTAJ4/YZ
JVayvxqVBPXIo64m7L+KkvBw4KOcrezPSpJQ+n66mTr7t3lJ2BvRLzHfjfFP
wrSev7KGuzL+SXjhMSz97FLGPwmxw8zXunAeWNJ2fRKDHqjYM/5JsP4SEX6J
/WhZEpSrYtelsV9dngRjJb0ljuxnVyTh/qmimrHsd1cnIahX6uL+Vox/Ek43
v6/szvlgfRIW3POO7875YFMShA6/IjTZf29OwrtZ2s+N2Z9XSMZZt5v3HTgf
VE5GzEinmHTOB9WSsfXSxoYrnAdoJuNaw6PZvdrnBck4fu/KAV/OB/WS4Tsg
yewO5w/GyThytrDTdM4nzNs+v1dP40ucZyAZjo+n3V/IeYd1MnZO7aLawPmI
bTJO3iv4sZbzE6dkrC3fUGzTPg9MhuBN38mqnMf4JGN1aey1F5zfCJMhe7TL
8xLnPVHJ+Hz1zugjnA+JkrEyoNDkEOdJkmR8M+6ad4bzp7xkdLFMW1LFeVZB
MkaVP9zyi/OyomTMt9OPGdeF8U/Gq05KfyI7M/7JmNjVedJ/iox/Mg68DLAy
6sj4J6Oq6t3obQqMfzIKrf/XSfuv4f9xRdvnzyt6cuSPnKuTYdXaetn2t5xr
klGh1u9Ga4uc65Nhs2D5n3M/5dyUjBE6h/wlzXJuTsZF84naHj/krJCC0y1S
w4Xf5aycgh9zpBvmfJOzWgomaEYFL/4qZ80UWKp/vBjwRc5aKVD3fpnzz2c5
66Xgr9P2uluf5Gycgiadu3f7kc1TEHM22GlVk5yRgobk6sR7H+VsnQI3y5ML
55JtU3D+We/blY1ydkrBAMECBR+yIAV9zmo19CD7pMD/xoY1lz/IWZgCo7nD
WiTkqBRY3Y4Y4UoWpeCs7EifGWRJCmpCp103I+elwMHww8wp5IIUzJh6L8OW
XJQC90GB68LIxW3+cqUexeSSFHSqtGtuIJ9OQUqZ1XxLfl9ZCuoNpgq2k8tT
sLBulWE/6q9IQYH5ypJ8cnUKvqoqvtLn9atJwXOX7Es3yfUpWOK9aWY8r3dT
CsYY6nhZMD7NKQi8HjlIlfFTEOPLU0vBR7KyGGO6pOo9Z7zVxOhqv9//Ge8H
TTF8y0KHfuD9oiXGpdu/zbvx/tITI7fh0gFz3n/GYmiN3BYYzvvTXIwhZyqD
S38x/mL472gsHsT721qM3o6fO6e3Mv5iVDmbxyjw+XASY6tCwndJBz7/Ypwb
9NJPi8+Xjxjb/n139WonPv9tn98Y+zNWic+/GCJJbZMln1+RGId/3Cnszedb
Ika/vi6vvnA+nSdGUUvnsy85fy4Qw73xeJfa9nmzGK5Tz5xu5Hy5WAz70bdO
qXD/KRHDtL7fx3GcH58WY1z8CGs/zotlYoTc/b7/MOfF5WLEH2juqMj9r0KM
Tic6mXrwfYlqMQTpnvpV7e9TiHHo0oOrC0dw/2+Ll3bal0e63P/FcNzQ959g
zn+bxegSmZ+nzvc7FFKxOGvDjfIx3P9TscR50EgJ571qqdhusSHDnvNezVTs
P97xvqEZ9/9UvEi70tBnEvf/VMj63jisxPmucSpU8sM7KnG+a56KX377y3rN
4P6fiiFutx/oz+L+n4pBvS5pLpjD/T8V803e+ybwfRmnVKj+Md17lu/TCFKR
k9LjREfOc31SMVDb29+R81xhm55XF/ae4Dw3KhVvvvefr7Wc8W/7/AHK49bz
/R5JKlIH7hqvwfd/8lKxamGh8Q5vxj8VJ/pqdZjkz/inInbJX9HjQMY/FU4D
1krT+b5RSSpMFG/8mMr57ek2fj9ye2s045+K6shr7tc5vy1Phe6+Zb23cH5b
kYoE8diMuFTGPxV3do3d6pHB+KdiR+MLA8dsxj8V/470VrLj+1RNbd/3YFpn
h38Y/1RcG1L8120D45+Gxu4Pb0RuZvzT0OFY2ZT12xj/NFgevD7q/C7GPw3H
j9f5vt/L+Kch1vXm7eHML/XSUPH0luFK5p/GaVC//n3pvpOMfxrWvfij//Ms
45+GC8/mBS5kfmudhnFTOvw6wPzXNg29ujZu78X82CkNH2WbzeOZPwvS0F/D
PudjBeOfhs+PVCN8mH8L03CuPKu0jvl5VBoaQmZOX8X8XZQGaIRfb2Z+L0lD
TVp/PWl7/p+GNyrfxgx7z/inYemsvEPnWT8UpWG4/pTIFXxfrzgN5yv6OCu1
MP5pKI1pHX6U9cnpNEhCj+xxV2T9lobgzkePaSjLuTwNZwOWaFR2Zz2XBuHN
/7bl9JJzdRoChvbRtuX7hTVp2DRJ0bvfQDnXp2H72YWWz4ay3mvT2yk9et8I
OTenYdm0fq+i9Vn/pWOC06z588aw/kuHXdPslGEmrP/S0TvQwP6nGeu/dGz4
WpddNYX1Xzr6eLu0Hp7G+i8d5/ztQnNmsf5Lx5lVsWcD57L+S4fBjrhttras
/9Jhr1b3zcSB9V86hudYpGpyXmubDtxpGdTqyvovHZO9M6SvVrL+S8eTioUb
b3Je65MOp/CDg45xXitMx71jfx4Xcl4blY6L9Rt2J0ey/m6zD388x4/1viQd
DtcHr7VjPyAvHes9ZQvN2S8oSMeFer35QzJZn6ejqM8VJ8U8ORe3XY/K7qhj
P6IkHQpTxBXXN8j5dDpEu84/3Mf5rCwd7wqXDZdyPluejvtveyd5FzP+6Ujf
deDC9IOMfzom6ivvG3iU8U9H/MDBvT6fZPzT8TDoT+mVc4x/Osy8H0rXcx7b
nI6W3B8TPa4w/hJcuXxj85gbjL8EQp0a8bfbjL8EFoMazp+uYvwlsFl4RSOK
/SUtCQ5vFrqZcP6qJ8Fr9f5+79ifMpbgzUf1DpvfMP4SrIls+mbTwPhL4K3i
ovn1I+MvQY/WaeYFfB/ZVgKrDRd0zDhvdZJgwY/hRyr+MP4SbP0V7zCO/Tgf
CaJ7dQ6JZr9OKEH5jd3rz7OfFyVBalCHA63s94kk+PP5buGUrnKWSPC39ufc
yO7sR0pg5BhRfKinnAsk+K/ab0OtGvuTEkQ5DVbuw/5ksQQfejQ/tWT/skQC
Zy9pJ1/2N09L8OtthmcO+58yCRZqV707zPlpuQSt8X4Jtzg/rZDgjkl817qh
cq5u8zfcPfr3MPY3JTA/UXiixwg510sgPlW1d4Au+50SvJ30BsPZ/22WICag
2nMk+8MKGVgV+ExxJPvHyhmwGrNMSbt9HpqBiZNeOGmyH62ZgYq1JnUq7Fdr
ZeC1aNbm7+xn62Xg7lJ4P2O/2zgDBctixpZy/mmegU0+SfVb2vvnGTj2WD06
kvNO6wy424ytsGE/3jYD5jZ//qfJ+aZTBo6bPEt7wX6+IANHagNLd7L/75OB
+LDkKHfOC4QZqFXUKRzAeUJUBn65b+p7i/MGUQY23/V5EM35hCQDaqdm3tbi
PCMvAxFzRzWUct5RkAFdO5tByzkvKcpA5AV1u8+cpxRnYIevRXQS5y8lGeh6
9JC4K+c3p9uup+66ldmc98gy4K+3TKkr50XlGfDLLVku4nypIgMZM5OXNnE+
VZ2BA6/+fnDmvKwmA3cWblQ5v4zxz0DrHJWt/Zcz/hkI6jq9KIi/Z2jOwPNb
SX8vrGD8pZjiOedwFzfGX4qSUtftc9wZfynuxt+6KV7J+EvxeGXdkDMejL8U
0z9Z5b7h7yf0pLB6eEWthzfjL8XrqNX5o30YfymueWpozvRl/NvWK1XTHf0Y
fym0u8U9Evgz/lIcfre7kwd/r+EkxUMrndYVqxh/KS7aPzhnH8j4S7FZ55XJ
9CDGX4ovzZdd9ISMvxQz904w7BLM+EuxuuucTc/IEin2zrLfdoi/F8mTosis
1SQylPFv+34XJs4zD2P8pVDrN7v2E7lYCnPt4407whl/KQIuu/gtiGD82/Rr
+i/4RJa1+b+5ZF1WJOMvRadF70y1ohh/KQyNJxoeIFdLMcF0X5gxf99SI4X+
ic9KB8n1UiyXaTwfFsP4S2GwJLA5h9wshXrhxgVfyQqZMP+x7qldLOOfiWH2
Rdv2kNUycWC8ff43smYmZj3LPzc5jvHPREvkjm4xZL22zxupkFpCNs7EPn2J
znOyeSaCGrwaOscz/pnI69///giydSbMjga8mEy2zUSyWpLqXLJTJgy+X3Vd
RBZkwi9P4Y4d2ScThrHTBHPIwkx4XWzsPZEclYmoOxfqtMiiTOgknnmuQJZk
orHZ7Hc1v29eJr4cfmWxl1yQCcsF5/YGk4sy0a9I2XIcuTgTw+P8OjTwepVk
InjPnS8byafbvv+pyP4zybJMnG/8HP6G8SjPxMP+2j1E5IpM5HpMeNmLXN32
/Y2O/N7YHv9M1D9f6TqkPf6ZCD8U1GMD75emTGQJZ6p2JzdnYqBgl28k7zeF
LPR9vkX7Me9H5Sz4mufBjKyWhbHLdW9k8n7WzMLorS5Xq3m/a2XhonfclCFk
vSwsaBg03oXPi3EWSv+nfWINnyfzLFirya6V8nlDFsZNCg17y+fTOgt9kruU
qZBts3DOeN1FbT7PTllYujBOOJ7PuyALzjMDayy4H/hkYXroyv7TuV8Is7D5
xlYdC+4nUVlY635E1YT7jSgLG1WEtVrcjyRZSLn3u7gL96u8LFzaWxpY58X4
ZyHghtBSxv2uKAu6Tp1GruF+WJyFhofnxy7nflmShedHdAKGcT893eb/UNeX
zwSMfxZmByft+If7cXkWRn18eXYm9+uKLNx/WTHhowvjnwWLGQY6a7jf12Rh
Q3H/dWN4HtRnIeNS5zVl7e87ZCHy342G9jxPmtv07Loe/pTvHyhkY+79C9EC
nkfK2bCY22D9tP19mGw8U/37eTHPM81spOW+TS/jeaeVDduv1RpGPA/1srEg
fuKxtTwvjbMxpuq432e+D2Cejc3OYxfO5XmLbBxLrAzewvPYOhv7un952cD3
j2yzEeY35pQJz3OnbFg2OvwJ53kvyIZsSHj5UeYDPtmY9+POqHec7wuzsVe/
dsIg5hNR2VBZ7vrXuv33eNno5m+YL2Q+IsnGhMJVvdYyX8nLxpMHwUklzGcK
sjHpraylnPlOUTau7u27+gnfDyvOxlMTZ6eG9nl9Nnz7HfD4xnn96bbvG7/s
RgvfR5NlY7bv682/9Bn/bEz+7/uXH5zPV2Sj5azfi4+cz1dn41TenNiXnM/X
ZEOzb/mDu8wH67OxsXCWygXmi03ZmKVvq7eL+WRzNorWbZgjYb6pkIOwLQop
3sxHlXMwsHfmu+nMV9Vy8OCZ5/oBzGc1c+A/9tWmRr4/qJWD0ZkJfS8yH9bL
weTqyj5ZzJeNczBevOWIA/Np8xzsyb7WaRDzbeRAkG834jnzcesc+Px0G7mV
+bptDr7dmarjwnzeKQfrVeaYqjPfF+TgYl3XZ4WsB3xyYJIz/J4i6wVhDha7
2cV5s56IyoHKGUulq6w3RG2f33Jr21DWI5IcDNnbIzGM9UpeDh4H4nYZ65mC
Nr0GDy6qsd4pykFci5/YifVQcQ5OTr0ybxPrpZIczC2qmvOE9dTpHEwdtP+A
JustWdv1/CPebcd6rLwtHrX/+qSzXqvIwb3zt0ecZT1XnYMR9+y7v2O9V5OD
krOd7TRYD9bn4O7ioyPa68WmHOy/OeOMH+vJ5hxcWXMGq1lvKuSi2mnkhxOs
R5VzsV3pWFM161W1XKw4uSa+hfWsZi6MD3a9OoD1rlYuLBb7/57IelgvF24G
qoudWC8b58LohtPvcNbT5rn43+2SUWtZbyMXhY9S1Era6vH/B2TNa+A=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9e3lczN///ZStECFkb7FEllBEykEIRSHVm0gp7fu+Ts3UTDPTYk3WbClS
2XeSLbJEliwR8ZFsyZb92+/xm9P7n/fjuD3nOed17uve532eO7quAfPdVQUC
QV0rgeD//f///9cw+dpCc/Uho8yg/AeYrKqwMv0xUYnVMOnt27b5l4g1sT/9
ZHL4WmItvDD82GejO7E2XO45a6pPIO4LNcte1w53ItaBzUyFhfx/E5RYD/ob
nqdElBAPRGGQidR1M/Fg7Ol3acvYaGID6HucN73tRDwMXX9X+umaEQ/H6orp
vu37E4/EkepT1cGqxEYofbZl1NQ6UyUejYjypDKXW8RjcHLXxuHHjxGPxZr7
w7XGbic2RllY14gzcmITpG87kWEZQTwOog93Hxx1Ix6PB22CBK3tiE2xoKb8
f30nE0/A3NY/Uz6PIJ6I69JB76P7EZtBnC0YvEeDeBLmFz4d6fd3vBKbIyft
2qvSj8QW+ISHP7Y+J56MDelvHjdVEgMG9xuLyi4rsRD47vDbot1Jjk+Bj97N
N/v3c3wKHLZ4bD66neNTkb9mYmmf9Ryfir6+U8yqZByfhhlV5XavEzg+DQNj
dA5YhnHcEvsqHyx5581xSzxq8zHvkQvHpyOvWjKmowPHp+O0Ys7DOBuOz8Dd
we4nhltyfAY6FqoN7mHG8Zn4lBGza/wYjs/EouNrXqcP5bgVlt/cUd5Ll+NW
8D91Yf59bY7PwlKLxO2lmhyfhYo/1389UeP4bAyzmFyqr8Lx2djRc0PAuh/j
lONzMPZIzHqjRiUWzsHBm27PPtdz3Bofh55v+7SW49Z4IbR6/P4Jx22waa/H
JL37HLdB58VV2tG3OD4Xl01c/b6UcXwuHlvlTsss5fg85DloHbA+zfF5aJvT
eM/gKMdt0aAa90S/WIlhi0F7tZsm7eXf22Jg2MYVIbuUuMQWDzdudb+8lfF2
MOnSMN0km/F2EHn9XXRuDePtML3OpcEtnfF2GHDCPUAvlfHz8Wl0wbifIsbP
x5fhV/fXxzN+Ptas+oLPUYyfj2km51y6hTF+AZbMqUicHcj4BcjYl993gw/j
F2DXlOD9vzwYvwDP210+FOrK+IX49kN2UHUp4xdiYfS1UbudGL8Q4sL0w4vt
Gb8Q6isuXB9kx3h7XNDu3a6VDePtsfNGw5dGK8bbo8t8s2FfLRlvj3kX/M3V
pzB+EY6pBlwZac74RQh+H+fmPoHxixBiOLyowITxi1AbOGd26zGMd4BVzxf3
fUYy3gFvvg/48WIY4x1gFLPQwWsI4x2w/u6r7L/6jHfEP89ZPjt0GO8IT7c/
EQv7Md4RuYkif63ejHdEH33nf897MN4J3/arVZ/uxngnHF8sOL1Lk/FOOJ98
cn62BuOdEJ+6z2lje8b/h6tLZ8n3tGP8f/D5qbmrpDXj/8OtrDTXVyqM/w9+
qq6S7v9MlPGL8erbgnu2v5UYi/G3yKlL1g8lFi5Gx+J81bpvSlyyGN0qrwdP
+8L4JbhVdHBE/ifGL4HmjDKVXh8ZvwRanzVLVr9j/BIszZ4yqUc9450R+7za
eudrxjsj08+hfMIrxjvD8ubItQ9fMN4Zb391lyTVMH4pWqtrSYyfMn4pCo7l
R398zPilzev5tzmHHjJ+KTS+VtclPGD8MoS9N5xmf4/xy5BRetx2bCXjl+GH
sbxD79uMX4ZWkU1B6rcY7wLPpedTVG4osY4LMjsOt1Mt5+e5YGFSr+oOV5XY
xQW75vYw63+Fn+8C/1J34YRLSpzjglt/2l5xvsB8LoiedGiE/LwS17hAt/Lu
g/PnmH85VF3C36ucZf7luH1p6KY5p5l/Oeq3/q/LtpPMvxyxDc9Sfh9n/uVw
b203dsUx5l8OFf8pC+8fYf7l2L4MwxYcZv7lyNvQ88ejg8zvCrVF4e38DzC/
Kx7eWru1YzHzu8LpU4X6sULmd8XNbtPX++1nflec3OG02qiA+V3xY898G8E+
5neFg+2jHtX5zO+Kg7JUiyt5zO+GxncB3c7tYX431HfeXHsxl/ndkL1696+q
3czvBsHHCbm/djG/G9pM2W84gjjHDWqdMm/77WR+N8xWn/PozA7md4PTsfPi
fsSCFQg++rtD2nbmX4F/C5/kdiTGCsz9XSnZnMP8K3DwXuGTScTCFah953zz
/TbmX4Ehn24Ji4hLVuD4ujtdk4hrViA7+M8Wd2KBOwKH5o77j1jHHX8iq98u
I4Y7xLdDr4QTu7hj/esON7cSC93x69Cgfw9a8rs3Pw9Lez1+vxJ3DNrc/nIc
cY07HMxXTK0nFnhg5egDR1e28PeA16Jv7b+18PfAwh+a+uv4vFw8sGjE+6eW
fL5CD5wYf7Z3m5bn74GSSNOie8QlHqjD9aCj1K/GAxs6PzfeQ30FK3HsgmbZ
nhb9V0JzoWvTMc4PrERZkSjzAeePy0pMjFR1asv5JVyJozYibcuW+bcSeRHf
12RyfpashN7JivS3nL81K6Eyfmz5Qs5vgScOYVD76y3z3xOqmmc62B1ifk/4
LLDOqOX74+KJ2KzUBaKjzO+J1LRjPYz4PuZ4YtSEa+vfnGB+T8zWkq0qOsX8
nlhseuRi4hnm98KhHf0/LON6oOMFlT3l5bO4XsALdbmd+07meuLihcMDc7dM
5noj9ILBjPLOc7ge5XghrHr+mOVcr0q8MLTD2UuJXM9qvOAtnycv4Hon8MaO
s/2nP+d6qOONWzFDjw64w/zeUDm+YsfKu8zvDZuO128ev8/8zX+vG6jSjetz
jjfWtROrhHP9LvHGvjCvrOfVzO+Nvn9OKexb1n8fpOgvLrjN/UHHB/AIKbXn
/gEfTNFN2fyc+4uLD87OD1QP4/4j9IGbceDDzu+Z3wc/dg59eoD7V4kPTtvl
1//XyPw+sC70qGz/lfl9MSjT0v/8d+b3xQhZ5ur4n8zvi2kfBL2m/mF+X0yN
PPC4g4D7sy8MtvY/+lhViXN8sTJlQPKBNtyvfbF599PBaWpKXOMLP7Xb0f4d
uP/7IdS2YLl9JyXW8UOU3+IzU7qwHvBDx/6NgWO1lNjFD1dnb3MZ1pP5/XBn
xtagwaxPcvxwrNMQ2RDWLyV+KM92XjWC9U2NHzYtQoBpS/3jD+136zpaDWZ+
f+xe/Gj+kqHM7w/XHMPhYcOZ3x+hb0xEq0cxvz/80gZMO8x6LMcfo++GOjxq
qdf8EXW0W0Fr1nM1zfGFPUeMncT8AUg4eumy+2TmD0CrjEj3zVOZPwDaHmlf
709n/gDkfrF16z6L+QOQMeT9Rgdr5g+A1goH6ZZ5zB+AwZGTe76ez/wBKMS/
McaLmD8Q+pryy2LWu5qBiHrkerpqCb9PINoZiv+OclFio0AY1y4Jl7nx+wVi
benZjnWsr20D8fJgZb6VN79vIA7f6WpS4KfEgYEwNR23rmsQv38g0lxHF8eE
KnFmM55v4PM6gnwCYTh55V77GCUuDoTW0//sLvN8UBKI1uNTp05IUuKKQFz/
IVtWmEy+gci1bZM6iOeNhkBEDN21dauC/INwv1EroVcm+Qeh53UVtfU8v+gE
QWWoRg+tLPIPQtm7G+I1G8k/CDqtro/U4nnINgiH4+Per9tO/kEItrLM1t5N
/kHY7uurvjmP/IOwsJuhlk4B+QehftzW9F1F5B+E1gY3rIceIv8g9GjM1y3k
+a0kCFsOdXs25iT5N3/+r4f2x86QfxDmTD5vb3ae/IPQKkK6/+xF8g/GpcaP
w6bw/KgZDKOg8xtLy8k/GGPFD8um8rxpFIz3M8cIz98h/2BcDfwos+D51DYY
2/b7HDzxkPyDsfy/mefGVJN/MHpHRkbl15B/MBKrF+f1e0n+wXiguNI14zX5
B6NJu3/CH56Xi4Nh/c/1kOcH8g9G4P15YRWfyL85frS3zPgr+QejTffex9c2
kX8wnG+WXGj4Rf4heNClItjqH/mH4JnBc9kmVeV5XicEOzpev/2mjRIbhWAG
zmqMVVdihCBqil2biI5KbBsCR/echCOdldglBLm/nS0/dFXiwBBcyn7dR7cH
+wUhUDg43bLppcSZIeinmmMQ2leJc0IwTU3WuGaAEheHILnfg6YCPSUuCUFB
wgy1c4OUuCIEGhd3frhqoMQ1IYgddyf6hqESN4RAeuh+7NWR7F+EYk+rmktn
RiuxZihCT9kY7DUm/1DU5ByJSB9P/qHwzn0t9Z5I/qHQSG4YbWFO/qGY0arP
bHWQfyik/z7ml08l/1BctDExTJ5O/qFQJL7NM7Ei/1AIT8z+92Q2+YfigPhs
hxj2e4pDseNnTUFnW/IPxeN+YaUb55N/KBp3uIzoa0/+oTg1ZvetNewfNYTi
w2Qnhcp/5B+GeEnOTPcl5B+G3vN2/e/sUvIPQ3CUfF6n5eQfBm1hsNcCN/IP
g9ZKt77p7uTfPH7cxu7sSvIPQ9f1fz/VepF/GOq/aL/560P+YZgj6KTX2Z/8
w2B+pnuqViD5h6Ho/ZAOnYPJPwzbzb+u+xtC/mFYd66mZy37aRVhsD39I+F0
BPmHYc2jr2dkUeQfhs3bDEttYsg/HKdnp8W1iSP/cIzvuOv5gXjyD4f5ennN
fCH5h6Oz2gffukTyD8dGI0F0sIj8w5E1JP5Xg5j8w5FvmvfKLYX8w6E1ACPK
JeQfjmFpKVcGp5J/OFL/mO4NZ/8wJxwfyzLKT8rJPxwOcZP0PivIv/n7BXvu
HpBO/uHotP6QNTLIPxz1gWM17TPJPxztHIPrnFeRfwRu3fS/+d9q8o9A166b
Ts1ZQ/4R8LjyJN9oLflHIOyWYo36OvKPwKNxESH3iW0jMM7ysWUW+6EuEcjd
6NPKOov8mz8vbO6+L8TCCOh/7jdh1Qbyj4BzSF2+bjb5R+ClYPSv3cTFEThy
8eOw/hvJPwIVyavHy4grIvBm+J8B9cQ1EbCwldWabyL/CMw52yEpmVgQiTqN
8l8lxJqRuD9KZtdArBOJCX9E4m6byT8SWiW+64cRIxLvLwSnmhDbRqLTPQsX
Y2KXSPy8+KXfEOLASEx6OfayBrEwEu3DejrXMV9mJAp6j399lDgnEn6T93hF
ERdHYlrAjzejiEsisaJokv+jFv6REF798zuyhX8kOqTP3NKBuCES0zV2LlrN
5ymIwuWynqM1iDWjMOCBoUks9dCJgpPgpc8z6mUUhZm3LjwdR4woxGy4kZVE
vW2jMDgiaXsp54NLFLInv2j7nfMnMAqHPHwqBxALo+D3rHc3c863zCh4fvC5
M5fzMScKBxod+ttzvhZHwUxvUWtbzueSKDywWLx6Mud7RVTzienhfX2+DzVR
WNp4tuY335eGKDjIIs5d4/skiIbtmPqkNL5vmtGwTo0ym873UScaJ3u3+vmJ
76tRNHaXP721hu8zoqEwf3pzWDL5R8PJwFr9GNcDl2gk7H27yjSJ/KOxMON7
TBHXE2E03BW6j/vQH8iMxt+wVRfiuB7lRGOZ18tZ97heFUfj4QdDkV40+Ufj
e9f3YvdI8o/GvPAB7lvDyT8aJfbDJ94IJf9obJG+793I9VQQA0FkQX+NIPKP
weWOus79A8g/BobrAz8M8iP/GJTuGf5Wn+s3YjCowc5Xm+u7bQy82s2Ut2pZ
/2NQOe7x8lcryD8GU0yntz/rSv4xyP6guy2NfkdmDK73DDFbyP0nJwb/vm35
2YX7U3EMljZ5NV12Iv8Y+Mz9ZxvC/a0iBlXSVzo9W/a/GNwfqJp8kPtjQwze
9czaOJ37pyAW7xZMSajg/qoZi+QZ320XzCH/WFTatRt5k/uzUSwa0cNkygzy
j8WGo/2SC6aRfyyK13uba04h/1h89tkU52tB/rEovbLV/Tz9GWEszmw90L3z
BPKPRWiOc6H9OPKPhbY8wnbdWPKPhVtsv343jcg/FnPMj5gIWM9UxGKevP6U
Ieudmlh8XLr/ti3roYZYqI80yg5gvSSIw+jh/zOWsp7SjINImnhlI+stnTiM
zfsUsof1mFEchrksdy5kvYY4bDM02VPEes42DpOWq4ft60b+caj3KK7fTv8o
MA4OtUbD12iQfxySPl5wTmhP/nGQT6/c6dGO/ONwP/C73qzW5B+H/r++/htM
v6kkDgkbzy0T/GX9G4ejS/1X3vvJ+jcOlk+nTcr9zvo3Ds5ue1qFfGH9Gw/z
XgNrzVg/a8bDYsJKgQrra514fDC1SCxl/W0Ujx1Na+VC1ueIR2xjyHQz1u+2
8Wjv/fduI+t7l3jc3RLosqel/o+Hzo9+nZwesf6PR5eZAa3VHrD+j8eD1zVe
hytZ/8ejb1sV96UVrP/j0fmWX9+2N1j/x6NmX+XRfVfJPx7+sW//m3eZ/OPh
cDdy1Cf6YQ3xeDfBavGqc+SfgN4rR7Qxoj+mmQAPhcrCG8fJPwGV67b7ex0h
/wScDn4X0/og+Sdg8bLzO7YWkn8CKoz+qpvuI/8E3NkZV1Wxh/wTINvf3cSL
fpowAfNurZuhwvNiZgI2+14am72F/BPQeaCr/mieN4sTsHxY/0lX15N/Ajrl
b921nOfVigSU9I8W/cwg/wR0vDDu3xqedxsSoPLeymJki/8mhH5sl5VXeV5W
EyLY8sk2d56nNYU4Ffe0U6sEJdYWotjY5NF2nsd1hBhSUjtkaqQSGwgRYnqn
30ue542EuP+p/LmE531TIXR+xmWP8OfzE6JsQ5j3PfYLrIQouNM/OmEln6cQ
Fz+WvjdcocSOQvRoI6l/xH6EixDzhN7rFM5K7ClE0LHp3ab8x+fd/HnRZdIm
9jsihViXH9n70AI+fyEulRe/C7RVYqkQSfu26o+hn5cpxIgvU2q/sd+yQYg5
ld7zzs2gPkL83nxcLp+mxHlCfAzecGoxqJcQOz9MUzWiv3dciNs3zyWpTaR+
QmTvebTs1TglLhNi9TrD05fHUk8hYr5oniwwUuIqIdy0i2KyRlBfIdTbf9ST
0O+rE2LVjLjbMfT7GoTISyzLCxuoxE1CLPMRXAvVpf6J2BOptSiqP/VPxN/C
g36iPtQ/EVNCZoxeo039E7Fl8feSvO7UPxHerfMmXexK/RMxru7LhVedqX8i
ppqNDdeg/2eaCIerAcFm9P+QiG0P/B4E0P+zSoS2eu6FvfT/bBMxasZ0+3f0
/xwTIcgz3GtM/88lET083j4T0f/zTMSPK1e6PaL/F5iI9b0Ou45nfzMyEQN3
zn+zif6fMBE3dn6+0I79UWkiptuu7RTD/mlmIiorq19+pf+3IRFr7Ae6RrL/
mpMIG4HHdtU6Jc5LxCGN2WfWsn9bnAj7ewMqRtYq8fFEZD+t/lzB/m9JInS/
6UyNof9XloicGYZ3RzxR4opEfA2tLa1jf7kqEW/PVQ4uoP9Xk4gR+kO1I+n/
1SXiTNzBQmv6fw2J0Dj9TGUY/b+mRFi0OW+g2eL/JWHcuzYT/11XYrUkdN31
e873a0qsmYShpqtCm8qUWDsJuVesr6qy366ThOSLC5f1YD/eIAmbx3nPGct+
vVESClXebHdiP980CYdGXQlPZb8fzZ9vsba6lH6AVRKyAyLftKH/Z5uEKzrG
++fT/3NMwkjdAWb59BtckjC7s8Fudfp/ns18TlT+DqH/F5iELOGkBXX0MyKT
8PN8lxMe9P+ESTiILIuP9EOkSeizftfnxCLqn4Sxu3e97k//ZEMSXmuuG3q5
xW9JwpFjbcoi6MfkJcFpjPbtsXupfxJSFyXM/0k/53gSCs7EO5XT7ylJguu8
+sZc+kFlSZheMcgwjX5RRRIWhA7sFE8/qSoJDWGee6LoP9UkoVuxqqqQ/lRd
EjTNVxuson/VkISAXpaD9tPvakrCnmt3VO62+G8inFRPudKGWE2ExOAxCVO3
Un8R8sdNGC3bQv1FOHNX8urJZuovwv7KrJ0TiQ1EsEzyD965ifqL8PDkZsee
xKYizNpnsWT9Ruovws+cX0k6xFYiTHnY5s6RbOrf/P3se89dROwoQvgR4S8V
YhcRNnXp8PT4BuovQp9n3X9EEweK0PWuZJ4VcaQIT27frtUhFopgXvnhWGti
qQivn7rd+JxF/UVY8XfyoA/EG0Swm9C3pGU8RwSNdX22tsTniRCl/fZsy+cX
i7D07nndlvzHRejQ4HKp5fuViBB9sltey/cvE+HFuaIrLfwqRDCtXavbwr9K
hCFx+w+2PJ8aEZ7G+Ue0PL86EX6sfeDT8nwbRAheEiJvef5NIrRLdbjdoo9A
jKX9B5maUT81MR7tUTtZTawphk74SVt5i/5irKyJ/zqN80NHjN+ywdvbcf4Y
iHH2QCfr+8RGYmhF6H4o4vwzFSNs/P34tS3+qhhzn4/+KuL8tRLD0u7KzHjO
b1sxrA8d8xVx/juK4fD6oNOaFj9cjC1vv7cq5PvjKUaf2fYulXy/AsUIlQ91
a0X/NFIM4X43gQXfT6EY57aKDEV8f6Vi/Dqz8cEdvt+ZYtgstf4+vOX9F+P6
vJuxq7g+5Iix1+eNk4D+aZ4Y/Qf/TIji+lIsxjj9T89+c/05Lob57QXespb7
CWIYtTXvrMf1q0yMhB3OZy9wfasQY8f4Px4BXP+qxGh76Of3gVwfa8QYr3Fj
2Uuun3ViaPwRKfZzfW0QI7WozEfI9bdJjBTR0/olXJ8FyQi6uvPbVK7faslQ
SFbHjOH6rpkM3ann3Q3pp2onI+VKbc4I+qk6yUgQWGtPoJ9qkIwHF+uP2nB/
MUqG+yHblT7cf0yTsbtTUbfV3J+QjK+bq3af5/5llYxUxdR2P7m/2Saj7ZI2
umaPqH8yvl2qfizm/ujSHF88QucB90/PZBjp/7k3+jn1T4bvhF8v13L/jUzG
Jr0EY8H/qH8yHPqn7gvh/i1NxuiEC0Yfub9nJuNPsWhvMP3VDckYM7X87x/W
BznJ0Ppk1W0V64e8ZPiddrphSH+1OBnJ39W73mT9cTwZ+ct7XI6gv1qSDLUp
728Y0F8tS8ZtYZHGc9Y3FcnYdme0Vw791apkzK/8c8GD/mpNMl6PWaBiTH+1
LhmLnxm0VqO/2pCM2jEji16w/mpKxvuB119e4P0sQQqC4gdL9vH+lloKenbp
F5nN+12aKWj7yTo7rRfrvxSUHuhyXdKX9V8K6nanfJIMYP2Xgt260vo0PdZ/
KQg4dzgrexDrvxRo5vk/3GvA+i8Fb588yThvyPovBd7idxureZ/NNgXnJ8x/
9Hc067/m8aXyEYPor7qkwNj/WYitKev/FKTZL1cIzVj/p8D6WoP9EQvW/ymI
zzUr+sD7d8IUdJh+Lnw4/VVpCvSfX5X58/5eZgruf4u5engO6/8URORe1fw3
l/V/Cvr2irWwob+al4L812OMtvG+YHEKqpPcL3xxZP2fgqYtK+7Z0F8tSYH5
xsXT9i5j/Z8CyRe7enX6qxUpGHB4+B5f+qtVKfB7XLTojhf1b+b7MOHeRPqr
dSkI/6MnyOV9yIYUHK1XPdSN57GmFDzu5H9NRH9VIEGAdrbet2jqL8F2/5ws
b/qrmhJE7E1t8zyR+ktwRHO6lRPPizoSbOtYZFYppf4SiPetOjWX500jCcx7
5e4s53nUVIJF/dbfmsXzKiR4ueFP75bzrJUE61v7Lp/F866tBLs/usdf43nY
sXk8wcPGusVflcD9Y03+TZ6nPSU43HlqgB391UAJ2l35FHmX5/FICeSrF+5w
oL8qlMCx7Y3Lj3iel0owde6Z8870VzMliC+U+tecoP4SuLZel+dKfzVHgowZ
1nNellB/CQrb9B/jTn+1WAL9d0LTV1eovwTvzL9MWEF/tUSCzo4qXV/cpP4S
jBhlvnkp/dUKCZbenHX44T3qL0HR3QcmC+iv1kiQ2bjn9zXeF66ToKuH4iXY
f2mQQC3C++ph3i9uatb7k5lkMPs3Aila52j+XMf+jpoUjRc7/1Vl/0dTikmr
owL82B/SliI6J2/YPfaPdKT4taJbx4n0Vw2kyMi1adhEf9VIiv0N6od/sj9l
KsWFNn2MF9FfhbT5vBVmU0h/1UqKdDujalX6q7ZSDNGUliygv+ooxWXR07s5
Lf6qFHGCM9/f0F/1lMJq2722o9iPC5SiZHfrmgD26yKb//6t3fIC9vOEUuha
NHq+ZL9P2vx9S63u9dRnP06Kw/Z14hmDlXiDFKpv1i4K5P3xHCn611gOXTdc
ifOkeOKp9+TwKPbrpHhbqZh7i/fPj0uR96aXy0sT9u+kGG+e1fDZVInLpNCL
61Dzh/3RCilenz/WSXWyEldJsfahtrOAfmqNFKNW1e1r4v33Oilu/Or/pH4m
+51SeBz9fPM+/dQmKU4NfeZ+uuX+fCr6Xt2UtIn9YLVU7Jw7pF3oAvZDUxHz
5cK96YuUWDsVFvt+VGiy/6yTinc2WY/vLlZig1R0uXOoahX710apMA4v2jeT
/qlpKs69NTb91uKfpuJp/ETXLR7UPxUNE1t1Mm/pp6eirIOOzj322x1Tsetx
YJw7/VKXVHQqHNThA/1Sz1ToHjtX6E9/NDAVJwO6zn1NfzQyFR65lrcc6BcI
UyFW3NYuoZ8gTUXNudQuOvQfMlOxwG5tTgT9iQ2pmHQlYP9l+p85qbjV9/MA
DfqdeakIPjO3Zjb9keLm/LEaDxKk1L/5eci6v99Hv6UkFQNc8zvcoj9Tloo7
Jzz7vmnxM1Nh6Wmn/pN+T1UqRs8pOa1Cv6gmFR0NgnUF9Jvqmp9HqljvK/2o
hubnsT58Xw39rKZUaNQPzSulHyaQ4YhbbetN9OPUZHjSOKfQayv1l6HN8qBV
I3OovwzZPa5sesPff+jI0Orx4FMbd1J/GQpX3a6espv6y3DmU0Dj01zqL4Pf
xG51QXnUX4aiFyaFP/OpvwyrLE8bR+2j/jK4WX71eV9A/WXY/HmjpUMh9Zdh
3qjKoqNF1F+GTROMtnU4QP1lWGZ7oPWig9RfhrnmF+6sO0T9ZXCsxe9rh6m/
DOGXQ0K/HqH+MvzL0BrV/Rj1l8E6bY7OsOPUvznfsAOTjE9QfxlGeM2NGsvf
zxTLUG27pXzIKerfnM85dWiX09RfhouvAlI/EpfJMDhR50XpGeovw2T36mHy
s9Rfhq8lixdbnaP+MozpetHnJ3GdDPfCDy7cXkL9ZVj8Y1xn8/PUX4b1VffW
3iAWyGF/TfJsfin1l6P1xJNvrhNryuGQNK/Q7AL1lyNXd5vBNmIdOTbWhy38
Tmwgh+qoHiMtL1J/OYr+N/5gMrGpHMtuqz09RQw5fNcML/ofsZUccTdP67e9
RP3lyDKeNbE3saMc+7MefNIjdpFjS2PtLB1iTznaBrhM7UocKMcC9yOPm/j5
kXJ8czzf4y6xUI7wD1VfdhJL5bB7ejnCkzhTjrLn5dt1iTc0f59NW8NukW+O
HL9ifL4FEefJ4bPt7hB14mI5OuR/0ljH53m8eXzDvP3diUvkGLCxob2cepTJ
cb1yzvCv1K9CjouGNj0XElfJEdnB/s6eFv3l2NzPdEUD50edHLPbTb47grhB
jsa+g4e5cD41yfGlSz9/CeebQIEXOy/n7eT8VFMgaIpp7WHOX00FxhX8GHyK
81tbgeD1reOPcv7rKFBsdrExl++HgQLPvmhlKo5SfwXsyqYtX8n3yVSBoi8a
weP5vkGB+xE5N3/z/bRSoCQzS3SM76+tApPM/25ZWUz9FXA+ZGOowffdRYGG
e74T8vj7NE8Fru0qum/K9SJQ0fz873c5t5f6K7BuSaefE7neCBXokvZha8Ee
6q+A/qkoTS2uV5kK1IX2XRa0i/or0L6gYNPFHdRfgRA1rwcaXA/zFFhr0qRv
s436K+A+3HNN0hbqr0BF5AjTwpb7CwoYx+gNquD9gzIFCnen+NXxfkGFAt2P
/Bn4net7lQJx/0tf9rtl/VfA0GDX6CbeD6hT4PsM9eJ63gdoUMCz59uPlWnU
X4GRm+63Pdzi/6fBU+94ezn9frU0TPd61MWJfr9mGhYefDWmP/197TR8ePxU
/Ih+vk4angYPHpBOP98gDT9KInpN4P0hozT0q3otf0z/3jQNi7JfpofxPhLS
8Pj4WLN2vK9klYYZZz/lZ9Kvt01Da5VVX7rQr3dMw73tVcZy+vMuacgW1op/
+1L/NJweOeCfO39PGJiG7k9nn71CPz6y+fvYhFfr8r6WsJlvkSAylH68NA0j
V2fln1tG/dPQucQkvZUz9U9DZH+9qeD9sZw0+Mk+PA+j/56XhvAD4bJdC6l/
GixeP3W8bkf9m59f02rv93Opfxqu/7asbmdN/dPwecC7m31mUf80BAVecB5K
v70qDe93WeUZ0W+vScPt5xNvjOZ9u7o0bI7Jfjuc9/Ea0jD/6A49Pd7Xa0rD
gaQ7q7rwPp8gHSoTnjv+or+ulo5JdqVZz+iva6ZjvPZO/7MjqH86Wq148ydr
GPVPR9W0MR6+Q6h/OsYW25aZDaT+6XhtYj29LX9faZqO9juW/S3vR/3TsSj/
u1Zab+qfjrPpB/bO6kn901F+xem5ihb1T8eLrfWPjtBPd0nHgUrZCXf66Z7p
ODNBsa0L/fTAdCTaexedaEv90xH/vazD0lbUPx2694If/OX9T2k6Zug6mmz+
zfNfOkz00qzG8fecG9JhcdnK+Abvl+akY/T42j7L+fvOvHRM9L2r18jzU3E6
wk4e9BW+5fmv+fNXjO7XsY7nv3SYDRnguI7+eVk61K+umNL3Oc9/6fDZ2epP
Dv3zqnQcHalVpE//vCYdu+UXY3bx/m1dOtp2dJDo0z9vSMffkzrfcnh/tykd
4lrJu77Xef7LgGmWakYW7/+qZaB2bHfVLpd4/suARZ2tdyrvD2tnwNt0/jvB
WZ7/MvA78VxBBO8fG2TAJmFmxXuen40y8Pnqthg33l82zUDnpaLKKp6/kYFB
fQ/8tikYh/8DH5kqRw==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 14.352272581890242`}, 
       PlotRange -> {{0., 1000.}, {14.963316239585708`, 27.184189393495025`}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 14.352272581890242`}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {14.963316239585708`, 27.184189393495025`}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(U\\), \\(2\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"Thrust(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711724720452669*^9, 3.711724760398329*^9}, 
   3.711733372633285*^9, 3.711735780440785*^9, 3.711735982438286*^9, 
   3.7117360331068697`*^9, 3.7117695098708878`*^9, 3.711769701397931*^9, 
   3.711976643527371*^9, 3.711976689493754*^9, 3.711977082901428*^9, 
   3.7119771226805563`*^9, 3.711978882987092*^9, 3.711979426055769*^9, 
   3.711990675974564*^9, 3.7119986604515877`*^9, 3.711998862093534*^9, 
   3.711999043747134*^9, 3.711999210319686*^9, 3.712030496261189*^9, 
   3.714930960329535*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{14.870674350659561`, -0.1503260499713473}, {
           15., -0.14552023624750282`}, {16., -0.11081884449973109`}, {
           17., -0.07845105155540871}, {18., -0.04829874848183399}, {
           19., -0.020250583101544317`}, {20., 0.0057986910637859435`}, {21., 
           0.029948803169530525`}, {22., 0.05229448576682186}, {23., 
           0.07292592664884867}, {24., 0.09192915386885658}, {25., 
           0.10938635869701435`}, {26., 0.12537616300628987`}, {27., 
           0.1399738388102764}, {27.233844375157936`, 0.1430787423756648}}], 
          LineBox[CompressedData["
1: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
NlmVhFFlXyebnie3JmEa3z1uqIaC8k9Gc0LjkRtMskEylKHMtp0gM5MhO186
X8Ems5IhKI+rOM0jIxm8IaOW/FGQHTosHvN3xVkyOxmfbO6fbnpK5iSjtnpL
QnqX7ZR/Mk72MOg5cwQ5Pxley0a5GdmQFclYqjP7P91AclkyzA64uQ0WkpUd
r2uNLpq/m1yfjEfmVlXCGrIqGcPuDA5uekNuTcaXKZFOi3sWU/4p6OahNarO
nGyQgrWOIzJ9lpKZKWClhXfpxiGzUjB18KjZFavJSIHdD/vzyeVkhxRoZRwe
uOgOmZ2CS/8GXx75ncxJQXtBwHztATso/xQYTC/Q/WZFzk+BVYOG/M1ysiIF
caKMKc/SyWUpMOf5hjYpyMoUxHgfkjw6R65PQfrV2V8fvCCrUlBcdfPfPc0S
yj8FfRZN+X3TjMxIhd+ikGmXF5ENUuH14MSPYxFkZir+nH0pLJKTWak4omc9
NKmMjFTMzW38ubCB7JCK25flznpfyOxU2EQt9D7bbyfln4oJ/frNDZhG5qWC
kbiQ9cWDnJ+KMPcyh1XJZEUq7s05cunWZnJZKsKzk8qHnSYrU/Hsj9kUxyZy
fSpKUr4HBf0jq1JRFBLqu4K5i/JPxZqCZKvJc8mMNJQ8utr9jS/ZIA1zxjTe
TuKTmWkYfZ554kUxmZUGzeiQqtHnyUhDc+2Dt3hOdkhDTLuj8/iuuyn/NDy7
lvLnvQmZk4btScPb0qzJvDQ06HpOf+RLzk9DcUvlA81MsiIN4ZbbH//aRi5L
Q8LQqIWVZ8jKNHCyy0fNekyuT4NWOi9Z8IusSoNGa5FD/oBSyj8NXs0XD3tP
IzPS8SGnpfSlC9kgHQHMFGvzGDIzHeL162Tj8sisdCza7LLh9T4y0qFrqx/v
UUN2SEfNidVW6S/I7HTY9on+58bYQ/mnw6h8VpNqEJmXjijTc18GTCPnp4P/
1TWA4URWpOPBPT2ngghyWTqY27u/viYkK9NhPKHI4bCCXJ8O01tHlFZVZFU6
tgS8jwy5RW5Nx3+aH9dYtpAZGbA/sz52T7e9lH8GypdNd64cTGZmYNjjR+lB
k8msDJzXirY7tJiMDLweoqNV4Ed2yICTQm+wXhKZnYFVP+LeDM0jczKgVf7h
4cUSMi8D19nMIEYVOT8DtbIrGteukxUZsJ7SPmHsc3JZBkR3JiQZfScrM9Aa
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXeItNdvvibKD1LkF1ekBh+wZwEDFYTKfxfZvgjC+
msOaGw9KP0/cDeVrOGRo/Wisbd0M5Ws5XFVe/nuS+AooX8fBwFZo8t/NU6B8
PQeJk9esrpkU7ofwDRz2FjrrfL06C8o3dBDbv7Yjq2o5lG/kcHUtX846gw1Q
vrHDJl+L9XwSW6B8EwfzC6l6F2u2Q/mmDmFZTPZOmbugfDOH3+dnLxJ4sQfK
N3cIfrju2mfm/VC+hcOETWaSm5MPQPmWDizH09Mt5A5C+VYOT/u7sp23wfjW
DtlTfz4yMzgE5ds4CNu9FJaYAOPbOnQoBob13ITx7RzEDNeeusl/GMq3d9j4
dXPGK9PD+/etru6bFWzv8GmCnt8j28P7Ab0OeUA=
           "]], 
          LineBox[CompressedData["
1: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
sb5n/7xRB8gqTxhBZa6vFU/5Xni1KPnqvXiynhe4i47lS/6S4QXDRf+Zl8Qk
UL4XBpa6jK7qLqJ8L+xeOihNW0bO9sKHPbcP/xmeSPle8Hr20PXBKbLKC4Oe
pL55ayGmfG9w68v/5X8k63njlc3R/q93SyjfG23mRu/NVyRRvjfOfAyKevuL
zPdGy7mpNxqLpJTvDaXtxl0hMTLK98bJixdX5a9OpvzO4w1W9j2kJ6d8H4zw
Lylw+0PW88Ea7m5lz1cplO8D9SHaDkvcUynfB3HL30pd6sl8H/wcsOGKn+MO
yveBZJoibmM9WekD15l3F6i576R8H5R1UywNayazfLH3q/qw3dG7KN8XMQVu
O1dq7aZ8XzjcsPwTnkPm+GKydLrdgAV7KN8XZ36Y7mx5SM72RVuo4vDvwL2U
7wvdjthXAwfvo3xfLDyYPHVQEZnlh7IlrFHPHNIo3w+qePHGlerplO+HFSsn
pc0+R+b4IX3BrjGRzvsp3w+BE/8pbxt4gPL94HmeOyWxgqz0wyptVvduERmU
74dDfh9nLjU8SPn+SHO812tcI1nPH9732XbCQ5mU7w+X25lVC+2zKN8fWmuE
rtp9synfH/0TJ39J9yJn++OGR+6mtCqy0h9Pi4M0u08+RPn+WPvCYX6lmMzi
omzCc2VdI5nNRbTviDWzVuXQ++Hi3MDtmy/lkQ25qDU1m+OvcZjeHxcPTywZ
Dm+yVef429YxE26ROVwMs2hbO2T6kS5zuTCRvJWqy8l8Lp42mP3z32dyKhd3
vrjJ69Ydpflwsbn55rXTCrKCi5P+jW8CBxyj+XExf0+Vs24guZqL5rK/0fn3
ySoulqQnm42afbzLzVycKt6fFLSLzApAWsmGqhPfyOwAqMRmY8s35tL8A6Cr
83CZ8izZMABGKy3WZw/Ko/kHwMatpsY1iGwVAAsf70MDH5A5AVC+2nkmd9YJ
mn8AZl8o1Jmyk8wPwPyhfWrSWsipAZi8vrXkh1U+zT8Ab7YKLU0VZEUAImMi
cxL6F9D8A1Dk+3hukR+5OgBrbbXv1d0mqwLwtay/y9dphTT/AEzfENjwQ0pm
BUJTFjn93QcyOxCmPyrqS1edpPkH4n3JYUteLtkwEHv8B27s2/sUzT8QY1//
Mg90JVsF4lik6GvWNTInEBMsj/xTzlbQ/APxake1PNWEzA9EXpj9i6l+5NRA
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
uf4TMUqy2fjhKeb6T8Qy2w15dceZ6z8RugNyQo5lMdd/IoJ1W21n7WOu/0R8
brylJZAz138iPvXbumEX8/273M5/vyPyhWcUc/0nYnNxoW8v5v5QlIgotcZi
N0/m+k+E1sMTUXJH5vpPxIrulX7R1sz1nwj+WrH5nNXM9Z8IayfXq2fBXP+J
aNs2JvX3XOb6T8SlqQVe/acy138iMnaoq30azVz/iRg3wlF772Dm+hfjh2aZ
pWYf5voXwzTexmntH+b+L4ZDd7W/9i3M/V+MJePOPF7whrn/i7HnZ1v6u1rm
/i+GReTyb9tvMfd/MXb6FqYorjD3fzFyD/4aducMc/8X47VSsPDyUeb+L4br
xeUZMWnM/V+MIA3Fq4FS5v4vxu4zF85GRDP3fzHucMrPnPcne4iR8SJb8K8T
mStG6aIgZeFGMk8M9u1T/byY5x1fjM3zddX+GJHFnfMZUrzCXZ+cKkZMZKlz
3jBymhjL/OX/XWOer9liXOpXknahnXn+i/FRs/ZJ/Efm+S/GutKTa6Y9Z57/
Yoxf301w8jbz/BdjXvChnn1Lmee/GO91bbebnmSe/2I8SG+aaJfJPP87z1cw
+/FaOfP8F3euD5x+joxhnv9i9DvsOuCWL7lZDMsV8dm228htYmhaf5xQvob5
/qcEPaZcGtV/EVldArVTN3stmEpmS+BRVLbRdDhZRwK3ZYNjZ/Yh60lwePOH
9o7/aL2kL4G2ymDRybdkQwmqRspOmdSQjSW4P2b7tbPXyJDgV9X5VxpnmPWf
BJNGrw41zWbWfxLkrZQ2bJcz6z8JHosFO9yimPWfBPUuX1+s9WLWfxIs4S6a
NtyWWf9JcHWH86ObzPqRJ0FCLzXj7bOZ9Z8EfxrC8lR6zPqv8/W5SfwVWsz6
T4LtJ2vYKe20Xk2TYNZ0z3xlIzlbgnks9awnNeRcCb787Wb8tIyskKDbIWtl
2SlykQR7mkSxuzLISgkml1SUrJGQKyVoWPng3OcQcnXn+fHWPhnuTK6VYOYb
ecMnS7JKgp+HnuxavZDcKIHWwJnfd04iN3f+/Yr9TcoHkdskqEsfdfzlX9oP
sJIwZ+cWhzdNZPUkOLI/7K55TGYnYYGHCU9xjayTBJ69z+zQU2S9JHzfvfTL
xANk/STMWDHhfpmIbJiE9zMWsSwCycZJ2LHH/sClbWQkoWp0v2vDV5HNk1AT
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VoVcn4xOhfcPjL/RekljMo7tUJxwpZXckoz6mfNHad8gdybjckHQ7LG1ZLkU
WGpX9NyvIqulQPPI68fzisk6KdiUV2jDySIbp0DF/dVhlXi2PpOC4yO38LkB
ZE4KZn9xHZroQvZKwZ6jJlfGWZO5KQjYN7F/+FwyLwVWg8tGrzQiF6TgTcmZ
0Hu6ZFkKxg7SWvJBg1ydAmnNo75bBpDrUxB4OejLIznW/xSE7j4UsbeL1pNa
UnDIb1+D0jtyZwp2X9nr8OE5WS4Vwpk3/FY1k9VS4Vbnv5Jzm61HpWLaNKek
82x9yjgVG2y5U46fY+v1qVh59sk1w1NkTio0DdKODq8he6UiLHHi8uSDZG4q
OAozvjj8Q+alQtJ1SL28klyQCr89DaPdKsiyVCjED+YLZOTqVKxd/uGg+hZy
fSr6vHxiNLiE3JgKfc6VhKgi1v9U9Nh7Dpu1gfU/Ff1N7PI91rP+p6H06vGU
lrWs/2m4I3COqy9g/U+DyueX2j/yWf/TID7hqpnDjDSYvJqmGcnMSUNZUN3t
KmavNPgf91Kexr6Pm9Z7PzYKlVl7vDQoaLirTVnH+t/7/VF62aXs98nSkH8r
oJHDfn91Gk4tqbq5jPWvPg0DBn3kSzax/qehv8KAFuXNrP9pCNfY9+VyGet/
Gn68OXirYSvrfzruLllc1HcH63865pipBsex8dBJR+PfHqm6e1n/0yEJsxrU
r5r1Px13Jrf5ah9i/U+Hw27OHf//jX86bp5uPd5ay/qfjl+YLcg7zfqfjrAw
z/LAC6z/6djPv7cugl1vsnScW3qgfWsj6386FjwrM/19l/U/HbMrv+kJ2fXb
mI4W60ueRs9Y/9NRmvVA1ucV63860l7s3t/dwfrPQ8SmpNVDP5OVeNh5yzyH
852dDx5yr28ds/8PWZMHs40f1ab0Z/mBh2kvtL2uqpANeFhbVTIieyjLFzyc
OOix0mck2ZSHrPU1M93GsvzBw+43Nh2hBmQrHnZ0vt5fwvIBh4dVn8MvtM4k
u/Awz+6f9EXzWX7hweiL+cw6S3IgDx9HhtraL2f5hgdrdM7ucSQn8CAa3xJV
58HyDw97J8QkF/uSxTwUzmhqzQpl+YiHYdt/QRpDLuaBI/adVZnC8hMP7zmv
uE0Z5EoeuAMzto6SsnzFQ2vrGFH8BnIND8+K7V60bWH5i4eoRaMkgTvJDbze
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
eW9UvMnIh6b/y9fRAQnm/wciYOm1
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQfebIemeGS6YOnybo+T2yPbyfAQzMHK7x1/etn3YI
yjd3aDkn1f/QYx+Ub+FgYc6eVHhwO5Rv6VDOfGDP8ckboXwrhxJlzjVTKpdD
+dYOM2bwJvE/mwHl2zgkaByquVdYAOXbOmx4aags87LPHsK3c1DRf590+vUC
KN/eISYndXNx90oo38FBx1fBVv78Bgi/wcHB6lPa1pYpW6Dyjg4WaQXvPSV2
QOUdHZ48npl2IGY3VN7JgYex30wnZR9U3snhjNPBzKQZB6Dyzg6K5odvRj06
aK9mqfq4Q8/ZQercgur0gEP2AHbtXZE=
           "]], 
          LineBox[CompressedData["
1:eJw123lcTO37B/CRLXv2ZMuWniJZC5UPWZItinamPa3TvtfM1EwzzVKUhDC2
hJAsZctISERlS6SSJUuUNYTv/H5d5/nD83q/prv7fOY6czrnvq8Z5xq4zkON
xWLt7Mpi/d//554oSjOvsYbWXUWMl1XJAtb//2eDifqTl03uTYYNfjVGpGru
vNpprg22jhg1y16frLRBVYG2/6hiJY1fj1UzwnakrSNjPcyyGquKq67Q+PW4
P6Con5MaWbkes79ki+cZFdP4DRjVNlOSzrlM4zdgwqA4q6wTl2j8Blwd6O4R
3HaRxm+Ac8vHdvO5ZJYt9qbcnK4rvEDjbXFL25Q/s+Y8jbdFmnTf75BpZKUt
8nt2KNokRTTeDrUdc8+faCmk8XbQOtptXK4NmWuHYpte2Q+V52i8HSy32+no
zSCz7OG0LXVJRu5ZGm+P0oAZDn8nkLn28BO4tK0+eIbG28M1gjV8839klgMO
u8blTjl9msY7YNd/frnhC8lcB/wO+Ld13IMCGu+AlI9Rp7v7klmO6H+2MPpn
dzIcYdw9/1HVwVM03hG6B36luC4jKx3xMGxtSnxLPo13gsP5PVbtmWQ4Qc35
vOl+czLXCZnaTg27X5+k8U4Q1TxdcGAFmeWMaxd2tXacPUHjnVFy73Dj+klk
rjN6HI20cNpxnMY749LRT8tLBpJZG3Es9EO2mTyPxm9E0fk9E2X9ydyNGHWu
Fy9w6zEavxG1vmfTj48gszbB6cqj70MPHqXxm/Axs8k9fjqZuwm+eyv6l149
QuM3oeetlue3bcgsNj6uHX6Y/y6309pszDulZlzHJ4ONP397utSMJrPZWN0t
+1HkxcP0+9nY9gz/yh3JCjZOR3YcevE3h+ZjY52TfGvtQXIDG6ZWop4PVpFZ
LjBpWjr5+89DNL8LqpZUwv8IGS547uvWw8eJzHZB/7UT8rUHk7ku0PgwrF9Z
xUGa3wU1rW8FWVKy0gVBWpeH3F5DbnDBs9kPZ2cNJ7Nc4aev83DOywM0vyuE
a8eYPj1LhiscVlf1Picls12RdFR9yhdvMtcVic1B74ssyQpX2J9gDZg8g6x0
xZzfln03jCU3uGL7Br8NGwaRWW4YeTiobFofZn43ZE8vNWjsxczvhotGvLZN
/Zn53dAYMr1xuyYzvxv0Xq3S8dVl5nfDzvK31gWmzPxuGLhvb7aJHTO/G4Z9
DdKtjGDmd0dA5qwUvWxmfnfsH8hZ2+U6M787pk3jnlP7zMzvjrIGM+dH4+n9
47rj1/dnemNsmfffHbJoln6EnHn/3VH0bCk3uox5/90xIOyPY3E3qh/LA/Zn
A38+WsTU3wPNN3dl2fKZ+nvgQvTN0PslTP09sOHPwdPPu9L5w/XA3+m3lg9Y
QlZ4YMCeu1V/BMz554H3DVXWS28w558HLl8z/C3qTucryxM63PnnfczJ2p54
8yb0/rYEMjwxp/in04XzZLYnONGBO+VtzPnvibWe163u6dDnQ+GJjxpVfxfY
k5We6DX/sdoxEbnBEycHC/Maz5BZXohIuGxyqY75/Hnh5fO1D0Z0pc8nvPDV
aIl1w0Qy2wt7i1l6HYvIXC8cSOo7hu1MVngBmsO7dQ9lPu9euNK6j/NWSG7w
grXc0GVgJvP594b36rX1gn1kbW/k3hu11+YIM783eO0OO1OPM/N7w1Cn5cjK
E8z83uCGLhtz6BgzvzeW27janT3EzO+Nih7P3LKzmfm9sfOlVXpMGjP/ZsQF
p40N5zHzb8aka8vK8wOZ+Tfje9uNpLWOzPybUdwye2TCYmb+zRhWLXrJ1mfm
3wwfte0RYzSY+TejtHqDR/1n5v3fDItj4e3l95n33wdzhjr/6nmaef99MHsf
J+5SGnP988HbRRfz+vkz1z8fFKy4pBhrQeb6IEJv7dyh45n6+6B2E6djwG86
P5Q+CLS59HPafXKDD56tjCxIP8qcf76YEl3X3Y7HnH++UO6LGpdly5x/vuj3
mB3mP5U5/3wR3dJ27JMac/75wtO766FZNcz574vpZaNDrY4z578vMtp3uazn
M+e/L3A39KO1LXP99cNEb99ahylkbT88W8GZEtGFDD/Y+/QzPfOI+fz5IXqK
uGRkHnP99YOiX97zszyywg8mOm+nim3JSj+kZd14vHMqucEPLxqWKj52ZT7/
/sj2W/xLWEvXB21/XB/pouVxigx/1C780FssIrP9EXf70pW2Tcz1xx/brl3Q
223EXH/8UXbBz0o0gLn++KO/+Rmnk2+Y658/HF56F/ZTMte/AKSJmjT3ZDHX
vwBM+bR4j0MQc/0LwNLrvnUmzPWdHYAxvYTtphOY628AakPHndrQsZ/mD8D+
pvPRCQ/JygBMc8yW5p8gNwTgwdapXxqTyaxAzDywSdHHhawdiI7VwphJ88gI
xBCDaZzJg8nsQPxtsYzt9WEfzR8I5Wn7y9dKyYpAPGddiV29m6wMRP74ifP3
h5EbAlEu/nGhcBWZxcEcp5ZeoklkDQ4sZ+8W9/2joOPhAOPH/jB7QDbkwO59
VdCIY2RwUFIxkpfJI1txoC60H3HKlszmYMi/u3vdp5I5HKwMr2nJUyNzOZh2
e1NO35N7O53Ggem12wZPbckKlcdofrvyb0+n8zn4ONrN51wOWak6vnMjPl1Y
Sa7kQGvU6Mrytt2Ul4MvJfJFL7eRWznQ7mO7scdcMisIU4yOD5/+NJvyB2HE
E4GRRyxZOwiW/ftZHxxFNgyCaeOaktaLuyh/EAa/m5S5yoFsFYS4FmtZ8Y+d
lD8IPb+s62WRQeYEwdHNRe3TNDI3CB+KXX4Xle+g/EFIWGH57Zg7WRGE/ybK
Xe/+yaL8QRiTt0JrciZZqTq+C5ErLk8lVwbhsqYFJ6t0O+UPgnjGzoVKB3Jr
EDz+FB01ac2k/MHQt/W8PFRA1ghGv3KHHOsRZO1gLOZv2P83bxvlD0bNgoAv
Y0BGMDYGOz++VJ1B+YPx4LtefIM7mR0Mre65XbZ+T6f8wTjpfsD5STKZGwwP
Xo13sSY5LRgNQXl3LY5spfzBqB+5qxd3Ljk/GF6y7Rt9b22h/MGwTR30ZKA9
uTIYzyVly6Kb0yh/MLKDrOYdiyC3BuOYlee/oz3IrBCkuRxc9k8vlfKHQPHy
V5OzhZzyh+CbcMrLWA8Z5Q9BbkfoQ0++lPKHoKsTSiftlVD+EBxUjF9w7WIK
5Q8B+x7L0aJGTPlDcLtDv/DyVxHlD4FWFylffyA5LQSiG3XcHVOTKX8ITOrn
aQywFFJ+1evHjxmkewoofwgsugRzpyQmUX6VKxaub9ybSPlDEFI6+kThJT7l
D8ELSceis094lD8UzmMOJtd/51L+UIweNenU/CFk7VAUVd8N2e0WT/lDkfNi
3515e2MpfygaAkvS7J5GU/5QPBNcEP4bHkX5QzGvetVo4/URlD8UJmy1oN7p
YZQ/FIVKG6v4qhDKH4rht08u2KURTPlDcaOme6y3FYfyh2Ll/Fe/nozzp/yh
KLXf27rx4GbKHwqjruLLfrqelD8UK86Zlgw44Ur5Q3F3yJpzh302Uv4wqAW1
XhXF2lL+MCwai1U1W6wofxjS7l6tX7/enPKHwdB9Ufg+Yx3KH4YzQcVjPd0M
r3TmD8O8hODSEe+WdJodBgsTnAirWNtpThheDqis77bfrtPcMMh16tPzgjd1
Oi0M0WN69M4f69ZpRRiWuOu19Ery7HR+GJbnzLu18fXmTitVr58v6Hd0qX+n
K8Mw0+RBY8g6TqcbwuD/4+zSFFZwp1vDMJFdX515PKTTrHC8Wv4mIMs+rNMa
4bCNKlgl7xbRae1w7BcNex9xIrLThuE4zfrXa71tdKcRjuzaXwWT/sVQ/nB0
q9k0/d2hOMofjkWFMQMPrEig/OG4v+m0XDeSS/nDwclZePzXch7lD8e507/5
FiP5lD8c8eoVZYM+kPPD8bUcVg6XEil/OLz3xXfRliZR/nB0DD7xxN1RQPnD
UZlV0PyfnpDyh2PJWb81nHYyKwLhPzNM595IpvwR0Oia80mQLqL8Ech4U5Vn
yxZT/ghUelaXnpySQvkjkDd8gDy1nWwVgZMLZrm1X5NQ/ghkXbLc914upfwR
4GedO+RjL6P8ERhU1fNO+AQ55Y+AYKON38AWsiIC7V5Xa+afS6X8Edj8fsSJ
mAVplD8CtTe7Zu8/QK6MgM0Tm7XpPbdQ/ghkLy93Xe1Lbo1Aq0Gz84O7ZFYk
/EPnl02asZXyR2Lcqt1jzLeRtSMR/n3dgyntZMNIbPxRuK7JIZ3yR8K9eWW7
52WyVSSyeq/TLBqbQfkj8Uqy+NcjHpkTiX+Js55cayJzI2HWKGyKX7KN8kci
0DlhnvphsiISnLk32japZ1L+SMQsMRkg3ExWRoI/8FRKdDm5MhKCvamrTPW3
U/5I6HwunnFXQm6NxOvQlB5TP5BZUdi7ZaPQfmUW5Y8C7OvZ1nlk7SiUa12Y
rdV3B+WPwsSRJduO+5IRBX7bW7V+t8lWUXDTXdFqpLeT8kfhXty6kqliMicK
/rq37ra8IXNVr78Z4hyxdBflj8KofuY5tw6SFVEYW7jmYZNaNuVXHc+NlT2v
s8nKKDy6fH6FXzG5MgqT6vcerBm5m/JHYdWE9z16RZFbozAgrdCh4yGZFY1R
3WNiTs3YQ/mjcbp/uPHkVLJ2NE5Yt9g4vScbRmPLgyjRmmV7KX80CjK9Ev7t
J1tFIyGnrdbnL5kdjWs/72mWTVFQ/mgsWXenp5EDmRuNPcLwGF4yOS0aNl5f
TuacISuiYe914tmhRnJ+NPKNYmbF999H+aMxRKP4lcF8cmU0ZiyWaxV6kRui
0cWnrn1oBrk1Grnp8v2WSjIrBtn9c2bbfCBrxGCpyObOdM39lD8Gn87/F/fC
nGwYg+LacY4egWTEQDviatj5nWSrGNysNnxSd53MjsHROdbyqlYyJwZzBtXt
TB95gPLHwESL3WXCUnJaDAr6+FyN55AVMXCzT318aCc5Pwae/0JMt5eSlTGo
yXz5du1HcmUMjCVNlQ+GH6T8MfjhcbhpzEJyawzmPizUmOZDZsVCh/fOvFs6
WSMWdxDsufsiWTsW2+6/3fiziWwYC2uHdQOH9z1E+WOxpd9/m77NJFvF4t0h
98npjmR2LFh1cUs/8cmcWIT25mWqHyVzY7GoWv1TXSU5LRZ3e6+aFPCDrIhF
9qyZfYtG51D+WKj/XBR6wZysjMWsJXf0QzeTK2PxwuTp3yY5uSEW7ZHWhepn
yK2q41nwfVRjDZkVhzLN0G++f8gacdjcEt8td9xhyh+H6qbaPhlLyIZxsPvB
uW2wmYw4sKZ7dYmQkq3iEMSa5eN7ksyOg8jmorJ3NZkTBzWBd7H1VzI3DvJe
q0YuGZZL+eNU17O58jojsiIOg1qa7oy0J+erjsdWXfo3iqyMQ2nP7QlJO8mV
cVijvOmQd4HcEIcN92wqQ2vJrXHYvn/f1mc/yax4uPSpt36heYTyxyOr0fxG
khFZOx737s7NLllPNoxHW6BUtDOEjHi8frPPrM8WslU8MtIPBw8+QWbHI6TX
gyenysmceIwZkKH36jWZG4/qETdH5akdpfzx8ND5ubn7GLIiHr9W7a34ZEzO
j4fWs+XdfazJynh09PlcGexProwHVzLqi3oyuSEe1+2nTddXkFtVeUXZ1jVF
ZFYC2mV6OgOqyBoJiCzVibzbTNZOQOPSI6OGso5R/gTwnO+8axxGRgI2GLy/
PHMq2Ur1etijsF7mZHYCspyG/3CxI3MS4BKspW/iT+YmINogkrWdR05LQEXX
0b5B28iKBIiP893Lc8n5CfC58Oq94iJZmYDp9hE9vlaQKxNwaqn4Skk9uSEB
q+8pdfu2kVsTcPjdAod7XfIoPxcGxfeD+wwiq3PhenZY1pVxZA0uQq7t/f7O
kKzJhVfTqBLpArI2F3svx80+uIqsy8Vunf7pho5kQy7sXqVPnO5NNlZ5E2f+
oVAyuEgZd9JQyiVbcOHrMMnjlYRsxcUVO/7C/Eyyncr5bnM+KMhs1fFc3Xgp
6yjZm4sg6XCbs6fJHC52XV4sXHiJHMlFVMX5JpNSMpeLOyHB3Q/fJotUx1Mt
kSZUk9NUxzPJZvyNGnIWF0vfLoyMfk5WcBFr921ZdhM5l4uqkOnW+s3kfC78
rz5xm/yBXMSF7ZEPK9I+kZVc1O7gvPL4TC7jovtizqDcr+RKLs6++nBpw3dy
DRfGZ+48CvpBbuAi3bfK/ifjZi7eOMYsa2Hcqprfl3VkFeN2Lq5Zz0rVYn4f
i4eubsGDbJj51HmoNRGt+9XG1J+H77F7wvsxx6vJQ/iTkcdl75n68/Dw+xb9
mDdM/Xm422uPwaMXTP15iP9V+XNPHVN/1evxWx4/fMzUX/X7cn9pxlQx9eeh
7+w7Q1PLmfrzIJmyYMqga0z9eRBs/qjsdpGpPw8JmUVmXgVM/XkoPbJ32Lwj
TP15OL/78JW4vUz9ebBpu3xuxjam/jzc6MiIt09h6s/D4eWCvZ/jmfrzkDIv
5PDfYKb+PPRxzv0v3pOpPw8/E88VB9kz9efh3LdN3WpXMPXngZPsv7vQlKk/
D28kGdP7TGPqz0NjV7b/w7FM/XlYPLOr2nANpv48bNq3/FDlP/r81vAwbkTg
wK6fmM83D0sdNbqfrCM38zCt969FD28zn3ce7rSM2Rp+ntzOg96Q0MvpOWQW
H8XPH6ZPTSer8+F//d2bxQlkDT7Sigen1fqQNfkI32Pm+Wk9WZuPz871y5JA
1uVjZf/qoTv1mOslHxH1RmemDyEb86G1OKj3yj90fQUfBl2/qL17Rbbgo/qv
uaTvXbIVH/OKq9PPnCXb8TEx/uOApmwymw+biOPfshLJ3nw0FFaZPt5M5vBh
ObG0ac8aciQfrnP9X7XOInP5uG4xw/zuCLKIjx7znv0z+kt/n9L4eDyWrz3t
BTlLld9AkHfmOlmhmn+2//FbueRcPtpnNBoESsj5fOjlZpvl+JOL+Kr7O5sP
gWvISj6GVRYsrzAkl/Ex38zM58pAciUfRQ/Wui37TH+va/iYFKKx0rOa+fvO
h+2TNaajC8jNfGzwyFzrv4X5e8/HmD9/D9pyyO18eMearK9bzfz9T4TefgHv
3xSyeiKOPk+xvNKbrJGIb6Pdq0c30/2KZiJYqdtMRl1n7o8SIR/09fjFfWTd
RJhrHl35J465X0pEre1wvLAnGyciK+xFvu9s5v4pEasnPirbqUG2SIRr3scC
znu6H7NKxK+UObs+XifbJcLd6MGJoQoyOxFqbz6PfBNF9k5E9tySge7WZE4i
on28lbIp5MhEDH37zc6jO5mbiEx7n34f6uh+U5SItCfbNSacY+5HVceTNDOz
j5yclYje2merczyY+9NEmMza9PubCTk3EVc/6C39NZicrxpfdPftmXd0/1yU
CN+VB0dPvkpWqt7vX3kj1m0nl6nqsUgyzMifXJmI/X99Vj1eRK5JRER17/aZ
msz9fSJG+h6xWt1C9//NiTBqUts6uYTcqsqjWPRDmUluT8T2o6xLI33JrCRE
6MwcNXcBWT0JOeFTbbQGkzWS8Hh2qkL5mp5fNJPg0x1mUy8wz0dJKP632cdF
RtZNgrG9l+tGNvO8lARh2FW3STPJxknw/jo2r7A78/yUBLOHq6OG1dDzl0US
Lg0d2cv8KNkqCRpTvXaYxZLtkrBR1MO792oyOwlOx64VHB5L9lYdb6V14fA2
5nlT9fMHlp52LCFHJqH97d+m0HTm+TMJY9LyhO7uZFESXonm1ujPZp5HkxBs
s3Tone7krCQ0iwy+SvPo+VaRBJFIV2C8ipybhJmjXWx2t9Dzcn4Set+rfHxZ
Ri5Kwno3n6TsqWRlEr6f/1Qxv4Kex8uSwKlu1tnjR65Mwt/TO1g3+pBrVON7
3Cs/e5Se9xuS0DDl5pfA5eTmJPRVTm/+/obWD1qT8Dr176BVQnJ7EqZ5WdaF
TiSzBIiateIEp4TWI9QF2O1o8H4Rm6whwNiu3763/KH1DU0BNtRGzgjdRdYW
gP91SsdjY7KuAHtnjc8f+YjWTwwFKDpWfnhhCNlYgH5ef+au1CBDgFtfb14w
PU7rMRYCzJlsE6NpSbYSYEHGi1vPX9P6jp0A4UJh29ZEMluAj3VT5hlpk70F
qMsIa664ROtHHAFWfxGb2tuTIwUI0dKKePqNWX8SYLy33r0NW8kiAfytu8RW
GJDTBAhqHZK/8Datb2UJ4OVUveOsF1khwCvX/W763ci5AkQ/VM48pKD1snwB
urWNnDLJlFwkwIk583yOP6H1N6UAvmP/64lwcpkAv1och9cPIlcKoJ4nPSo9
Set7Naq8Grm3LVeSGwQweOrVxaia1gebBTC8vHFbl77kVgH+feuw/LmE1hPb
BfDrv2vAeC6tP7KECDj553rCBVqfVBei5/ERS4d9o/VLDSGMhlc6vZ1G1hRi
mMef2x0+tN6pLYTmnF/LbXJofVRXiC7HFLwvjbR+aijEZD39Qc9Hk42F0HGu
lQ93oPVWCDFa8SL+QCatx1oI8Tre3llwn9ZvrVQ/f+V5llKDbCdE7ZLt6Xar
ab2XLUT1YrUDVlJaD/YWYujscwPyymm9mKN6vTp+aEAvcqQQST/evNhhQevN
XCFOB3numCGi9WiREDYXe+0MT6P16jQhNhqfUw8YGE/1F8K64D1nbXos1V+I
LPmKIzrDaP07V4iKLa1+X3ZEUf2FeMQycbw8htbPi4SY8Vb2Q3wwnOovRHvW
5CMb9Wn9vUwI1b8XcZrW5ytV43dlOs42ofX7GtX7U/0ye+ENZn1fiBvm05of
7A+g+guhzVscsvmiL9VfiNWvb621fORN9RfC0q5Fyf3iQfVPhnR532tDB9N+
g3oykt6XaA+azab6J6Nv9Kl7HQUOVP9kfF2o/vg6az3VPxlpE6sGjj28muqf
DItpQvP7G8yp/smo3B+5VzaO9keMk8Fd8MVwie2IBZ31Twb75rgKkyKTTlsk
Y/GUoQeK+cs7baX6fQ6XTGzXrOu0XTJ6c5N+vH1M+zXsZKgvi//Z29G5097J
KOnmM9zWz6XTnGQcPHHht5uue6cjk8FyTU/PaaT9IW4yzEYv5o/Iov0jkWq+
IZcPFq7w63Sa6ueDKzViOwI6nZWM8eN3957+kPajFMn4a3o2u0CP9qtyk+HR
03GPMp72s/KT8fL9uj72VaGdLkrGvOSBv6PGh3damQzzst2KccG0P1aWjP5L
+JarlZGdrkzGk4xlrn/70v5aTTLeveD4GdrFdLohGd1CndSb9tF+XHMyotVq
Pg15F9fp1mR0MXrxvdQwodPtyegx9kb3n/Nof48lQq8u1TsrnpHVRar7A93b
9XG0P6ghwp0RfWZNG0P7h5oilL6fnHDxMllbhBaLUNckJ9pv1BWhKmCAQvyL
bCgCW82gx+3ttD9pLMLEossBFrNo/xIiPHgfc6VLJdlChDEmKW+/+9B+p5Vq
vgf8t5O7036onQia66fczNhDZotQsH3ZNlMj2j/1FmH/Kd+g8ffIHBG+Ct8m
mnvS/mukCCuHxv1TdJC5IryevGjc/K20XysSYV6jo+GgybSfmyaC+4K2OJ2L
5CwRuPceukeupv1fhQjj18YsV28k54rA18/d8SiY9ovzRUjvML/T1JX2k4tU
r9+e62KYQVaKkHZkTuOlCbT/XKY63jdBdeICcqUIWzfd+rFCm/ara0QQ38p7
9sWT2d8WYZDtgs8mx8nNIvy3wHLL5C/MfrcIFePXDDtjTPvj7SIk/BA0vogj
s8TY8/n0hjMlZHUxPgZq1un2pP12DTEu+lvVYwVZU4yTi4xvd8jJ2mI861M7
0LmarCuGuP+Sya5DaT/fUAyrUzx+XzuysRiefQN2O+0kQ4z1e/d8XfeMbCHG
Cv91PVtHM/0EYii/rbKdtYlsJ8a5JUXe2gqmv0CMIexhJWcayN5iHFRqfWjT
pv4EjhiWz7ODatjkSDHUNnjXeyvIXDEyU+eXHqgni8TY/XJnvngM9T+kiRE/
/tKckc7kLDE0xgW8s9tFVojRPuov2/wJOVeMHlWa058Oo36LfDE2FZ/7rG1D
LhJDtuq32dAtZKUYZ90n5BdVkMvEuH/eo7FPb6afQ4yJvZ8EDFhKrhHD76fD
t2s8coMYfYPiB+ldJjeLUf/Vy31RO7lVDEjOivvNpH6SdjFOlXHGSf3JrBR4
Z7aUFx8mq6egatqhSTmNZI0USHUWVC0aSf0qmilgjbD332ZD1k6B/464HXtk
ZN0UpET3/LbxBtkwBZVDhox9/JdsnIJood25nkZM/0wK7jZOsG8LIFukoL6P
/qGMHKafJgX7H6cZfa4j26UgOeNUXu+h1I/DToFh43jF8xVk7xTk12/NC+CT
OSlYmVXoe7GIHJkC2VeD8OsfydwUhPaOcpNNpH4gUQrCbz28NdiBnJaC1TqG
Zvap5CzV7/umYbOxlKxIwW3TlN0TfpJzU5Cur3nsyFSmXykFL/7b3qfNhVyU
guxuuit/bWP6l1TzfRjffv0WuSwFPyb8ybL5w/QzpeDoo0XncgypH6pGVY8F
nIeX3MgNKbC0bonankluTsHA2T8mGt0it6bgjl/K+uzf5PYUhDTrlzYNo/4r
lgTYdX/Xs2lkdQl+JR1rKbIga0igVHf6GulC1pQgWGT+dlQ00x8mQd8u/t0O
bSXrqsZfF8UOZPrDDCW4EfRc6HqNbCyBwaFVtllPmf4xCTzfLdA+/YVsIYGO
ZN+g032oH81KArM/T52zJpDtJOB6lU9zm09mS3Dh+MUzg63J3hKs3L5h+FEf
MkeCbjonuDp8cqQESXqTNMU7mP45CbSu+netzieLJAi3Enl2KSOnSVAsP+k2
vJ6cJYFaiMvIId+ZfjsJutatzPvRl/rzciXosdtqZskEcr4Ec8eH3w5h+vmK
JPDBK1nftUx/oAQR+q+3SL3IZRJ8yHj44UscuVKCyYUTChZlkGsk+Bhq+SXy
KNNPKIHrvdtXMpXkZgmWnpo8KfsRuVWCDs8GA/EHcrsEceXur53VmP5HKeLd
JlhrMf3k6lLk3PSJLp5K1pBiQ3zsJktzsqbq9cSorsVMP7m2FCJHL48RAWRd
KVbr6/CdEsmGUnx39LVJZvorjaXIflL6YMdxpr9SCueyjJ/pJWQLKdIPqhWG
PSZbqcZH9Ppn9oFsJ4X5WM+rn1hMP6gUV9N2vk8eSvaWYvzET9499cgcKYbE
e4wPMCNHSuGQW/z34jqmf1SKmNKoF62eZJEU/QNKT/aNIadJYZK/ZemAVHKW
FDYvopLa9zP9plKYDXywuOwcOVeKj6cOsuPLyflSPHi894TWc3KRFK9eG3Td
3cb0p0pRKXMz7N6d+mHLpAjf2rWHtSa5UopYy4S1Qn1yjRTNmt/q9pgx/bRS
vPsxIzR7LblZit8tZ2vj3cmtqnwzDz1cEkFul2Lxtac6bWKm/1YGYUODjJtN
VpfBvdvHm19OkDVkGC9pTbW8StaUoeO2cE/SfaZfX4aWuT2P7ntF1pUhPzzK
c98PsqEMf8sOChJ7UT+xsQzHSvsULhvJ9BfLVM+jbw+3MP3HFjLU5Jp1DTMj
W8ngNPBeUN0asp0M/qsm7NRxIbNl8LbZqm0VTPaWIV3T7LB9Ipkjw+oYrbuL
MsiRMkyXf5/R5xDz/QEZAm1CgwrOkkUyeK4ZNcGY+b5AmgyLM+3rdz0iZ8lw
+HDs/LrXTL+1DLfelZX//k7OlWFAWviYHz2oPztfBocZBdfvDiMXyeAz6NQq
vg7TH67K73Js4cA55DIZDG691ItZQq6UQau8KO2KDblGhld3drXXuTH95DKM
zp30+mEwuVkG07fDn+Yw/eStMoxh+9hapZHbZYiJtXxStYfpP5djUJ//6vSO
k9XlGLzhep0D8/0eDTmSuhvauNwia8rxwexJoeljpl9dDmtRZvynl2RdOeZ0
nBgV/plsKEft+Rfdqv6RjeXwqo/I/deX6a9Xzbd6cUQXLbKFHBlzC+ofMt+n
sJJD+vjx6tiZZDs5HuwOM/y6gOnHl6PcvNcnk5Vkbzm2Hb//Zb0dmSNHwdKW
HDN3cqQc7LsWgd8Dmf59OVhrrhfExpBFcjybZPSoUkhOk2PuumjTz1vIWXJs
94hc0ZDN9PvLccNtnuvOw+RcOSzGtr0YW0DOl2N9bl8DziVykRxOBQsPpNxg
vh8ix82t2/YFVJLL5NBoCk8eWUuulONUlysFaU3kGjmO9qzgVnxgvs8gR25F
yuqqb+RmOfRuJUbu+ktulWPE7bcO+j3p+xDtclztVrCWO4D5/kUq1n7OKNox
nKyeiq9LDN6HjyVrpCKgvWPx8MlkzVR8ZyWMizZgvq+RikMT5z/bM5usm4px
dpWVSSZkw1Qcn9/PUd+cbJwKj8nfHm1Zzny/IxUVR54pCtccWfA/MTTyTQ==

           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
xxqK7457ecPrdhrOovjuUH9S2PB1tsm89vjuSO79NHNzxZp2C9yxJavhz2wr
x3bnuqPMRy4MtfBot9IdZy3q1Tg8/3ar3NHo2NG7AkHtVvNAaN653uefhLab
6wF5qYXtiNjIdsMDiU19uIMnxlJ8Dzg8f51WVy+g+B4QnNZaaHxHRPE9sO9R
/2LRyQSK74EDdxJ0b+cmUnwPcJy+ftBKk1J8T3yrdOzmlyCn+J6wTNyuWRyT
TPE90Vv8gvMiSkHxPbHnaH6837w0iu8Jj4KmTksXplN8TzjVdg/2W7qJ4nvi
T5hX30rLzRTfEy9OzLxjar+F4ntha8ci1+seGRTfC7cUSi2jsK0U3wt1xn0/
uUm2UXwvOCjSbGZvz6T4XpgbO18gP7yd4ntBxe+vO/5iFsX3QsEQq2O1D7Mp
vhdOOzYbbfvMzg/eKHXXSW3tvIvie6Pfo3WhdcNzKL439iW8vJU8NJfie2P6
g4q6gn1kgTeWHlPPKDDMo/jeUBUf7e91nqz0hokkLOz60nyK7w3lnB7X9t4n
q/ng8FYbjUcbdlN8H9wcP2WXcS0ZPjh/U/FvN38PxfdB9fseC743kgU+WCDK
Gvk3Zi/F94FTjbpmVsd9FN8Hn6WT9u8Rk1U+EIdt4v/sup/i+2LlkQZfp0Qy
1xeVfRxHlnei8xZ8YXazQ2lrLJnni0G/Zqx700gW+CLrS+skK78DFN8XQ2wN
jui8Iit90afqdRlWH6T4vrinUPwSXCSr+WFNgEt2hd4hiu+HAldOa8sWMvzQ
p28HabdmMq/Nuy1fVK4/TPH9UDtfv/+MUnKuH0am1xRNH/gfxfdDx566H0t9
yCo/lB8cfuCkkqzmD4/vJ3NH9jtC8f3h1nrL/YsDGf5IjTsj0tpP5vkjRqTr
f+QTWeAPpynZh3L0Cym+Pz5XTTzT4ENW+uNp2dexZ/aTVf644XwjpPE5WY2P
svFdMu27F7Wbw0fip6Ou0lFkLh97p++4o25MNuCjaXzqj9oVZLSN+9QuNOKR
Lfg4NDko7U8AmceHTtTNr8tEZD4fPoe8i6emkwV8DDnUxfbaLnIaH6Lox8Ga
h8i5fMT8Wnlg1klyER+B5UtkC5RkJR/NWwZJF1eQq/iw8/r3ct0dsoqPZ+bm
CVuryfV8KGbq/+z/gqwWgJsT66e+f8PmH4BKi9H7J35g8w/A0NS1v5q+sPkH
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
gG7BlADKfyr65XNnlT7zv/A/t77O2Q==
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.002777777777777778], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1utv/VlC1shAWkX+rQo7sk4G9u7naOnak/UzsP3KwWcODmSjDIyaoOwx25Fs
moErMUqXHjAjA6YXGlabO5FtM+Ad15mwgtkxA4NO8bymMbtloG3idu9a1p6T
gZNbI5o1mIN6r2/t5zGT2fm5GRAV1mz9uYyckIE6nW8VQnb9vAxIZ/xuambx
iTIw+ainzzNblv8MrJm2494Rdn+KMlCUPOKQObt/JRmoNz7qLGL3tzQDc7Sf
2G9m97+8t/0L77FBLD9VGSjNVLb9zfIny4Dd59sOTjNY/jPQo7xKFmLE8p+B
stPD9GwNWP57z+d6R/ndRJb/DJSbdSk5TWD5z0CCY8+pVG2W/wzw1/K2c0ex
/Gfg9HQ1j8mqLP+Z2LVeM7tMieU/E5aCHee+KrD8Z0I8Z37xgL4s/5k4vqv/
+WfdrP9nQrvf/MvZ31n/z0ScToLj90+s/2fCVX5OX+O3rP9notxFKX32c9b/
M1H7ffEaxYes/2fip0SRc+g26/+ZSFKQV9JoZP0/E1n7w9RdL7P+n4lDZ35p
rz7H+n8mDI0OXzc7yfp/7/mnXKl/Wcb6fya+qx8/xdnD+n8mFCd+mHu0mPX/
TKRFd/e7wca3gt7r3W99QiYiF2WiWGv4h+x0Nj5nojMhwm1cHLk0E0Vzxmwv
CGPjdSbcLHNW3/ElV2VCL/GwdYcbG79743ui8vmZPbk+E/enViiUWbPxPBNf
Z/WZZmdObsnEZNnFAXXsfdCaiaYXatNH/UNuywSf7+u8SJON9733h7NIwV6Z
3JUJf5eNX4z6sfGfD/lah4pPXfR+UuDD997GV+KP7H3IB2f/5ol9n5M1+KjT
KlFzv8vej3y0Lu9Zksfej/p8VHD6+ZZUs/clH+9q5b+uP0E25SPwu+WWgP3s
/clHR8anNo1isi0fBpstEo/ksfcpH6XDjZ9OyCC78XFAUn00JYa9X/lo23Yu
qWoNOajX3feb73mw9y0fiuKDyx4uIyfwUV2aH3MJbP7Bh473f/cKTMgiPhau
S+xnrcfmI3xoLEzLfqxBLuLD7t/iNu/BbH7Cx7RU35O1PTQfKuVD8GlmlFoH
m6/xURLncHDZc3IVHx/XnXq6ls2vZHw881hSnFhHruejYUaV19oqNp/jQ3V8
7sFlh8gtfOy/pC6vsY3N73rvl3HB6+t55DY+Cou670Sks/le7/2vsLT/wyV3
8bF5kVpjoi+b/2Vh+b0RDc9dyApZ6PhyqtZsIZsPZkHGc5qZPouskYWkKJ31
FRPZ/DALseOsXe5pkPWzsMTgUvu7QWy+mIX1Bbn323/RfNk0C8cPJwpfsPk0
sjDQyS30Kptv22aBe/vZ95LrbD2RhWviuuKQarJbFiArq9M7xtYXWdDTn/r2
zk5yUBZU/T5FJBSw9UYWPrzmXVHKICdkQflOpucWtp7gZaFFsWCTBltviLJg
+svpucSZrUeysDco5cB3K3JRFq6evbhshQlbn/Re36lfcw5PIJdmYfe3X/e6
RrD1ShYejbyQbdGPXJUFzZPOh+O/svVbFn4duFN26CW5Pgv3fxe8udPM1nNZ
GPXluewnW7+1ZKHA1K1IvZKt73rvV3zhdQNW79OWhfK+4TUWG9l6LwuO+540
LBKQu7KwaPYIx6WxbP0ngG4sp3RJAFlBgKibLkYLl7P1oACPpHut5rDvgRoC
6CUsMps6k60PBdC28g8fzb7P6Qtg0cKZPUCNrRcFqB77tP1jP7KpAF3fzr67
9ZV9PxDAxnZYRuVLsq0Aah/mD9zUzL4nCKC+seNmzGWymwD+l/vPdD7Jvi8I
8L38KN9wLzlIgL6BfiqKhex7gwAXTF4ZvOKTEwTInDx/sox9X+IJ8HXlTbet
fmSRADFm5grxLux7hABPLRKELgvIRb3xWzXqGpuw7xMCzJr031SVCeRSAQ6d
iv7UMZx9rxCgIO5z5W15cpUACk5PGqs6WT1Vb3yndNNLnpPrBTjn+0c99xa5
SYCpCgpPEi6SWwTQmGowJuQE+74vQE3Ica3Vu8ltAmj6zNJ1W8++9wsgP7Mi
aXkmuav3+lXiAldGse//2Vi13XjqKl+yQja6rdpGhDiz/YBs7HfrWpVsRdbI
xsyj453XT2f7A9mIq0k2OjaerJ+Ntd/jLW4NZ/sF2b3vnxenf8uTTbPx1/Pj
iylfWL1YNqqPjejj94Jsmw0PSzOHXbfZfko2NsrvGvrmEtktGwdqHyfNOMn2
V7JhcONlc85eclA2FN7Lub8pZPst2TiR8GLBMgE5IRv9t4lvno1l+y/ZWGHt
PdckkCzKht7GwRcrVrD9mGxo36ncMteGXJSN4+sv9DTNZvsz2dgwvUdvrT65
NBuhawTL1Eax/Zre+7fwbmndIHJVNgL5lyMyf7H9q2zEhiS12L4n12dD3z1Z
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
mBwiF0jQd0pi/vu95CIJdh4x9b68k9U7S1BwxqDofDG5VIIhEhWTexvJ5RKc
rXumM2wduUqCAefeuoZKWH20BLmdxy++EpLrJRj1duAqHp/cJMF4nz6j56ST
WySYN7Dro1oyq6eWoLxPboNKPLlNgo17dpROiSZ3SLDjjFtSYAS5SwKX8Amz
LoSy+us82DqW3pwTRFbIw7vpj6zu+pNV8lD88WN6gQ9ZIw+u9xzSQ1axeu08
tE49Odvfk+U/DysWDClJdWP5z8Oul9nHTi1n+c/Dt4J13souLP95+FR2d5fQ
keU/D0pXZ8WMtWf5z8PhypuNd5ey/Ofhw+C/e44sZvnPw/eUJZ17bFj+8xC2
ML78zEKW/zzYrU+9176A5T8Pr1VzOQusWP7zUIAu69Ng+c/DnefOaUvmsfzn
IUnsMqBnLst/HkbOfXr3hgXLfx6KNvV/VzOH5T8P3up9zZvMWf7z0NjH+MJf
M5b/PLTfGJlkzyzLw5DzXqvPmbL852GjW23oYuamPPjmziz+NpvlPw/OK8tf
yZhb83AownFxGXNb7/2YaS07ydyRhzGP7y18zNyVB80+Pnd02e/LSbH68bKQ
XGYFKbyeDpcbxq5PRYqVljPXVzJrSBHjZqmVyOLTkcIi9vIWTxa/vhSDxqwc
4M3uj5EUO5XyvVPZ/TOVoubm3+Jzliz/UjQunf2vJrv/tlKcTjh7avN8ln8p
gk8Mkpiw/LlJsbihYGa7Ncu/FCbdR45eWcTyL0Xn78OdNbYs/1IMGXq5++4S
ln8p9J8NqR+yjOVfCv9QoYOPA8u/FM/TRkib2b9fKJCi5GBEWqAry3/v/Woy
GT1yJcu/FO8K/1v12p3lXwqtZMGCZvbvs8ql4GaGX2pdzfIvRfeW0JbBfiz/
UlgdM0hZHsjyL0VC+6TS88Es/1KENGxbbh3O8t8bXyI/9S2X5b/XSVs0jsSw
/Evxs8ltbH4Cy78UpSEfc/JTWP6lmH12nuNRHst/Phb3vAh+n8Xynw9x8oQb
i3JY/vMRL98eLctj+c+HUnirk9t6lv9ed85ZpbSZ5T8fv8OeS59vZfnPByfC
435zCct/PpbqX5z+ah/Lfz4+7LmbP6LMf97/AcZY1ZU=
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
       PlotRange -> {{0., 1000.}, {-0.1503260499713473, 0.1430787423756648}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0},
        DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {-0.1503260499713473, 0.1430787423756648}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1  x\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1  y\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(1  z\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2  x\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2  y\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(2  z\\)]\\)\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
               "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                   ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"angular velocity(hz)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711724720452669*^9, 3.711724760398329*^9}, 
   3.711733372633285*^9, 3.711735780440785*^9, 3.711735982438286*^9, 
   3.7117360331068697`*^9, 3.7117695098708878`*^9, 3.711769701397931*^9, 
   3.711976643527371*^9, 3.711976689493754*^9, 3.711977082901428*^9, 
   3.7119771226805563`*^9, 3.711978882987092*^9, 3.711979426055769*^9, 
   3.711990675974564*^9, 3.7119986604515877`*^9, 3.711998862093534*^9, 
   3.711999043747134*^9, 3.711999210319686*^9, 3.712030496261189*^9, 
   3.714930960602187*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Error attitude in UAV", "Chapter",
 CellChangeTimes->{{3.698506624711748*^9, 3.6985066267613287`*^9}, {
  3.698550969566271*^9, 3.698550974278912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"r1", "[", 
              RowBox[{"stateList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
             RowBox[{
              RowBox[{"rstarList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], " ", 
           FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{
             RowBox[{"r2", "[", 
              RowBox[{"stateList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
             RowBox[{
              RowBox[{"rstarList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], "]"}], " ", 
           FractionBox["180", "\[Pi]"]}], "/.", "PhysicalConstants"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NN"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Gamma]\), \(2\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          FractionBox["5", "stepsize"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<error(deg)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.698506525212187*^9, 3.698506565612026*^9}, {
   3.698550631492511*^9, 3.698550637743202*^9}, {3.6985508013439083`*^9, 
   3.6985508016424522`*^9}, {3.698550995008462*^9, 3.698551095617695*^9}, 
   3.698560732312538*^9, {3.698682686139868*^9, 3.6986826922254667`*^9}, {
   3.6986850488976793`*^9, 3.6986850711143093`*^9}, {3.698685176722034*^9, 
   3.6986851771714687`*^9}, {3.711778875974539*^9, 3.711778875979807*^9}, {
   3.711978890369719*^9, 3.711978913894228*^9}, {3.711979217791965*^9, 
   3.711979270148097*^9}, 3.711979429214706*^9, {3.714931331905168*^9, 
   3.714931335659102*^9}}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9mnk8lP33/5UU2rRrNaKiVbvutlelUqlQpA1lpxj7zjCWmbG2kxalQlEK
pV2lLNGtTUpZWtCuFVH9fH/3OZ/7n/vx7D1nzvV6v6653ueci/pWF2ObznJy
co3ycnL/9////mua7zasSDpUoAH6B5RejGiffWIksSJw1eVP8CRmFfx94tn5
/mV14v4InN16U3UFsyoSd5gbLnghIB6GzjmvNae7MQtQ5XPhnxol5pFoG6K+
yFRfjVgTdjkeGsqhI4hHo2TX4x/Z+cOJtTDhy/hhk7owj8XT4a1iM4NhxOMx
RnXL8V6JQ4knwmj/Dt/J74YQ6+C13hjHo/OZJ2NCUuJsvcTBxFMwVRz//ddP
VeKpONa96tYpM+ZpSPJxq59zbRDxdNyuPhS7ZwzzDKw7/7v04O6BxDNxILLa
f54Csy6mWo6dsMV3APEsdNJ4OqSpqT/xPzie+2hwhRPzbBxy6hv3520/4jm4
mXDI1sSJeS725Br2KPzcl3geLGbX2MCbeT7U2nvdO92JGVhhlq8iF9fnPxYB
l68csxupRiy3AAe2u3h3OadC6wtgvWHTyj1LieUW4tyKmouS671pfSE0Mk+3
df7Ri9YXwXXFlYe+k4hFizDyc6HnPeeetK6HvfZp91+e60HrepDcGxeX2Nad
1hdjdVmDUoU+sWgxwn/8MgjYr0zrS3Bo881erk1KtL4EkQ8lGYnLieWWQsF0
xujnaYq0vhQTLboOUetOLKePWaUr8pe5dqN1fTy/p9+wqKorrS9Dy2zB5x/6
xKJlUHj9+rb+JQVaX47eJSWvRk0iFi1H3z0BS71Tu9D6Crit3ec2RoNYtAKj
rxjYqh+Vp3UDdEsan2yoSSwygKSt36Aj6Z1pfSX6bFyg+3cysWgljtRGvV53
tROtr4KmzeXtCSuIRavwYfrfXaefy9H6apzdFCKWCIlFq7F5Sb8H/bvxuiFa
PV+3huHv/P+PMEShxoKyTj5//mORIS5XpqQH5/z+j/M7Pm9W/rz6R/t/LGeE
ldV/3OTmEMMINk69pt6JaKN4I6x/dm9/34pfFG8E4yGWVUXaxHLGQPdjj0tD
WineGOX9bw6Ur26heGOE21x8ZDiPON8Y4jOd3ycdbab4NVixc96TEmVirMH0
EV9yC7x+UvwabHq8bL5r/Q+KX4Oj337eyltPLLcWdxQUxoaVf6f4taiOK357
ZTmxaC2+xD1VXln0jeI71luV1dWWEcuZoGpr6LIRZV8p3gQC+btjZqwlFplA
LG57aVz9heJNoGb1ZuQWJ2I5UzR8W91zVVsTxZvC/su8Rd1iiUWmSO2nV+2n
QZxvimm3L1RN9P5M8eug+DTt7b6MTxS/DjtkwWW9Gz5S/Dpcrq5e7jWaOH8d
3pl+az/l+IHizTAsNM5oZ/Z7ijdDlXBDWPdOxCIzzOvRff8v43cUb4aIszkb
F6W/pfj1iOutZlwiT4z1uHtC64bH1kaKX4+GlKkpWrcbKL5j/XPisdJxxHIb
4LJQS01/bz3Fb8AevYMDxF2IRRswaMS4SbZebyh+AxTS2849e/+a4jfCRD5H
XGJNjI1w1moeIqh7RfEb4Tm1IeyOJXH+RiyvP7Ix/dVLit+E0geXbuY4EGMT
1IS5Wx9/raP4TUjx87BuCSLO3wSBaea27r2I5Taj0d90X/vhWorfjGdyqu6X
phGLNkOph2erXUINxW/G7TNzp58traZ4c1TquerodCWGOWrjJy+6rfeC4s2x
2EchyEjynOLNcT993JHz5VUUbwG9Bxr9nwwnhgXS8ra/2OPyjOIt4LA2fn/F
7acUb4GR8918AgXEcpbo3UdlvEtw5X8ssIRcYcr7+JdP6PsskZsx1b5oGbGl
JbwXZhS25VTQ91vi943ww300iZMtUR3f/Llp72PKZ4l9Z+6phfQkrrXE63lv
WtIjH1H+LagcNPf4GgViwRbsvvxvhm3EQ8q/Bb1f/P12V5nYcguWTMi5tG3n
A8q/BefGahyYMpw4eQvKFDTjup26T/m3YOGJKQ2PZxPXbkFqTa2J5N9yyr8V
tk2PPijZEgu2QvM5EP3nX8q/FWZrlXcazSC23IqjXsVGc9zvUf6tGHzyfeWo
3DLKvxWFO/ubN7aVUv6tSHx5vM18KXHtVvyu0Dtvs+8u5bfCeu2u4qfvSyi/
FcLW9l+ZoEcMKzSfffFLdKSY8lshVdHHzb0zscgKV0wmHjS0K6L8Vpj2YLzj
r38LKb8VDleolK+ZQ1xrhXEDo8qQcYfyW2O6Wbn9CTVigTXCXZozHffepvzW
GL5kYYaHCrGlNWSVhm4ZMQWU3xrPDTYqtfUkTrbGwoumLst33KL81hg50jw+
fBBxrTUMtZfOT0i+SfltEH/PdoLLeGKBDU6lfahrvnSD8tugsCY7S2BAbGkD
v9yDWZU1+ZTfBtotl8729iJOtsG589ZTz/cizreBb+zcHL811ym/Dcb3XHN3
Quw1ym+Lm4EaqxzLrlJ+Wzy7PuvTgD7EsMXP1GfrB62/Qvlt0eW84ljT45cp
v23H+dr//qUflyi/LUa/lsomLifOt8U9+9srko5epPy2uDzeNff9nzzKb4de
2VZdu1sQC+xwV/dVrzc3L1B+O5wy+zjKdiyxpR0kC86M8N9znvLb4d6U6fP7
dCFOtsPiP2LdgV65lN8ObyqbRvi8z6H8dshc12Y1yppYzh4HVRPLe9RmU357
6Oz2EQ23IIY9KjQF1UvqzlF+e7w943DYx5ZYZI9R9Q9vHv10lvLb40OwRUyu
L3G+Pf7Rmyk90o241h471vcJW5eQRfkdUDn2RmzROGKBA+pHrmy9Kz5D+R3Q
Y62ocGHuacrvgNczzsx6+j6T8jvAfVJPifsY4mQHNNmnu/60y6D8DihuyJm/
NPMU5XeActXU2yuaT1J+R+S0Ddr6bjGxwBHnlMYoKCemU35HxHqrTNjZlEb5
HaHmbfnO0YBY5IghbhfrAjJSKb8jrg50NDirQpzvCMPvB1u/+Jyg/I5YbD94
tfab45TfCetmL1y20IRY0MFrc/20io9Rfic80HzVvQjElk64Om5jXs8rKZTf
CTcVut6r/4c42QmrRutrLbh6lPI7wT9pxMTui4hrnfAm/PDdqaVHKP82VBu7
bD9pRizYhopVL1rNG5Mp/zbUaO4pWeBPbLkNKyedPbKoD7FoG6YNU192au1h
yr8NYQrhSQ+iD1H+beh28WtJbclByr8NP0xmN1zsRSy3HVHZ350Wmh2g/NtR
e3K7ukVqEuXfjsDzcco/2vZT/o71h+oL3poQi7YjR338S0FuIuXfDs9vl5tE
g4nzt+PggruzPoUmUP7taNhrj5Vf9lF+5476d6taqDWxwBlfsx/4CZ/vpfzO
8Mi+YNtmRmzpjA99s9YrPNtD+Z2xXd96mNCCONkZzz7Z3hz2djfld4ZDWdKR
917Etc7Yb6BreEWRWM4FEzztTmw/tIvyu6A1cMXtFzOJ4YKBO56ovXu0k/K7
4GlcQbSLJ7HIBZsUh5ssH0yc7AIHoyMrTfN3UH4XqP00bHJ2JK51weD4pCCX
QcRyQpzWdh02tTD+P1YRIscs+ftuX2KBECPURlsKJxLrCHHmpvzQhXfj6PqE
KExvm9t1HrGhEBu1n1+sz4ml6xXie9Or04cmEQuFOLUhuMf7zBi6fiHsX69q
kk0ijhci9P7ox/NzokmPEHM11r4um02cJUR50vhh7bejSJ8QR/fI79ltTFwu
hL5y9gnrOhnpFaK+5+x+c92Im4S4P1dxxNcuxHKu6Fy1In1jopT0u+L11R2r
TCYRC1zhO/Ph+mt3JKTfFUMGyR74WhDDFf37bfZzbo0k/a5o2zT3UsRuYktX
pKjt3JmlQyx0RdDBKtmLsgjS74p691cRnbcRx7ui3dolcVB34mRXmOrdV1I9
FU76XTFvoO/7TgbE+a74MWDY4IqPYaTfFQuENnX74olrXRHwMeWTwTTiJlf8
XDy+sb1STPrdoPnUfuvZIGIVN1jYqnp7jiIWuGHi6C0nTcpCSb8bTi1s3Gfh
RQw35NVo3j4iIDZ0w/drsxzHlYaQfjfI5C8M7eFLLHSDrXNK3poxxKKO+Mz7
Y/o+EZF+N2QnRvdfJyFOdoOG6o9Pk2cTZ7kh37xO3qommPS7YfjRQz2LVhCX
uyHoaXNp5uUg0u+GrE6fJ02YRNzkhsRLmTM2nwgk/e7o9KRvtLE6sYo7BiWV
7VJLDiD97ji9YaXao5HEOu6YaVMpC0z3J/3u6Llwo+3oacSG7vie13yv4qYf
6XfHNbFjxS4TYqE79G9UzrL84Ev63aFxYdLD2ZHE8e64XFHxWWM0cbI7jhv3
ntev2If0uyO2+8yPnYTE+e64aPHxxpshxOXu+J38bt65Ym/S7w6VnCmnzAKI
mzrWc6NHFk0hlvNAqn94/ccPXqTfA6UKK0xzTxILPFBUoTZVcRuxjgeer4xK
vadDDA/cuJ4c+7nFk/R7AMvrXA0LiC09sD2/9dfjncRCD8hKAx9aWROLPNCo
XPL1uS5xvAeOrjr7REOFONkDYzsvthvyzoP0e+D6w667j94hzvfA/Im7Px88
TlzugZiSkDWfIohrPRA5LvNfT0fiJg9c8EgMGWhILOcJJZNzc7NnEqt4Qv5R
pckkdWKBJ9y2t1xw7kGs44llGtoqpq3upN8TXQ6/ri5pIDb0xA0zNUn2E2JL
TxyuOevYXEQs9MTFtLepQZeJRZ5oelDxZMoZ4nhPXCva3u1PCnGyJ0Rzhhfe
TSTO8sTA4KpISTxxvid6zT9fpS4hLvdEV8/DcyJExLWesNnVNv+4L3GTJ+bu
z9rt4k4s54U37l/eVWwnVvHCDrmud8vsiQVeSC18dXipNbGOF05WFTTpWrJ+
L5Rf+a2wbxPr94L7iec/161n/V5wiDMtdTNl/V6Iuzm6S80a1u+FwkWdRu4x
Yv1ecLzfNDl2Nev3gq3xieJbK1m/F+xCf1jpGLB+Lzw+3vPqveWs3wsftcPm
7l/G+r1g9dijPFaf9Xsh02pwQdpS1u8NY2ffmtdLWL83kgtvbgWzwBuljjbn
8hazfm/M6dz1yQpmeKPyicGrZj3W7420eZ7Ol5ktvZFrp6+2h1noDYPK7u1i
ZpE3DnT7sjqSOd4b38c32BxiTvbG3W+ar4qYs7yRKYvK6Mr5871xpq5k7zrm
cm+0dJlQcZm51hsfqiucp7KeJm+M+BuRc41ZzgeVgtfzzXk/VHygXjfIui/v
l8AHy4qGFlcx6/gg6cub7pd5f+GDf4d0K87i/Tf0wTErhearK1h/x/ffCpn8
iv0S+uBNpxP26qtYvw8emQZv8WW/430wone78gdD1t+xnuY/1c+Y9fsg/Z9/
yzTXsn4frE3pdeWDCev3wZmL/jUP1rF+H2Qa3hxeyfdjkw+0zqwy/b2R9fvC
Iu3npkXmrN8Xg0Vz/57k+1vgi69ntftPt2L9vohfWWf00ob1+yLufUVkNv9e
DH1hrZW7Nt2J9fuirtpcWODM+n3hOtRmnYIb6/fFhv4uBds8Wb8vRlteVG/z
Yf2+SDp38GtWAOv3xcLduxNj+fed7wvJ1UGBu8NYvy+2ee58cZOfB7W+SGm6
0mVIDOv3xcdfTwX7d7B+P5T3lqxdtJf1+2Gj4eDUAUms3w/nVa9P7ZPM+v3g
O+rl4+nHWb8fslJzvcUnWb8fzr4Y1NLKzzNLP7TuOqiSmMv6/SCe8tvD8n/P
Pz8sbg9+sfoG6/dDX69bRbaFrN8POTfHPjpWxvr9oJQ01FnpEev3w+dW7d67
n7F+Pyxx8O6qV8f6/VB91iZNtZH1++GQdLVen8+s3x9+mr1VJvxk/f6oqbw+
x+k36/dHcOnuDyVd+Pnvj99xryes4PMA/ti09G3/9/2IDf0RMdkrI30osaU/
Zrw5/Dxcg1joj+nzN1wIGkcs8kdbWVzPXVOJ4/2RdLdb+Y3ZxMn++H7geJ2S
Hp9//midEN7X0YDPP3+468Xo163l888fD+M/Gzhv5vPPH+Oe7n3T25bPP3/0
KV/9tsCZz78AGJzfPyzam8+/ACgF1cJaxOdfAL5HiDQMpKw/AJU+JbELd7L+
AGy71XP5kiTWH4B9odeVTY+x/gCY+E7JEmay/gCMMO39efd51h+AySMfJd+4
zvoDYB85bN+PItYfgGPLS/ZOesD6AyDOcQhzrmL9AUh91ln77GvWHwBTtRav
nx9ZfwAOTX4/cm4z6w+AVL7z+jA5qi/kArF0+I6qEiVilUC8d5u0o3c/YkEg
LvWXBRsNI9YJRL1E/nTcKGIEYuOG1X2LJ3L9Ewhxl1tp7TO5/gmEQLQrUnsB
1z+BONoaemfVcq5/AnHTxlfitIbrn0AEZ/y6ErSJ659AmK6bnBtpQ5wViKth
Aw6GOxPnB2Lx88Xh3t7E5YEwHzW1dJOIuDYQ7d8GJ0yTEjcFYsYjqcafHaw/
CE2jvfPy9rP+IJhnJJ2wSmH9QbCqUtf/c4r1B+GO1eZvkTmsPwhuOWW//l5h
/R1cb1Nsc5v1B+Fb897TeWWsPwi9h2+e2PKY9QfhuFJRrkY16w/C9eMT0/+p
Z/1B0K05Lp3zifUHIfSkyh2tn6w/CHPW173985v1B8G7JsXhmgLVp7VBMFZc
WWHbk7gpCIK2Q8nN/YnlgrG1z2gv4TCuf4MxTPnFs3INrn+DEfdy8mLVcVz/
BmN/c4n5kilc/wbjYZFfxoZZxIbBuG9R8XwtiC2DEW1T4TRtKbEwGPZDh/9t
WUksCsaQIOnio2uJ44Oxe+zC4kkbiZODIVLsq3NkC3FWx/XlTBz60444Pxhn
5pWNm+hMXB6MpFT0WObB+oORb5e6eYkf6w/GOp8+N0aJWL8ITbtGvakPJ1YU
4ZXoS4A0ivdDhE83EjV77iBWFaGxPSvAdS/vjwgJL5qWnU8i1hIhurOrRlUy
75cI42Y6l9UcJ9YVQVh+oOEW9xcQQaVn0vjIM8T6Irxtm2isncP7KYL395nN
6XnEZh3cf3uD4lXeXxFWHOr+cPENYnsRTmd/WGV5m/dbhKEjRi82Kyb26bie
tlvGE8p4/0WYscpZt6acWCLCvfFG17c/Yj9EQP7RxMonxAkiOKcfClSrYn9E
kE4WzlxYTZwmwtkMhKOO/RIhe/hY7SGvifM6rl9/9Nd79eyfCMNe7D5t/pa4
SIQnGos1it+znyLsmPena69PxJUitKSoLJ/QxP6KcO72+5OjvxI3inBgwrGu
v76x3yIop14dk/qDuEWEyxOtPk1oZv9DENA0eHJsC/sfgk1KAx4WtrL/ITAZ
5Jv87Bf7H4KahAkpd9rY/xBMG+uZENXO/ocgaNTtYO3f7H8IQvwHT0tm1g3B
3AevT39mRggKRfcbB/1h/0MQdyj8kiqzYQhebKye/pU/bxaCToOzDY4xW4Zg
4GiVponM9iF4fPft1J18PcIQ9J45occ9vl6fEPxdURDxkvWIQrAh0CnlX9Yr
CcE6ca3/Ht6P+BAYLD2uOY33KyEEKWNUjp3i/UwOwXHFI4rtvN9pIRh/wSJ4
FPuRFYL8USsHaLFfeSFYeLymWxf2Mz8EZQcXGVxkv4tCoFi+ZqE+3w/lIfhk
ers+i++XyhB8H73G6dsr9j8EVRMCBqnw/dYYAiuT63278f3YFII75dt2VD5j
/0PQOmdaeRjfz3Kh8Bx//nd3vt8VQ7HS95uTM/8eVEKx2/aTXUYp+x+Kd29G
D7lTxP6H4lXakOeXC9j/UJwfZtgUk8/+h2JpsVPenCvsfyi6uStbF11g/0OR
ejDFfXI2+x+K2uRDGj6n2f9QZI5Rv3sgnf0PxYEKlZLDx9j/UGx3SgwLOcz+
hyLPONN84X72v4OH1qS/3M3+h+LwWOfarXHsfyjO1jcsviVl/zvyvU5w6RLG
/nfk2zrmyugg9j8Ui1QyY8f6sP+h+Gros0nFjf0PxeJ84eFKJ/Y/FJIRaZfE
Nux/x/UGT9Pva8H+h2LWgl8JYWbsfyj6RbVMqzJi/0PRyXD/3oEr2P9QjFvm
pztTj/3v8OPO/JS5c9n/UOQf+/DP2BnsfyiejDme+Xsi+x8KvfZrpnlj2H8x
4pqzCzYI2H8xTvpNc3mjyv6L4X7tRrtZH/ZfjIK/X5/kKrH/Yiw8tjK6vRP7
L0a0YPyRCb+4XuhYj3XOWPaVWFeMxdunzDZ6x/WDGA+Cm7P0XhLrixH1UPWO
5jOuJ8QQL1r28ct9YjMxLHstOJtRzPWFGBZXPueY3CC2FyNgm63VxzyuN8RQ
63PGxiOL2EeM0/kJk9+ncv0hxmj71m3Gh4klYuwN7BZ3ci/XI2LofDw1/XsM
cYIYTsMGvZoUzvWJGIWHrmmYBxCniWHXPndXsDvXK2L4hRSl7nYkzhOjT7eU
Pwe3cP0ixoH9OoMPmBEXiRGvWR0dt5rrmQ69TbF1PkuIK8VQsHh0zGwu13di
jC+5azRpGnGjGJ0TW+N+j+V6T4yN1dVFt9SJW8RYdbvrkVBVrv/C8KjWPOaf
3sSKYZjySzDogwLXg2FowYgn+9qpflYNQy8N4fh537g/CIO8pmN+zVtirTCk
x+3uHFjL/UIYqiruiAY+IdYNw9MRjQUZZdw/hGFc52lzUECsHwbrnw7b71/i
fiIMgY5T31ieJTYLg4KbV6/PqdxfhGGw9tXtAYeI7cMQ8SXeV2kP9xthcIk3
uLk3itgnDCP7rU7VDOX+Iww3i/JOZPsQS8IQVRDzj54L9yNhmBOb/aLChjgh
DD+33m122sT9SRjy3G0VuqwhTgvD91XK0sPLuF8Jg2a2+715IM7r2J/nSs4v
Z3D/EoYhf16clE0gLgrD7bgQOV1N7mc69jvB7v27IcSVYVC8OqskpQ/3N2Fo
Li9UsVIkbgzDgwERCtp/ud8NQ36/gDk/fxC3hOFSTUNjyQfuf8PxSW5RQOor
YsVw2Oiu9onmflolHAtN7Ib53SdWDUeT5bZCIc8zBeFQvqv3SnidWCscOt6f
SvzO87wgHPKRO/6NzSTWDcfMWf30M4/x/CAcF56/iargeYN+OJRmKH5T3sXz
hHCEP9KrWi4jNguHoX7ewb0hPF8Ix+WLZ30/8bzEPhxBX37eMhbyvCEctlWb
L9yyI/YJh7O5QfECC54/hKOktn1IGc8nJeGA7gRVW55PxYcj8Nvynj15XpbQ
kX/kxEE35/J8Ihw36qalhU8nTuso/eoCGtdN4HlFOA66i3RmjSLOC0f6xtY8
7eE8vwhHyPWAXO0BxEXheBd31WNWT55nhCOh+uHY9QrEleEYWFwxWfrbjfwP
x4Oh52OKfxA3duxHU3HKkE/ETeGov66UHlBP3NKhN6LiyudqYrkIdFumOdbj
CbFiBMQPl0xWLidWicBztwENZ4uIVSPwtV10wOkGsSAC48r6mc68RKwVgdWT
3vsNyCbWicBkZy3lrhnEuhEwk7+6Wuk4MSLQeGvmRrVDxPoROP3uUaL+PmLD
CPjWSN+GxRObRSC4a53fIymxZQQ+hDzNnSkmto9AnmuO5HQAsTACh8YnaM/y
IvaJwOuBY4qfuBCLItBFPcFL5kAsiUDGwBEGRlbE8RHoOuNk0vjNxAkRqF0r
tBq2jjg5AjHjza8KjIjTIpBu7Xlv1grirAhUu/uW2i0mzotA6fq1Z07OJ86P
wP39Wuc6/0NcFIEn3080ukwjLo/Ag5WrbL9OJK6MwDGRip5Mm/2PwE6v9ckz
Ndn/CNw8ui3x1wj2PwLqWVvnPBzM/kdgldD5yI3+7H8khovn1t/uzf5HYs2Z
+D61yux/JP65cgwqXdn/SMzY/i7JtBP7HwnnI596ZLe7kv+ROBb9IXdUC7FO
JCxrTlw7/Y1YNxK/Xn0RrPpMjEi06nk2yL8n1o9E0uwv88rriQ0jMX/Iq/7Z
L4nNInFPV7Ino5rYMhLD9rRcu/KM2D4S6urfY19VEAs7vu/J6RnqD4l9IjFn
0Z5Mz3+JRZH48/lWp7q7xJJIyJk0a1sVEcdH4tRAfdP2AuKESHTelhSacYM4
uSP+ydtD7teI0zr0NFXeM7pMnNWxP+Gzxi7NI86LxFn7SsmaXOL8SNzaOL2f
9zniokgYNWvVnj1DXB4Jw++2d+QziSsjcWPA4NZtJ4lrI1EfetTiYypxYyR+
nAjqHX6cuCkS2gdsekxLIW6JhMrA3PW/konlJBD0u/vpySFiRQmiL+97U3qA
WEUChdB9/zzdT6wqwZQ7/V63JxALJHAocX87cx/7L4F+UYGRbA/7L8Fcjzjt
77vYfwlUddJtPHey/xIcUtgs12sH+y9B0GLn1qtx7L8EA4yO2oXHsv8SKFsH
6lrHsP8SDD8sFm6IZv8lGJYt38s+iv2XIPBM8pAYGfsvQUPZp13FUvZfgozm
vTbDmSUSDBJXpEgk7L8ETYcTZ3VnTpBAqtE28ngk+y/B0LePg0yZ0yTIqd+p
psacJUFyzXjtvxHsvwQPEhV8fzLnS/BmVPpoBf58kQRhse5DxjGXS7Bl0mB9
e+bKjuufMz3/CnOtBNMGHPTX4utr7Pg+/4F2p5ibJNgxZL9oMetrkeCo6aG7
P5nlpNCpkM2/zvujKMXCfxc/PcT7pyLF520tgXt4f1Wl8P81c0EK779ACqWl
4/oVsT9aUpTJG32Wj2f/pehbX5Bpyv7qSmFbqOuW/z//pRhkV6i2YDf7L4W1
Q/2xSr5/DKW4csBiRCTfX2ZSbDJoNzVIZP+lsAmaaKGVxP5LoZ8xUHPoQfZf
illDsqM1D7P/Ukxp65+jd4T9l+Lg0U8e/vz7kEhRdP7anSL+/cRL8eVr3z3j
09h/KY4+n9F4gn9/yVJMMvE/PJN/n2lSvH97+Uo1/36zpCjoErTgAP++86S4
+yFBTvi/378UlWpTf6zn50PR/+1vzqgN/Pwol0LP8byLkJ8vlVLckI68coCf
P7VSrHveY1gNP58apXiabrN6Jj+/mqQICQsTH+fnW4sUp8cdDNTm55+cDJPW
lOncesD+yyBnMEHmxs9PFRmuOe2MmcnPV1UZLqRIxvTl569AhoGlX9U78/NZ
S4bAgYN3dOPnt44Mg0vrl418x/7L0DQ7ea3xJ/ZfhhR1HYd9X9l/GZaYLT7x
5Sf7L0OPW0ufWbax/zKsbBjR6c1f9l+GPScXfQ/swue/DJkPqnPGKfH5L0Pv
sOS/H3vy+S9DY5Xyh4K+fP7LsCm+ekHWID7/Zdj1oaztzDA+/2WYf3v911vq
fP7LcPKy36gPo/n8l8HtxhgjrfF8/stQp2Yi8pnM578Mu7X7+j2fwee/DAVH
v+qvncPnvwx3Unam1Szg818GjfmrvIKW8vkvw75Hvc/qrOTzX4ZqF8GCn8Z8
/sugovmp7p4Zn/8y9LQURl8y5/NfhqSHehMvWvP5L4N84pTAEkc+/6Ogc83P
+5OQz/8onLwy5q2mN5//UShq7n1peyCf/1G4t9yhtIjrLUEUOitq102Xcf0X
hcfnk97kcL2mE4WU7E2nFnM9pxuFjX1T1BoPcv0Xhbzqbn+SjnH9F4WC6fqz
tpzi+i8KMZtHJMw8x/VfFE5pmH8YcZHrvygEHXHoOSif/Y9Ci5tWpVoh+9+R
/8QAzVn32P8oTPAMydz6mP2PgpKD/6YDz9n/KPQS+7S8ecX+RyEy6fua+e/Z
/yjknjQ3SPvK/kfhQ8zmRMEv9j8K9jo+GmmduP6PQrzhrch5Slz/RyH6S2rB
KxWu/6NgUvw0cp8q1/8d+T1yz6wXcP0fBbWJ/u+0tbj+j8KBwfrDFHX4/WYU
3hgvUPo+k7gxCt4F5Z4f53P/FwW/hs19vvP7/ZYoGAdIL3fj9+ty0TixK2qW
lhn3f9FYFj9P3YTff6tEo81xkE8sv99WjYaRdfeSh9xfCaIR61bRbRT/fYlW
NNxj7mSHcH+mE41d0adz3kq5/4uGw0tp4aad3P9FY3WDz7Fn+7n/64ivKv2z
lf/+xTAaiZ+Xy36c4v4vGs2jD6ntzOH+LxrXggeu1b3K/V80qoO+tjXc5v4v
GsHvNqQl3+P+LxqzhTumbuW/zxFFo0/N92nja7n/i4a5RdWOP/y+OL7jereu
zKn8wv1fNNyk2wIv/eL+LxqSwCVJKfLc/0dj35lfqbv4/XBWNAZ8LjCWDeD+
Pxq9Dwx1iRzB/X80Hq1cGSwbw/1/NL6d1560S4f7/2icUz+x5sgs7v+jMVPW
LsxZyP1/NK7MjBhVuoL7/2hsXvjIoJHfBzdFI/VLsZ6iOXFLNAJbNT+Ps+P3
vzF45+lRbCwkVoxBkNHq2ABffh8cA6evBTVpPC9RjUEX5TjTJzxPEcTgZtmI
6G48b9GKwari0ImzeB6jE4Mf7wIqnXheoxuD/csThh7O4vlPDI65/k54cJHn
Px2fv4OuXW/x/CcGaatiS3RLef4Tg9s+SVmOj3n+E4PC6bsXJVXz/CcGMc5S
5ZIGnv/E4Mau+JyfTTz/6fi+LeNLBL94/hOD2My1r5bK8/wvBj8tHu9y6sHz
vxgoVJs6RQ3g+V8MrlxrkU8dwfO/jv3rseX31TE8/4tBaK1z4b86PP+LwbI6
ffnns3j+F4PcWRHrXi7k+V8MwjJDJ79cwfO/GAy7v2BW1Vqe/8XgTEbej9LN
PP/r2O/JSm/O2/L8ryOfp3NGggvP/2JgZTuv3NWH538x+D39bvmCEJ7/xWCI
Tbauooznf7Fo8Vx5ooD/Pk8xFmsuyB/wSuL5XyxWdpuXMPwYsWosVpvK4WIG
vx+ORdamYz/1c4m1YmFR6rW19CrPf2NRYL9AadEdnv/GIkp0Y1vGPZ7/xuLT
owxlxSc8/41Fz1vaHiY1PP+NhVLkMr3dDTz/jUVGfenTW595/huLgDHpr141
8/w3FsftdO9++8vz31ic93aZ8q0bz/9j0W39M3Fdb57/x2L/jAtO1wbx/L/j
+/ZNni5V4/l/x+enGKYv4Hl5QizuHPYf18Dz9ORYvHisCl+et6fF4mNhX3Ez
z+OzYrGj8JDvlsU8/+/4vjrz9PMGPP+PxZfhu2U/1/D8P7bjvN5eJOD3v+Wx
MA+UFU/byvP/WIxMbR43xYHn/x37e8LGQVXI8/9YtH1r12zw4vl/hz4lo7sH
A3n+H4vJhmUD5/D7Dbk49Mixd7oh4/l/HB7k7LGfwO97VeJQYHBkZ/A+nv/H
YUPExbALB3n+H4e+f+SKHqXw/D8Os0/49XrC72t04uA7eOjRq/x+VzcOL0bP
Xi/J5fc/cXinPu7ojMte8/8fDL9U8Q==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
4WGKqndczxqWbx6c+lhU9awl/+zOT0bnzao7LP987H/8KNiynuWfD5NnTpID
DSz/fNxx3vbj+F2Wfz6Koy7wxPdY/vnweicaNaGR5Z+PQ3K2JXxmHT4c1I9P
PsSsy4fz7tteUmbwMdc3L3QOszEfx3cW6h9kr2/R/f46Ym7dZfHt+Nijtmjc
Dfb+uHxMnPhjQSx7/+58OB4Zq/uP7c+XD832Fepg+w/lo4/ZxNGG7PPh8TEj
Im+2wk2Wfz7+vHDZlsk+31Q+jtUHO7ayzz+djx9n3lf3uszyz4eFg/zfZyx/
+XwMHnNvQQzLbwkfG/smVzb/L/98ZO3zOz34FMs/H0NEhjHdv2vKPx/L7Txs
Stn3q46PNsOIzDns+9fER926Nkko+37K+IjpIUoTsO9vCx9XlF/J2bLvdzsf
NX7Otu3s+/+TD20fufdW7PfBiYXVca8x0ez3IxeLYauyQ/zZ70sxFs8ztJx0
2O9PJRZtiQe4ZYEs/7HoZ/b6mzz7/WrGIvC39nZN9vvWiYX8tvonSv/7/cfi
Uty95VV2LP+xEEUo+6+0ZPmPRfD2xNb0lSz/sRDMervqzFKW/1h8X3NO/6Ae
y38ssuerbrCfyfIfi4lTv6JFk+U/Fr9/3zm8TJ3lPxYNBQO0fFk/iheLEn3n
SB8Flv9Y/PjoYa/fh+U/Fjdf/fF/1Un33/RYfD03SbDhC7s/x+JidvKy/BZy
fvf+f/0LuPmM3a+730+7zuPL98hl3Z/3Q51paTfZ8ysWOT5nVutVkqu7358o
41PZafY8i4Xs89M2pUJyUyx2T7cdaJjFnm+xeOM6ZfyaneSWWIxbvLp9kZQ9
72Jx41q1R68Y8s9Y9Hi7YGVeAHv+CeAbqBE2xZ0sJ4BsmvYV6Ub2PBTAJpgz
osaCrCLAj+zHc9uWs+dj9/VaodoXXbKmAGsMv21rmsaelwKUzokKPahO1hWg
uH7GeQtl9vwUILDmz+zmfmRjAQzDBl6x72T1lABHrjWbXGgj2wkgNNM41fcl
q68EWDio69H8RrK7AKPG5xZYVbN6SwB1z/C/a8+RQwXYqDe03PgYq78EqPDL
e6SRTRYL8NyiQLV9O6vHBAjQg29+PDldALMk3Fr9v/pMgG1OCz698STnC6Az
tUXmw+q7EgHu8c08W1j9VyaAUYatl/UyVr8JEF3aef3kXHK1AN9mPvfup8nq
OQHk9wzWshhJbur+fLwO3UseyOo7Qff9zM3i6l+qX1sE2Ky6LPZzO6t3BbBO
HbRkxCvyTwF6XeCZz2tk9a8Q0RMX7VxdRZYT4lThqVebz7J6WIi3ox37BxaS
VYTInND0iLePnQ+EWPXs8tSEFLKmELYfrt7YzmfnBSEa/5rGZAaQdYX4WSFS
y3Fh5wchTJ1dXQrXko2FUFJePPT0SnaeECJ+clRX5UKynRAn7XlP70xn5wsh
5qdwwl6OJbsLcfnET+EvJXbeEOJKknLjsN7kUCE6nTL66f5g5y8hjAYENHNb
yGIhytYdGLHtETuPCdF/8mirGzXkdCHudmlw5S+y85kQGS89rlkfJ+cLkai4
2O5IDjuvCaET2T9Tbhe5TIjAPbAOELPzmxAb9XuOfR9OrhbizuBtu7292XlO
CN7BVNe/juQmIdKu3B2xz4qd74RwX9Z3vYkhuUWITSrB1/vqsvOeEK2nH8sa
ppJ/ClE3ydK4eDQ7/8bhcs6RbXsVyXJxmDrBbk5mL3YejkPrhAGPCn/QeVsl
Dtv9+/6pfcf6A3GIr3Sf3OcpWTMO+KP8wLyO9QviUFT1IOPoFbJuHKxfmNSP
KWX9gzj0m+Q97HAB2TgO18c2fzDYz/oJcdjbY1Du921kuzg85XKeX4hj/YU4
uD40+LA/jOweh7ImY5Nd3qzfEIc8E0vb3E3k0DhsPJqzt8aG9R/icCDgnO9A
1i8Rx2GGhtw8F9ZPSY2DsHizxQPWb0mPw4v1R+dvnsz6E3FYN2j2zP6jyPlx
GPdlZtoNRdaviEPvKOHjQ33IZXG4aCJZlvmb9a/isLxgjmbRJ3J1HPovLf70
qJn1s+JgfL3m3kTWX2qKw/2yFZMS7rD+Vhz6LHhroHCN3BKHG9a3PY6Vs35X
HPiKI954lpB/xkHv+o+/Kw6z/lc8mv8V/NPfS5aLh06X79i1aawfFg+ty+H7
EsVklXgcS/heIfvffCQeUyv6XloTRNaMx7bgM82vPVm/LB69pE/X73Yi68Yj
9a6Wrfs61j+Lx0hfKK2zIBvHQ5IqvuxhxPpp3X+/yzBrzxKyXTx2hc2s+TCX
9dfi8b3nlwB71k90j0fY/uG3P01k/bZ4FD641TtnFDk0HgbfbuqHsHkOLx6P
RU77vQaSxfGI2nNvlaA360fGY80Wmc+5P9TvTI/Hzs/9pg37zvqz8cjsx8lM
bSXnx2NJS/X76W9YvzYeSgpKU1qfkcvicfbf15jaB6x/G4/1JzdzGurI1fF4
xZXc6bjB+rnxyLH379K/Qm7qfr9rj2UUVLD+bjx018yrmX+G3BIP15VFOW/Z
fKq9+/UHx80rP0L+Gd99P34RV5zD+r8i9I4pOlm1jywngq7Co3s901k/WIQ/
pgdk3DSyiggbRm7qeJHI+sMinDcdNzFeRNYUIbXou7tZLOsXi7AwkC+bH0XW
FaFZXivGMJT1j0W4HxHuEBxANhZh7ZD8+Js+bJ4mwvoH0ralW8h2IoSBm/3E
hcwVYY3nluw9m8juIjgs+P4nwp7120Wo0nhZwltHDhUhmPP6Ur4N67+LYDCo
19hvlmSxCFq7M544sXleqghpQ8Z9/2bC8i/CnBXjthYYsfyL0NQvZqpgOcu/
CK5qc/VilrL8izB3RGXm/iUs/yJ8Utyr+2Ihy78IHx3mTjTSY/kX4c2sNQvr
5rH8izD/eF5G5ByWfxGcL/VWWDWL5V+EWwdaTizRYfkXYdK0kZ7WM1j+RRj1
fvqypGks/yJkJJ0e8G4qy78Yl76Y3XObwvIvxtg9hsn9NVn+xagJUJxUO4nl
X4zGmSLRaQ2WfzH+Zhw+d3Eiy78YfUftPvRxAsu/GHJj83QWMeuKodtw2/IY
m39AjJ6RR7sMmI3F8NczV/k9juVfjOe3CvbfZbYTo7rUhXeHmStG1RLz3a3M
7mIErs+5PZ29nq8Y2Y07JqUyh3bHV+khUmbvhyeGaZ7u3XJmsRgnbWI6Ytl+
UsXYe7DmlRfbb3r36y1Z7R/KPo8sMTYauhXmTmb5F4OrprfiG/v8SsTQOddg
68w+7zIxYouNTn/XYvkXw6ZOSy9/Osu/GHc2cJojtFn+xXAYOTjDdybLf/ff
h50aFz+b5V+MiZc/RVWw+VGLGF1mruFDdVn+xSidYTcyYQHLvxitPH2NCYtZ
/iUIHqIvfqzP8i9BxW6OzikDln8J4r8VvjxqyPIvQd3vqB3X2HxKXYKNg3rO
/WvK8i9B1Xj/SNvVLP8SNP9t9K+1YvmXYNKD480utiz/EowV7zk8is23jCWA
2759X9jv10KCzB//yt+y37edBLMyf9zu/N/vX4I33lVFM9j9wV2C/LS0uTx2
//CV4OZu03Xt/iz/EgSuqq6PDmH5l+DFlHcSrUiWfwnkFx9w/MFj+ZfAQ3+v
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
           
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       AxesOrigin -> {0, 0}, PlotRange -> {{0, 500.}, {0, 20}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 500.}, {0, 20}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(2\\)]\\)\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"error(deg)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.698551072391849*^9, 3.698551096957636*^9}, 
   3.698551286858121*^9, 3.698552495421506*^9, {3.6985607120238256`*^9, 
   3.6985607330865803`*^9}, 3.698560774140622*^9, 3.6985670007854967`*^9, 
   3.698569185769397*^9, 3.698572383668489*^9, 3.698575095411543*^9, 
   3.698577004650504*^9, 3.698596236270775*^9, {3.698596388473464*^9, 
   3.698596409628192*^9}, 3.698643341270063*^9, 3.698651355847056*^9, 
   3.698654176043211*^9, 3.698654983629923*^9, 3.698658882809113*^9, 
   3.698660511853259*^9, 3.698661256547738*^9, 3.6986677315024967`*^9, 
   3.698672485987537*^9, 3.698676779729918*^9, 3.698682695149426*^9, 
   3.6986837204797773`*^9, {3.698685040893305*^9, 3.698685071407358*^9}, {
   3.698685177842772*^9, 3.698685181227195*^9}, 3.698996083796735*^9, 
   3.711979263904848*^9, 3.711979430863831*^9, 3.7119906795512667`*^9, 
   3.7119986642306128`*^9, 3.7119988645307293`*^9, 3.711999046180521*^9, 
   3.711999213653817*^9, 3.712030497284391*^9, 3.714930960980104*^9, {
   3.714931332709909*^9, 3.714931336056333*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/sim_uavs_attitude_error.pdf\>\""}], ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.711990494349852*^9, 3.7119905050743647`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tensions", "Chapter",
 CellChangeTimes->{{3.698506610401093*^9, 3.6985066108989687`*^9}, {
   3.698506725913652*^9, 3.69850672844914*^9}, 3.7119986666254263`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aux", "[", "comp_", "]"}], ":=", 
  RowBox[{"tensionsList", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "NN"}], ",", "comp"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aux", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"aux", "[", "2", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(T\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(T\), \(2\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Ticks", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"XTicksLabels", ",", "Automatic"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\"\<time (s)\>\"", ",", "\"\<force(N)\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.697142505196989*^9, 3.6971425098064213`*^9}, {
   3.6971428711415977`*^9, 3.6971428748910847`*^9}, {3.697145127627036*^9, 
   3.6971451382792177`*^9}, {3.6971966037454767`*^9, 3.697196604682564*^9}, 
   3.697198323503544*^9, {3.698469783425551*^9, 3.69846996945466*^9}, {
   3.6984700578654346`*^9, 3.6984701062650127`*^9}, 3.698505617420267*^9, {
   3.698505648044931*^9, 3.69850567441155*^9}, {3.698505705748335*^9, 
   3.6985057854213877`*^9}, {3.6985058456840076`*^9, 3.698505937921734*^9}, {
   3.698505983684642*^9, 3.698506004784308*^9}, {3.6985060439218187`*^9, 
   3.6985060472345657`*^9}, {3.698506171948332*^9, 3.698506175283119*^9}, {
   3.6985063974009132`*^9, 3.698506398401375*^9}, {3.698506438625246*^9, 
   3.698506458848467*^9}, {3.69850648911189*^9, 3.698506497773613*^9}, {
   3.69850669195057*^9, 3.698506717899823*^9}, {3.6985508208686934`*^9, 
   3.698550885416868*^9}, {3.698551309719589*^9, 3.698551310008038*^9}, {
   3.7098119851768627`*^9, 3.7098120064221*^9}, 3.709874876888335*^9, 
   3.710227167729561*^9, 3.7117247803969173`*^9, 3.711774379730167*^9}],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9e3lcjOv7f9JJtoQQxzIqPh1Li5KQvBGyD9pUh0FUJNM+7dM+TVNGOoQ4
I3GyJYQQJ07IHjmEONmzZw/h9/xe33nnH69393M91/O+r+e+n+u63vf0X7Ry
zhJdHR2dhtY6Ov/////71zi22VAVNSNUF9o/YMPBdcPTVhAbAOXFp475ERvh
hmLg/ucLiY1x74s4uJMPsQlOvCryHehO3BufdK1+DhYTizAn2P1G76nEplAG
Xt7/cQKxOZwql24+MIZ4IA5tmPhm7ghiC+h1/VN83Zp4EGoP9Tk3bBDxEOh8
/e3vFWbElgi6M/Zbcm9ia1RGJhWFdSO2QdLP43PHGhIPQ4c8g2cP9YltoTAf
VrLoZysttsOpv21cyj8TD4fB4+Nb3r4htse9VqO+tG4gHgG1on/1h/+IHVB6
pNuT0zeJR0I2u8Qm6grxKLwcMuqW0Vni0Wi8uXDwqhPEjjjzoF3ep4PEY3Dm
wrQdU/YQOyHQfU+zspB4LB5MPOZ4fCMx0PzX+14Pc7RYDmy37Tf1ZwbHxyG/
tFeUcSLHx+FTjx4zB8g4Ph6uIXMX2a3k+HjcnjbHyXkpxyfAdVOGu8fvHJ8A
/0mZBlJXjjtj6oyCPPU0jjvDVLfe6th4jk+Ea681t9+O5PhE5HY0Tbe34fgk
6PiN+yXTguOTANf4X9724/hk+Kd267msB8cnI2Sh4f7Phhx3Qa4mx2yjPsdd
IF0fXeD2Q0c7PgWW1fqTLD5psXwKTpT/bWD8muNTMWhQ+LmeTzg+FdVtPaaP
usfxaXjQ09Qx4gbHp6HWyXvw5cscn46cT7l/jD/L8el4ffFofc3fHJ+BUQ4L
5ieVcXwGdMsNZszcx/GZOPpnzK0ROzku4Pff+43dyvFZ2P9tzVDffI7PwqEg
21Z//cFxMV7Oeqlqs0qLIcbtxfqHUxW8Xoztyi7e/ZO0uEIMh9g3U2/H0H42
nuScnFUSTvvZsI+7O2jrStrPhtOVbWv3B9B+NoyzvCffW0z7OXhy9/6LAfNp
PwdeluGWGZ60n4NP3d0PtplL+znYHuBvtmUG7ecivuaMiZsL7efieeo0W7MJ
tJ+LSYsMO7V3ov1cqE1vTeowkvau+PpjddhAO9q7wm7mJpt5VrR3xYZN9j0K
B9HeFcUnTp7QH0h7N/iMMz4l7097N9jXHD7WuQ/t3dDhw4DJR0xo7wZx8Hed
SGPau2O/0bD0qUa0d0dptX2UbQfauyOwv5nMxoD27igPrhnorEd7D/Rd9sug
5Tq090CJuF48/cvPsf9n7wH5un1/PHurxRUeiB09WbbnuRbreKLCvnLOuoda
DE/4uJQnb6+jvSfQY2LQ7X9p7wlNtm70sCu0nwfVfcuuxVW0nwfj9Zt3Tj9F
+3mo63jyYMdy2s+DeMum4saDtPeC1OBy1497ae8Fx3fh/r120t4LohkOdpJC
2nuhyn9Q6zObae+NZqvTS6atp703LHZcb3yzhvbe0LxZMuZANu29MeTSgYbc
DNr7wLhnl9zcFNr7QPTj5qN9CbT3gbXzlJSX0bT3QdOB+H7OEbT/Hf4lM/zK
gmkv4M5WRlNW0P53VLoNuPbRn/a/46Jdgf8JX9rPR/7m5TkFEtrPR521vHOB
D+3nQ+e3bzvLPWk/HwZ3Pg9850r7BagqDhOPn037BfDfNfzj7hm0XwCdnO2P
babSfgEMsss/VE+ivQR1MTc/Z0zQYpEEmksFZ3zA+0lQaPhp1JQxWiyRoNHo
oPWsUby/BLFn9qYGjdBijQRlVxN7/mVHfxIY3wy+1GSjxfUS5OWJUxZb0f9C
xL7yMH06hP4XwmJz26zkQfS/EHAy3OVgQf8LodPJ2Fd/IP0vhLp1sealGf0v
xKPvw6a+6E//wvXzNk3VFdH/QpjULVPZ9KX/RSi1ivsq603/i3D97deE2l70
vwiNSTYG4p70vwgoioz/rwf9L4JE1PlyWnf6XwTFxK4PJnaj/0XYfWPqtt7G
9L8Ita3NdNt3pf/FSKnJemDUhf4Xo/nzKyvLzvQvjP+mW7PIiP4Xo777tQPF
nehfGP+Wf6QzsWYx5I/Onc80pP/FCDtw62Jv4vrFyLvnVVjZkf598fLDPbtk
YpEvrj98K/Ekhi90vnVp50ws8UV14V6jScRyXzRe6uc6n1jjC5enW/eriCt8
cTHKt+1V4npfBNqG2g3m8+gsgYv3JcONxKIlyP9jQYiIfLAEsXfbORwjlizB
7o07RyznfMiXQH3iVxdrzpdmCXqXOY9tx/msWAK7CX3fNRHXL4GottyuuWX+
l8Kx2Ot2V8ZLtBRldosOjmU8sRS+92XrEhhvyVJhh1TOrjGh/6WQWNQcGMX3
RbMURt9eZh38lf6XwuVubfGEPvS/FNLqdo8ftbx/fpCvD/uRx/dT5AdnX3XV
AlP690NJ1+VGI83pX7jesrjAvOX994Pr/B3TTLk+NH6oC/O+acP1U+GHolfR
nedyfdX7ofBp3OlUS/r3RwfVlhPnrOnfH5UPGs/2taV/fxh3mrY7ZTj9+6Pp
rb/9N653uT8kwx9YJ3E/0PijudxmaU/uFxXC9YlHNBVj6d8filund0aOp/8A
VA5Vz3SaSP8BUFiMczd2of8AiLzfZX7h/iURsO/eI69a9rcAXM+P2NEopv8A
5M0dOUCX+2OFgDfe+dTfg/4DkHLEtmGWF/0vg7Nd238yf6f/ZfBf03X2vy37
8TIY1DR5D+F+LVkGzz+m7VH70f8ylP6aYai7nP6XocqwxxR5EP0vQ0OfcQPb
h9D/MjxKtF9ZEE7/y9G4tM2riVH0vxylLgX+H2Ppfzmqp17dWSKn/+UQ5YyI
jeT3Sr4cgTtmbpuioP/lqG9a/Hqgiv6Xw85jbb9OavpfDunxGh3dXPoPRKDp
zXk/19F/IPLSBr7Tz6f/QMiHd15toqH/QPiOL/5uy++xPBDWU+788Cyi/0DU
hYz2Tt9N/4GoOGd/60QJ/Qci9vYXp5+l9L8CjrvD57gcof8VwvdTcmv9cfpf
gQ+T7da/P0n/K1DY3s7D7Qz9r4D1e//aE+fpfwWq7Lfft2J+UrECDv8qRxTV
0P8K5JukbP5fLf0HoSim+vYe5juiIOS/SCoZdZ/+g+Dqn/bw0mP6D8KHb1tG
+DF/kgehuW2cVP8N/QdB8mbr7F3v6T8IPm9Vm92a6F/wF7qp1y/f6X8lQsrW
VdYxfxOthDjvgvvI1sznVqJ3Xu6AvF+0WLIShn00Xb60YX64Eq+vbvnp3U6L
NSuRXeN+uYL5Y8VKeDYoJP/rpMX1K9H3eOe8VZ2ZP0rRxeye+5euWmwkhWrK
23jf7nweKXa/8XtXzfzVWoqj6TFrnH7l80lx2yXVeQ/zXbEUSRatGnqL+LxS
FJWpJVmmWiyVovzRd/UPcz6/FOMzxvhI/6fFaima7wdve/Ab+Uhhef7lLLch
Wlwihd1Fm7FVluQnPO/Xz+6jbbS4Wrg+Z3BMsS35SnFP8mZVf3stbpQi+/Wm
qFwH8g9Grd/53m1Gk38wYieNmx81hvyDEX/EwOzFWPIPhv55idhnPPkH47zj
PxcuOpN/MEzsH0Y7Tib/YHT5Y/eEXVPIPxgPek3o0HM6+QcjcEqrY6kzyT8Y
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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw9e3tcjPn7fkIbQusTWpK0adM65FCKcCFJSM5JUklSSeem88w0zUxNTckp
p3Y2IQnJKbHJOSSJJcdtCWljQxIbfvN9/eay/+zr8u6ee67nej/Pc9/39Z4h
PusXrNbW0tJq7Kyl9X//////tUwJ7rfAprWoBzT/gIisVa6z8ol14TBAJ3/b
DmJ92Nyw61GfTWyA2qhPw/qnERsizffLFjsRsREiJJe/ThUQm0CvUDT11/XE
pqjIs05vWU1sBi/z7esyPIjN0ce/8cWXBcQWEO98I5g8i9gSjtlFI+ZMIR4O
vY/luWbWxCMx4Opf7Zcsia1QcvRCx0gT4tHw+Lbzi2df4jFofpb+eHF34rEo
sJmta/CtuwaPw5bfnIO2vye2xpZ7O8OaXhLboFz73oeuj4jH4+6cMbb/3iS2
hWSLyf2CC8R2cIuVX7M+STwBztPvzdhWSDwRlRf6nLu7i9gepov0G95mEU9C
3pG3CW+SiSejqFOXuJoo4iloaTR8uGMtMfA1bl3BIg8NFgIRN0b++9WF61PR
1KvgeO5Urk/Ftd2mH8aP4/o0SH5N2FhtzvVpOB8at8LvJ65PR5eg6k6d9bg+
HTmvavQKvnbTrDtAK+J9g9tbDRY6YFrnmiuGDVyfgbB9j6403eX6DPgbHL12
6yrXHSEd8FRWc4brjhiTOEn+6jDXZ2Kyk2ro4N1cnwnj7L6K8C1cd0Jdy/Lj
jalcd4LFi5PhwgSuz8IY2+5r7UO5PgvYMbin8WquO8Px7KhD5su47ox8pThs
6Vyuz8ZF87HuR6ZyfTYcn+hOtbbh+hw8CV1Z/8yS63PgPNbw1h+DuT4XYXeU
GRcMuD4XT3/KCP/Qjesu8F9vd3nhN13Nugt2vu44/KRVg7XmIeTTCoctTVyf
Bz3zG6LYeq674lG0z0LFXQ2GK8o2p2ZXVvHvXaFds0N3zAUNrnAFJqwJuXKK
8fMx2SMvWl7M+PkonzinImIf4+ej8UT734pcxs9H4cJugTc2M34B6qpq/7bN
YPwCyC8dvnRDwvgF8DXtlKWIZ/wCpOcaHQ+NYPxCjJtkuScpiPELcdfpbdUx
X8YvhOfGzVv0VzB+IZ4enRGQvZjxi5D99cEhOxfGL4LLh8BrXWcyfhHim2+Z
tk1h/CL0yTU17m7H+MWw9DH+eeoYxi/GtTMbt23/lfGL0f1NaVPfoYxfjC6W
8aISY8Yvgf5P16+tN2T8EnS3q7We24fxS2BYMm6csx7jl2CT5aQJfjqMXwrb
wbpnVVqMXwqBfYH9p88/aOKX4tjoGVbrP2hwxVKUBFkP0G7RYC039Br2v8Qj
TRoMN0ywufE0/jnj3RB262jtqnrGu0HnH9HD1Q8ZvwzDh61Siu8yfhnuvGtL
OnWL8cvgec3VqfsNxi9Di22bOKKS8e5wkD6o/niB8e7YG+lWvfEs491xxs7y
F6fTjHdHevVKscFJxi+HdsPC9PYSxi9HS+Jvre8PMX45zoTrBescYPxyVN2X
Hhq1j/EeKMvuuX79bsZ7oPjr74GXfmO8Bwze26wavZPxHujQ+a3/0RzGr4CN
Q+xc582MXwGduT9XtW1g/ArYau1cUapk/Aoo98VUKxWM90THiZrXMXLGe0Ju
ZpIRk8J4T1zztBdmiBnvCdcGu13Hkxi/EsbJS8+8jWf8SgjReHJqLONXIv61
fdCeaMavRERAxkmjSMZ7QXfX3zH7wjTYxAtWAz5vmhHCz/OCgcK2uW2dBnt5
4XKVzPd0ID/fC0/vTG/IXqvBKi94rBiyMGEN83lhnHff7bGrNbjeC7Fh9rvT
VjG/N969PbfsoDfze6PQ5sr+pyuZ3xvVh5yFlp7M7w3LHr2vSzyY3xs5YrHg
rTvzeyNo8t7okGXM743L2m0nO7kxvzdazVyH7VnC/D6oePb4tPti5vdBmHXH
StNFzO8DB9OhOh0LmN8H48rv576cz/zq9br0Ac9dmd8HOhHKta3zmN8HLSbt
cX2J69V42vapTi7MvwrHPJv2p89l/lVojnm3++kc5l+FLr9NNXYm9loFxw2P
dS7MZv5VSD9jPXsusWoV3AP71zU6M/8q5Dju3raZuH4V6s0d4hYSa/li+/h9
a0yJTXzRFHDcSZsYvrC0V/7wfhbz+6L0dHJ6K7HQF4IH/c/q8O9VvpC8/pwy
7Ht+X/gs73HF43t+9d/7LVmj+p5/NQRdBsxu/Z5/NWyKryx2Ix+sRh9z3YAq
Yq/VKGs9u9aV10O4Glo3DWwaiFWr0Sst/LCM17NiNWJLthyfwOtdvxoGeRm/
fPl+/f3U9dnFZ9XUx8QPkn3dKg9TT/ihqWD7kd+ot5cfphX/kpDL/SD0g4vn
E52ihczvB5wJtazk/qnwQ/se0wvvuL/q/eBhVHng16XMvwZtYffKw7g/TdbA
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
2tGvl2eguuP28fk835WVgcsXZPY+/H1ejvp69GnrFvjdn89AXmyNfZAZ9c9A
08L+rat53qxYnT/KcJ4bz6OVZkDwad266fTjKzKw92VH8C/04ysz0OXj+/Au
9ONrMuBqd23ngx+pfwZCrk/qXtiL+mdgi2jB4zD6740ZKMtyHW9N/70lAwOs
L9i95Xm99gzULo7W2cfzfFpKPDKPPbuE5/10lTC80l+m9f08oBJLHt1Pyv/I
+l+JayOkVdP4+0ITJeZMGJT1kH67hRLdq+teB9Nvt1JizCbLbl94ftFWibSC
sq5Snm+EEsZmfj905/lHJyWiCieNSf2L9b8SynfJhZ0fsf5XImde0aaYOtb/
SjjZLOv7D/11fyUczrnPd6O/HqKEzdiD687RXxcoEREdnWlOf12ohKeq2yMZ
z4PKlWj0fSh4fp71vxKfd6QppvA8aY4S9ifu2205zfpfiSqbQ/tfnWT9r/58
y96dJhxj/a/++10/+8n4+8hS9ef3Gv3tVhHrfyWOvdj27qf97P+UKGp46Ldy
D/s/JSQbleI8+ul1Snw96R30jH56vRJZFQNnm9JPb1RCZ2zOjJX001vU13/A
ZfF2+untSpiG7R12R8n+LxP+m5y99ein62aiNa/WdTrPD+tn4tq7wMExydQ/
ExZR81oPJlH/TCwyr2j7O476Z0Ia1M2lr4D6Z8JUkTDEib/XtM2Em05ETmwI
9c9EiZ7Tg6IgXfw/2c454A==
           "]]}}}, {}, {}, {{}, {}}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0., 1.8611209457913576`}, 
       PlotRange -> {{0., 1000.}, {1.9372318613625703`, 3.4594501727868225`}},
        PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0., 1.8611209457913576`}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {{1, 200, 400, 600, 800, 1000}, Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 1000.}, {1.9372318613625703`, 3.4594501727868225`}},
        PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1, 
           FormBox["0", TraditionalForm]}, {200, 
           FormBox["2", TraditionalForm]}, {400, 
           FormBox["4", TraditionalForm]}, {600, 
           FormBox["6", TraditionalForm]}, {800, 
           FormBox["8", TraditionalForm]}, {1000, 
           FormBox["10", TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(1\\)]\\)\"", 
         "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(2\\)]\\)\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {2, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& ), Editable -> True],
   "\"time (s)\"","\"force(N)\""},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[
       RotationBox[#3, BoxRotation -> 1.5707963267948966`], DefaultBaseStyle -> 
       "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {"", 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 2}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"Bottom", ",", "Left"}], "}"}], ",", 
       RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6985508860612507`*^9, 3.698550937005148*^9, 
  3.698551310865361*^9, 3.69855252877886*^9, 3.6985607992224083`*^9, 
  3.7098120102199163`*^9, 3.709812545526105*^9, 3.7098127709698057`*^9, 
  3.7098128899612722`*^9, 3.7098130833818398`*^9, 3.709814637333356*^9, 
  3.709815070848659*^9, 3.709816732377987*^9, 3.709816928592106*^9, 
  3.709868588124206*^9, 3.7098736135156593`*^9, 3.7098748776027718`*^9, 
  3.709876309578061*^9, 3.710161064855397*^9, 3.710416427378765*^9, 
  3.7104175232696533`*^9, 3.7117247814569263`*^9, 3.71173338094178*^9, 
  3.711735783926182*^9, 3.711735989145216*^9, 3.711736038024972*^9, 
  3.71176951312871*^9, 3.711769703660239*^9, 3.711976648920352*^9, 
  3.7119771294106407`*^9, 3.711979282839526*^9, 3.711979434128701*^9, 
  3.711990684121933*^9, 3.711998669407597*^9, 3.7120304976560087`*^9, 
  3.714930961186469*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<figures/sim_tensions.pdf\>\""}], ",", "%"}], "]"}], ";"}]], "Input",\

 CellChangeTimes->{3.7101607845755167`*^9, 3.711990523741946*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.711979467430475*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Appendix: details in obtaining  explicit ubar", "Title",
 CellChangeTimes->{{3.714925121087471*^9, 3.714925148392393*^9}}],

Cell[CellGroupData[{

Cell["Some details in obtaining  explicit ubar \
(\[OpenCurlyDoubleQuote]inverting RB\[CloseCurlyDoubleQuote])", "Chapter",
 CellChangeTimes->{{3.711980157087255*^9, 3.7119801887325068`*^9}}],

Cell[CellGroupData[{

Cell["\<\
first controlling the tensions: determines component along n1 and n2\
\>", "Subsection",
 CellChangeTimes->{{3.7119810705798817`*^9, 3.711981102056184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"m", " ", "T"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"NT", "[", "zk", "]"}], ".", 
          RowBox[{"NT", "[", "zk", "]"}]}]]], 
       RowBox[{"{", " ", 
        RowBox[{"w1", " ", ",", "w2"}], "}"}]}], "-", 
      RowBox[{"Tensions", "[", 
       RowBox[{"z", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"u1x", " ", 
           RowBox[{"n1", "[", "zk", "]"}]}], ",", 
          RowBox[{"u2x", " ", 
           RowBox[{"n2", "[", "zk", "]"}]}]}], "]"}]}], "]"}]}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u1x", ",", "u2x"}], "}"}], "\[Rule]", " ", 
       RowBox[{
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["m1", "m"], ",", 
           FractionBox["m2", "m"]}], "}"}], "]"}], ".", 
        RowBox[{"MT", "[", "zk", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"m", " ", "T"}], 
            SqrtBox[
             RowBox[{
              RowBox[{"NT", "[", "zk", "]"}], ".", 
              RowBox[{"NT", "[", "zk", "]"}]}]]], 
           RowBox[{"{", " ", 
            RowBox[{"w1", " ", ",", "w2"}], "}"}]}], "-", 
          RowBox[{"Tensions", "[", 
           RowBox[{"z", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
             "}"}]}], "]"}]}], ")"}]}]}], "]"}]}], "/.", 
    "\[IndentingNewLine]", "PhysicalConstants"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}]}],
    "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.711795166584374*^9, 3.711795172829546*^9}, {
  3.711981087371847*^9, 3.7119811043671637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711795173521452*^9, {3.711981091270677*^9, 3.711981105520441*^9}, 
   3.711983950318762*^9, 3.711990714989957*^9, 3.711994469954031*^9, 
   3.712030498039177*^9, 3.714930961450492*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"equality", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "u1x_", ",", "u1y_", ",", "u1z_", ",", "u2x_", ",", "u2y_", ",", 
         "u2z_"}], "}"}]}], "]"}], "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{
           RowBox[{"NT", "[", "zk", "]"}], ".", 
           RowBox[{"NT", "[", "zk", "]"}]}]]], 
        RowBox[{
         RowBox[{"Skew", "[", 
          RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["w1", 
             RowBox[{"L1", " "}]], 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"u1x", ",", "u1y", ",", "u1z"}], "}"}], "-", " ", 
                RowBox[{
                 RowBox[{"n1", "[", "zk", "]"}], " ", 
                 RowBox[{
                  RowBox[{"T1U", "[", "zk", "]"}], ".", 
                  RowBox[{"{", 
                   RowBox[{
                   "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", ",",
                     "u2z"}], "}"}]}]}]}], "m1"], "-", 
              FractionBox[
               RowBox[{" ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"n1", "[", "zk", "]"}], " ", 
                  RowBox[{
                   RowBox[{"T1U", "[", "zk", "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", 
                    ",", "u2z"}], "}"}]}]}], "+", "  ", 
                 RowBox[{
                  RowBox[{"n2", "[", "zk", "]"}], " ", 
                  RowBox[{
                   RowBox[{"T2U", "[", "zk", "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", 
                    ",", "u2z"}], "}"}]}]}]}]}], "m"]}], ")"}]}], "+", 
           RowBox[{
            FractionBox["w2", 
             RowBox[{"L2", " "}]], 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"u2x", ",", "u2y", ",", "u2z"}], "}"}], "-", " ", 
                RowBox[{
                 RowBox[{"n2", "[", "zk", "]"}], " ", 
                 RowBox[{
                  RowBox[{"T2U", "[", "zk", "]"}], ".", 
                  RowBox[{"{", 
                   RowBox[{
                   "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", ",",
                     "u2z"}], "}"}]}]}]}], "m2"], "-", 
              FractionBox[
               RowBox[{" ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"n1", "[", "zk", "]"}], " ", 
                  RowBox[{
                   RowBox[{"T1U", "[", "zk", "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", 
                    ",", "u2z"}], "}"}]}]}], "+", "  ", 
                 RowBox[{
                  RowBox[{"n2", "[", "zk", "]"}], " ", 
                  RowBox[{
                   RowBox[{"T2U", "[", "zk", "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", 
                    ",", "u2z"}], "}"}]}]}]}]}], "m"]}], ")"}]}]}], ")"}]}]}],
        "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
         "u1x", ",", "u1y", ",", "u1z", ",", "u2x", ",", "u2y", ",", "u2z"}], 
         "}"}]}]}], "/.", "PhysicalConstants"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"equality", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
         "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{"NT", "[", "zk", "]"}], ".", 
            RowBox[{"NT", "[", "zk", "]"}]}]]], 
         RowBox[{
          RowBox[{"Skew", "[", 
           RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["w1", 
              RowBox[{"L1", " "}]], 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"u1x", " ", 
                  RowBox[{"n1", "[", "zk", "]"}]}], "-", " ", 
                 RowBox[{
                  RowBox[{"n1", "[", "zk", "]"}], 
                  FractionBox[
                   RowBox[{"m", " ", "T"}], 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]]], "w1", " "}]}], "m1"], 
               "-", 
               FractionBox[
                RowBox[{" ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"n1", "[", "zk", "]"}], " ", 
                   FractionBox[
                    RowBox[{"m", " ", "T"}], 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]]], "w1"}], "+", "  ", 
                  RowBox[{
                   RowBox[{"n2", "[", "zk", "]"}], " ", 
                   FractionBox[
                    RowBox[{"m", " ", "T"}], 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]]], "w2"}]}]}], "m"]}], 
              ")"}]}], "+", 
            RowBox[{
             FractionBox["w2", 
              RowBox[{"L2", " "}]], 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"u2x", " ", 
                  RowBox[{"n2", "[", "zk", "]"}]}], "-", " ", 
                 RowBox[{
                  RowBox[{"n2", "[", "zk", "]"}], " ", 
                  FractionBox[
                   RowBox[{"m", " ", "T"}], 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]]], "w2"}]}], "m2"], "-", 
               
               FractionBox[
                RowBox[{" ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"n1", "[", "zk", "]"}], " ", 
                   FractionBox[
                    RowBox[{"m", " ", "T"}], 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]]], "w1"}], "+", "  ", 
                  RowBox[{
                   RowBox[{"n2", "[", "zk", "]"}], " ", 
                   FractionBox[
                    RowBox[{"m", " ", "T"}], 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]]], "w2"}]}]}], "m"]}], 
              ")"}]}]}], ")"}]}]}], "-", 
        RowBox[{
         RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"u1x", " ", 
            RowBox[{"n1", "[", "zk", "]"}]}], ",", 
           RowBox[{"u2x", " ", 
            RowBox[{"n2", "[", "zk", "]"}]}]}], "]"}]}]}], "/.", 
       "\[IndentingNewLine]", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u1x", ",", "u2x"}], "}"}], "\[Rule]", " ", 
         RowBox[{
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["m1", "m"], ",", 
             FractionBox["m2", "m"]}], "}"}], "]"}], ".", 
          RowBox[{"MT", "[", "zk", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"m", " ", "T"}], 
              SqrtBox[
               RowBox[{
                RowBox[{"NT", "[", "zk", "]"}], ".", 
                RowBox[{"NT", "[", "zk", "]"}]}]]], 
             RowBox[{"{", " ", 
              RowBox[{"w1", " ", ",", "w2"}], "}"}]}], "-", 
            RowBox[{"Tensions", "[", 
             RowBox[{"z", ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
               "}"}]}], "]"}]}], ")"}]}]}], "]"}]}], "/.", 
      "PhysicalConstants"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7117898632678556`*^9, 3.711789965068973*^9}, {
   3.7117900583574667`*^9, 3.711790084892836*^9}, {3.711790288215926*^9, 
   3.711790333861802*^9}, {3.711790692942778*^9, 3.711790698731883*^9}, 
   3.711790797905463*^9, {3.711790928076118*^9, 3.711791038382235*^9}, 
   3.7117911234773273`*^9, {3.711793600719245*^9, 3.711793672291473*^9}, 
   3.7117937139467707`*^9, {3.7117938679833517`*^9, 3.7117938686709547`*^9}, {
   3.711794317046979*^9, 3.7117944279714537`*^9}, 3.7117952019713373`*^9, {
   3.711795310429788*^9, 3.7117953161120033`*^9}, {3.711795377026737*^9, 
   3.7117953811668987`*^9}, {3.7117954254130383`*^9, 3.711795476634946*^9}, {
   3.711795534065037*^9, 3.711795678440773*^9}, {3.7117957326015453`*^9, 
   3.7117958501186037`*^9}, {3.711796026704509*^9, 3.71179611575598*^9}, {
   3.711796193095552*^9, 3.711796422349326*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["first step", "Section",
 CellChangeTimes->{{3.71198209419888*^9, 3.7119820954450006`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ubar1st", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", "T_"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"u1x", " ", 
         RowBox[{"n1", "[", "zk", "]"}]}], ",", 
        RowBox[{"u2x", " ", 
         RowBox[{"n2", "[", "zk", "]"}]}]}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u1x", ",", "u2x"}], "}"}], "\[Rule]", " ", 
        RowBox[{
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            FractionBox["m1", "m"], ",", 
            FractionBox["m2", "m"]}], "}"}], "]"}], ".", 
         RowBox[{"MT", "[", "zk", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"m", " ", "T"}], 
             SqrtBox[
              RowBox[{
               RowBox[{"NT", "[", "zk", "]"}], ".", 
               RowBox[{"NT", "[", "zk", "]"}]}]]], 
            RowBox[{"{", " ", 
             RowBox[{"w1", " ", ",", "w2"}], "}"}]}], "-", 
           RowBox[{"Tensions", "[", 
            RowBox[{"z", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
               "}"}]}], "]"}]}], ")"}]}]}], "]"}]}], "/.", 
     "PhysicalConstants"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"#2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{"nT", "[", 
          RowBox[{"#1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"OP", "[", 
          RowBox[{"nT", "[", 
           RowBox[{"#1", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#2", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}], "-", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RA", "[", "#1", "]"}], "+", 
        RowBox[{
         RowBox[{"RB", "[", 
          RowBox[{"#1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
         RowBox[{"ubar1st", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ")"}]}], " ", "&"}], 
    "[", 
    RowBox[{
     RowBox[{"zlR", "[", "]"}], ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", "6", "}"}]}], "]"}]}], "]"}], "/.", "PhysicalConstants"}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7119823653860188`*^9, 3.7119823722958508`*^9}, {
   3.711982404194804*^9, 3.711982406373768*^9}, 3.711984549694412*^9, {
   3.711984601705209*^9, 3.711984603594743*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.1530943375795464`"}], ",", "0.5223108834167807`", ",", 
   RowBox[{"-", "2.994355584387289`"}], ",", "6.329387871224355`", ",", 
   RowBox[{"-", "6.368043710940045`"}], ",", 
   RowBox[{"-", "5.66194202538063`"}], ",", 
   RowBox[{"-", "17.412167779670227`"}], ",", 
   RowBox[{"-", "6.844543843082432`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.711982372952774*^9, 3.7119824069526*^9, 
  3.711983952882717*^9, 3.7119844020066853`*^9, 3.711984551461134*^9, 
  3.711984606058154*^9, 3.7119907151144533`*^9, 3.7119944734369583`*^9, 
  3.712030498490697*^9, 3.714930961668976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Next: determine components along S[n1].nT and Skew[n2].nT so as to control \
torque of nT (along direction OP[nT].n1)\
\>", "Subsection",
 CellChangeTimes->{{3.711981196703929*^9, 3.711981232207962*^9}, {
  3.711981344336151*^9, 3.711981359230788*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Idea: \[Tau]NT = B\[Tau]NT.u + A\[Tau]NT \nB\[Tau]NT[zk] . [ ? S[n1].nT, ? \
S[n2].nT]\n\[Tau]NT = Skew[nT].",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"Norm", "[", "NT", "]"}]], TraditionalForm]]],
 "(w1 ",
 Cell[BoxData[
  FormBox[
   FractionBox["A1", "L1"], TraditionalForm]]],
 "+w2 ",
 Cell[BoxData[
  FormBox[
   FractionBox["A2", "L2"], TraditionalForm]]],
 ")\n"
}], "Subsubsection",
 CellChangeTimes->{{3.711981287986918*^9, 3.7119813362818623`*^9}, {
  3.711981406234088*^9, 3.7119815071244698`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"(", " ", 
         RowBox[{
          FractionBox["#1", 
           SqrtBox[
            RowBox[{"#1", ".", "#1"}]]], "-", 
          FractionBox["#2", 
           SqrtBox[
            RowBox[{"#2", ".", "#2"}]]]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"L1", " ", "m1"}], "w1"], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], " ", 
           FractionBox["#1", 
            SqrtBox[
             RowBox[{"#1", ".", "#1"}]]]}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["#2", 
            SqrtBox[
             RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"OP", "[", 
          RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
         RowBox[{"n1", "[", "zk", "]"}]}], 
        SqrtBox[
         RowBox[{"#1", ".", "#1"}]]], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"L1", " ", "m1"}], "w1"], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["1", "2"], " ", 
           FractionBox["#1", 
            SqrtBox[
             RowBox[{"#1", ".", "#1"}]]]}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["1", "2"], 
           FractionBox["#2", 
            SqrtBox[
             RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711798934539425*^9, 3.711798938701571*^9}, {
  3.711799189341434*^9, 3.711799246593286*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.711799210158349*^9, 3.711799247283804*^9}, 
   3.711981394242223*^9, 3.711982416116228*^9, 3.71198396512889*^9, 
   3.711990715178467*^9, 3.711994476361021*^9, 3.712030498775118*^9, 
   3.714930961739407*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.711799210158349*^9, 3.711799247283804*^9}, 
   3.711981394242223*^9, 3.711982416116228*^9, 3.71198396512889*^9, 
   3.711990715178467*^9, 3.711994476361021*^9, 3.712030498775118*^9, 
   3.714930961780752*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["null space (used to control yaw)", "Subsection",
 CellChangeTimes->{{3.7117995407115507`*^9, 3.711799542677973*^9}, {
  3.711981524518919*^9, 3.711981558300517*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"L1", " ", "m1"}], "w1"], 
          SqrtBox[
           RowBox[{
            RowBox[{"NT", "[", "zk", "]"}], ".", 
            RowBox[{"NT", "[", "zk", "]"}]}]], " ", 
          FractionBox["#1", 
           SqrtBox[
            RowBox[{"#1", ".", "#1"}]]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"L2", " ", "m2"}], "w2"], 
          SqrtBox[
           RowBox[{
            RowBox[{"NT", "[", "zk", "]"}], ".", 
            RowBox[{"NT", "[", "zk", "]"}]}]], 
          FractionBox["#2", 
           SqrtBox[
            RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711799487432815*^9, 3.711799496421398*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.711799497239585*^9, 3.711981528067176*^9, 
  3.7119824184338913`*^9, 3.7119839683568573`*^9, 3.711990715278047*^9, 
  3.711994477650066*^9, 3.712030498927154*^9, 3.7149309618371477`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Next: determine components along OP[n1].nT and OP[n2].nT so as to control \
torque of nT (along direction sk[nT].n1)
(Note that u1,Skew[n1].nT , OP[n1].nT forms a basis for uav 1)\
\>", "Subsection",
 CellChangeTimes->{{3.711981196703929*^9, 3.711981232207962*^9}, {
  3.711981344336151*^9, 3.711981359230788*^9}, {3.711981584108747*^9, 
  3.7119816319651747`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Idea: \[Tau]NT = B\[Tau]NT.u + A\[Tau]NT \nB\[Tau]NT[zk] . [ ? OP[n1].nT, ? \
OP[n2].nT]\n\[Tau]NT = Skew[nT].",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"Norm", "[", "NT", "]"}]], TraditionalForm]]],
 "(w1 ",
 Cell[BoxData[
  FormBox[
   FractionBox["A1", "L1"], TraditionalForm]]],
 "+w2 ",
 Cell[BoxData[
  FormBox[
   FractionBox["A2", "L2"], TraditionalForm]]],
 ")"
}], "Subsubsection",
 CellChangeTimes->{{3.711981287986918*^9, 3.7119813362818623`*^9}, {
   3.711981406234088*^9, 3.7119815071244698`*^9}, {3.711981595864685*^9, 
   3.711981600454723*^9}, 3.711994481565888*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{
           RowBox[{"NT", "[", "zk", "]"}], ".", 
           RowBox[{"NT", "[", "zk", "]"}]}]]], 
        RowBox[{
         RowBox[{"Skew", "[", 
          RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            FractionBox["w1", 
             RowBox[{"L1", " "}]], 
            FractionBox["1", "m1"], 
            FractionBox["#1", 
             SqrtBox[
              RowBox[{"#1", ".", "#1"}]]]}], "+", 
           RowBox[{
            FractionBox["w2", 
             RowBox[{"L2", " "}]], 
            FractionBox["1", "m2"], 
            FractionBox["#2", 
             SqrtBox[
              RowBox[{"#2", ".", "#2"}]]]}]}], ")"}]}]}], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          FractionBox["#1", 
           SqrtBox[
            RowBox[{"#1", ".", "#1"}]]], ",", 
          FractionBox["#2", 
           SqrtBox[
            RowBox[{"#2", ".", "#2"}]]]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"equality", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
    RowBox[{
     RowBox[{"zlR", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], "]"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["#1", 
           SqrtBox[
            RowBox[{"#1", ".", "#1"}]]], "-", 
          FractionBox["#2", 
           SqrtBox[
            RowBox[{"#2", ".", "#2"}]]]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"L1", " ", "m1"}], "w1"], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["#1", 
            SqrtBox[
             RowBox[{"#1", ".", "#1"}]]]}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["#2", 
            SqrtBox[
             RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"equality", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
    RowBox[{
     RowBox[{"zlR", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], "]"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["#", 
             SqrtBox[
              RowBox[{"#", ".", "#"}]]], "&"}], ")"}], "[", 
          RowBox[{
           RowBox[{"Skew", "[", 
            RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
           RowBox[{"n2", "[", "zk", "]"}]}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}], "+", 
           RowBox[{
            RowBox[{"n2", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]}], ")"}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"L1", " ", "m1"}], "w1"], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["#1", 
            SqrtBox[
             RowBox[{"#1", ".", "#1"}]]]}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"]}], 
           SqrtBox[
            RowBox[{
             RowBox[{"NT", "[", "zk", "]"}], ".", 
             RowBox[{"NT", "[", "zk", "]"}]}]], 
           FractionBox["#2", 
            SqrtBox[
             RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["#", 
            SqrtBox[
             RowBox[{"#", ".", "#"}]]], "&"}], ")"}], "[", 
         RowBox[{
          RowBox[{"Skew", "[", 
           RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
          RowBox[{"n2", "[", "zk", "]"}]}], "]"}], ")"}], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             FractionBox[
              RowBox[{"L1", " ", "m1"}], "w1"], 
             SqrtBox[
              RowBox[{
               RowBox[{"NT", "[", "zk", "]"}], ".", 
               RowBox[{"NT", "[", "zk", "]"}]}]]}], 
            RowBox[{
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "+", 
             RowBox[{
              RowBox[{"n2", "[", "zk", "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}]}]], 
           FractionBox["#1", 
            SqrtBox[
             RowBox[{"#1", ".", "#1"}]]]}], ",", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"L2", " ", "m2"}], "w2"], 
              SqrtBox[
               RowBox[{
                RowBox[{"NT", "[", "zk", "]"}], ".", 
                RowBox[{"NT", "[", "zk", "]"}]}]]}], 
             RowBox[{
              RowBox[{
               RowBox[{"n1", "[", "zk", "]"}], ".", 
               RowBox[{"nT", "[", "zk", "]"}]}], "+", 
              RowBox[{
               RowBox[{"n2", "[", "zk", "]"}], ".", 
               RowBox[{"nT", "[", "zk", "]"}]}]}]]}], 
           FractionBox["#2", 
            SqrtBox[
             RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"equality", "[", 
      RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
    RowBox[{
     RowBox[{"zlR", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], "]"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["#", 
            SqrtBox[
             RowBox[{"#", ".", "#"}]]], "&"}], ")"}], "[", 
         RowBox[{
          RowBox[{"Skew", "[", 
           RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
          RowBox[{"n1", "[", "zk", "]"}]}], "]"}], ")"}], "-", 
       RowBox[{
        RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              FractionBox[
               RowBox[{"L1", " ", "m1"}], "w1"], 
              SqrtBox[
               RowBox[{
                RowBox[{"NT", "[", "zk", "]"}], ".", 
                RowBox[{"NT", "[", "zk", "]"}]}]]}], 
             RowBox[{
              RowBox[{
               RowBox[{"n1", "[", "zk", "]"}], ".", 
               RowBox[{"nT", "[", "zk", "]"}]}], "+", 
              RowBox[{
               RowBox[{"n2", "[", "zk", "]"}], ".", 
               RowBox[{"nT", "[", "zk", "]"}]}]}]]}], 
           FractionBox["#1", 
            SqrtBox[
             RowBox[{"#1", ".", "#1"}]]]}], ",", 
          RowBox[{
           FractionBox[
            RowBox[{
             FractionBox[
              RowBox[{"L2", " ", "m2"}], "w2"], 
             SqrtBox[
              RowBox[{
               RowBox[{"NT", "[", "zk", "]"}], ".", 
               RowBox[{"NT", "[", "zk", "]"}]}]]}], 
            RowBox[{
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "+", 
             RowBox[{
              RowBox[{"n2", "[", "zk", "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}]}]], 
           FractionBox["#2", 
            SqrtBox[
             RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711796437151889*^9, 3.7117965716744757`*^9}, {
   3.711796626786145*^9, 3.711796644625087*^9}, 3.7117969917605543`*^9, 
   3.711797155960827*^9, {3.711797550283099*^9, 3.711797552559038*^9}, {
   3.711797869038931*^9, 3.7117980124103117`*^9}, {3.71179822011264*^9, 
   3.711798290987632*^9}, {3.711798360369833*^9, 3.711798383820175*^9}, {
   3.71179888481815*^9, 3.711798957073456*^9}, {3.7117990569017963`*^9, 
   3.71179905967979*^9}, 3.711981652702331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711797969072729*^9, 3.711798004453987*^9, 3.711798292085867*^9, 
   3.711798385013888*^9, {3.711798895345105*^9, 3.711798904478547*^9}, {
   3.7117989415177193`*^9, 3.7117989582507277`*^9}, 3.711799057599749*^9, 
   3.71198164869748*^9, 3.711982420726091*^9, 3.7119839712385607`*^9, 
   3.7119907153524523`*^9, 3.711994482616117*^9, 3.7120304990134153`*^9, 
   3.7149309619206057`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711797969072729*^9, 3.711798004453987*^9, 3.711798292085867*^9, 
   3.711798385013888*^9, {3.711798895345105*^9, 3.711798904478547*^9}, {
   3.7117989415177193`*^9, 3.7117989582507277`*^9}, 3.711799057599749*^9, 
   3.71198164869748*^9, 3.711982420726091*^9, 3.7119839712385607`*^9, 
   3.7119907153524523`*^9, 3.711994482616117*^9, 3.7120304990134153`*^9, 
   3.7149309619792356`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711797969072729*^9, 3.711798004453987*^9, 3.711798292085867*^9, 
   3.711798385013888*^9, {3.711798895345105*^9, 3.711798904478547*^9}, {
   3.7117989415177193`*^9, 3.7117989582507277`*^9}, 3.711799057599749*^9, 
   3.71198164869748*^9, 3.711982420726091*^9, 3.7119839712385607`*^9, 
   3.7119907153524523`*^9, 3.711994482616117*^9, 3.7120304990134153`*^9, 
   3.7149309620371227`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711797969072729*^9, 3.711798004453987*^9, 3.711798292085867*^9, 
   3.711798385013888*^9, {3.711798895345105*^9, 3.711798904478547*^9}, {
   3.7117989415177193`*^9, 3.7117989582507277`*^9}, 3.711799057599749*^9, 
   3.71198164869748*^9, 3.711982420726091*^9, 3.7119839712385607`*^9, 
   3.7119907153524523`*^9, 3.711994482616117*^9, 3.7120304990134153`*^9, 
   3.714930962099329*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.711797969072729*^9, 3.711798004453987*^9, 3.711798292085867*^9, 
   3.711798385013888*^9, {3.711798895345105*^9, 3.711798904478547*^9}, {
   3.7117989415177193`*^9, 3.7117989582507277`*^9}, 3.711799057599749*^9, 
   3.71198164869748*^9, 3.711982420726091*^9, 3.7119839712385607`*^9, 
   3.7119907153524523`*^9, 3.711994482616117*^9, 3.7120304990134153`*^9, 
   3.714930962161771*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["null space (used to control theta)", "Subsection",
 CellChangeTimes->{{3.7117995562487164`*^9, 3.711799557574198*^9}, {
  3.711981666518155*^9, 3.7119816689220343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"equality", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
       "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             FractionBox[
              RowBox[{"L1", " ", "m1"}], "w1"], 
             SqrtBox[
              RowBox[{
               RowBox[{"NT", "[", "zk", "]"}], ".", 
               RowBox[{"NT", "[", "zk", "]"}]}]]}], 
            RowBox[{
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}], "+", 
             RowBox[{
              RowBox[{"n2", "[", "zk", "]"}], ".", 
              RowBox[{"nT", "[", "zk", "]"}]}]}]]}], 
          FractionBox["1", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]], 
          FractionBox["#1", 
           SqrtBox[
            RowBox[{"#1", ".", "#1"}]]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{
            FractionBox[
             RowBox[{"L2", " ", "m2"}], "w2"], 
            SqrtBox[
             RowBox[{
              RowBox[{"NT", "[", "zk", "]"}], ".", 
              RowBox[{"NT", "[", "zk", "]"}]}]]}], 
           RowBox[{
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], "+", 
            RowBox[{
             RowBox[{"n2", "[", "zk", "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}]}]], 
          FractionBox[
           RowBox[{"-", "1"}], 
           RowBox[{
            RowBox[{"n2", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]], 
          FractionBox["#2", 
           SqrtBox[
            RowBox[{"#2", ".", "#2"}]]]}]}], "]"}]}], "&"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], ",", 
      RowBox[{
       RowBox[{"OP", "[", 
        RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], "/.", 
    "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"equality", "[", 
     RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
   RowBox[{
    RowBox[{"zlR", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}],
    "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711799559073442*^9, 3.711799639145729*^9}, {
  3.711799685855318*^9, 3.711799748016958*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.711799581338725*^9, 3.711799639921884*^9}, {
   3.711799710885358*^9, 3.711799748735498*^9}, 3.7119816746328993`*^9, 
   3.7119824237313004`*^9, 3.711983973805669*^9, 3.711990715675435*^9, 
   3.711994484278268*^9, 3.712030499494961*^9, 3.714930962249241*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["second step", "Section",
 CellChangeTimes->{{3.711982170720257*^9, 3.711982180461493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uv", "=", 
   RowBox[{
    FractionBox["#", 
     SqrtBox[
      RowBox[{"#", ".", "#"}]]], "&"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7119839889995327`*^9, 3.711983996330019*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ubar2nd", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
         "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ubar1st", "[", 
         RowBox[{"z", ",", "T"}], "]"}], "+", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"L1", " ", "m1"}], "w1"], 
               RowBox[{"(", 
                RowBox[{"\[Tau]\[Psi]", "+", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]], 
                  FractionBox["1", "2"], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"OP", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n1", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#1", 
                SqrtBox[
                 RowBox[{"#1", ".", "#1"}]]]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"L1", " ", "m1"}], "w1"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}]], "\[Tau]\[Theta]"}], 
                 "+", 
                 RowBox[{
                  FractionBox[
                   SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"n2", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}]}]], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"Skew", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n1", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#2", 
                SqrtBox[
                 RowBox[{"#2", ".", "#2"}]]]}]}], ")"}], "&"}], "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Skew", "[", 
              RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], ",", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"L2", " ", "m2"}], "w2"], 
               RowBox[{"(", 
                RowBox[{"\[Tau]\[Psi]", "+", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]], 
                  FractionBox["1", "2"], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"OP", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#1", 
                SqrtBox[
                 RowBox[{"#1", ".", "#1"}]]]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"L2", " ", "m2"}], "w2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{" ", 
                    RowBox[{
                    RowBox[{"n2", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}]}]], "\[Tau]\[Theta]"}], 
                 "+", 
                 RowBox[{
                  FractionBox[
                   SqrtBox[
                    RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"n2", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}]}]], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"Skew", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#2", 
                SqrtBox[
                 RowBox[{"#2", ".", "#2"}]]]}]}], ")"}], "&"}], "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Skew", "[", 
              RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], ",", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", "\[Tau]\[Tau]z"}], 
          "}"}], "\[Rule]", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A\[Tau]NT", "[", "z", "]"}], "+", 
            RowBox[{
             RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
             RowBox[{"ubar1st", "[", 
              RowBox[{"z", ",", "T"}], "]"}]}]}], ")"}]}]}], " ", "]"}]}], "/.",
       "PhysicalConstants"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ubar2nd", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
         "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ubar1st", "[", 
         RowBox[{"z", ",", "T"}], "]"}], "+", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"L1", " ", "m1"}], "w1"], 
               RowBox[{"(", 
                RowBox[{"\[Tau]\[Psi]", "+", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]], 
                  FractionBox["1", "2"], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"OP", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n1", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#1", 
                SqrtBox[
                 RowBox[{"#1", ".", "#1"}]]]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"L1", " ", "m1"}], "w1"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}]], "\[Tau]\[Theta]"}], 
                 "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"w1", " ", "+", "w2"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "+", " ", 
                    RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}]}]], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"Skew", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n1", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#2", 
                SqrtBox[
                 RowBox[{"#2", ".", "#2"}]]]}]}], ")"}], "&"}], "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Skew", "[", 
              RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], ",", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"L2", " ", "m2"}], "w2"], 
               RowBox[{"(", 
                RowBox[{"\[Tau]\[Psi]", "+", 
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}]], 
                  FractionBox["1", "2"], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"OP", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#1", 
                SqrtBox[
                 RowBox[{"#1", ".", "#1"}]]]}], "-", 
              RowBox[{
               FractionBox[
                RowBox[{"L2", " ", "m2"}], "w2"], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  FractionBox["1", 
                   RowBox[{" ", 
                    RowBox[{
                    RowBox[{"n2", "[", "zk", "]"}], ".", 
                    RowBox[{"nT", "[", "zk", "]"}]}]}]], "\[Tau]\[Theta]"}], 
                 "+", 
                 RowBox[{
                  FractionBox[
                   RowBox[{
                    RowBox[{"NT", "[", "zk", "]"}], ".", 
                    RowBox[{"NT", "[", "zk", "]"}]}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"w1", " ", "+", "w2"}], ")"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "+", " ", 
                    RowBox[{
                    RowBox[{"n1", "[", "zk", "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}]}]], 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", 
                    "\[Tau]\[Tau]z"}], "}"}], ".", 
                   RowBox[{"uv", "[", 
                    RowBox[{
                    RowBox[{"Skew", "[", 
                    RowBox[{"nT", "[", "zk", "]"}], "]"}], ".", 
                    RowBox[{"n2", "[", "zk", "]"}]}], "]"}]}]}]}], ")"}], 
               FractionBox["#2", 
                SqrtBox[
                 RowBox[{"#2", ".", "#2"}]]]}]}], ")"}], "&"}], "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Skew", "[", 
              RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], ",", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[Tau]\[Tau]x", ",", "\[Tau]\[Tau]y", ",", "\[Tau]\[Tau]z"}], 
          "}"}], "\[Rule]", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z"}], "}"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"A\[Tau]NT", "[", "z", "]"}], "+", 
            RowBox[{
             RowBox[{"B\[Tau]NT", "[", "zk", "]"}], ".", 
             RowBox[{"ubar1st", "[", 
              RowBox[{"z", ",", "T"}], "]"}]}]}], ")"}]}]}], " ", "]"}]}], "/.",
       "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "now", " ", "torque", " ", "of", " ", "thrust", " ", "vector", " ", "is", 
     " ", "also", " ", 
     RowBox[{"controlled", ":", " ", 
      RowBox[{
      "missing", " ", "the", " ", "theta", "  ", "and", " ", "yaw", " ", 
       "control"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Chop", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"m", " ", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{"nT", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"OP", "[", 
            RowBox[{"nT", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}], "-", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"RA", "[", "#1", "]"}], "+", 
          RowBox[{
           RowBox[{"RB", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
           RowBox[{"ubar2nd", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}]}]}], ")"}]}], " ", "&"}], "[", 
      RowBox[{
       RowBox[{"zlR", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.2", ",", "1", ",", "2", ",", "2", ",", "0"}], 
        "}"}]}], "]"}], "/.", "PhysicalConstants"}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.7119821634733047`*^9, {3.711982469871813*^9, 3.711982486272314*^9}, {
   3.711982522445977*^9, 3.7119825229893217`*^9}, {3.711982592791873*^9, 
   3.711982614584248*^9}, {3.711984626576253*^9, 3.7119846281379347`*^9}, 
   3.711994510572584*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.010641456330317154`"}], ",", 
   RowBox[{"-", "0.01157369129374966`"}], ",", 
   RowBox[{"-", "0.04746376593789117`"}], ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", "11.666208768378329`"}], ",", "0.4397589542724234`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.711982471659574*^9, 3.7119824879067917`*^9}, {
   3.711983976560623*^9, 3.7119839986203814`*^9}, 3.7119907160608587`*^9, {
   3.7119944875003643`*^9, 3.711994511963332*^9}, 3.712030500127448*^9, 
   3.7149309627776957`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["check equality (simplification above)", "Section",
 CellChangeTimes->{{3.711962907993671*^9, 3.7119629097890778`*^9}, {
  3.711982754652317*^9, 3.711982761074706*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zrandom", "=", 
   RowBox[{"zlR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"test1", "=", 
    FractionBox[
     SqrtBox[
      RowBox[{
       RowBox[{"NT", "[", "zk", "]"}], ".", 
       RowBox[{"NT", "[", "zk", "]"}]}]], 
     RowBox[{
      RowBox[{
       RowBox[{"n1", "[", "zk", "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], "+", 
      RowBox[{
       RowBox[{"n2", "[", "zk", "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}]}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     FractionBox[
      RowBox[{
       RowBox[{"NT", "[", "zk", "]"}], ".", 
       RowBox[{"NT", "[", "zk", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"w1", " ", "+", 
         RowBox[{"w2", " ", 
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], ".", 
           RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"w2", "+", 
         RowBox[{"w1", " ", 
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], ".", 
           RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test2", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"NT", "[", "zk", "]"}], ".", 
     RowBox[{"NT", "[", "zk", "]"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"w1", " ", "+", "w2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "+", " ", 
       RowBox[{
        RowBox[{"n1", "[", "zk", "]"}], ".", 
        RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"test1", "-", "test2"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"zk", "\[Rule]", 
       RowBox[{"zrandom", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}]}], "]"}]}], "/.", 
    "PhysicalConstants"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.711965468901119*^9, 3.711965524937368*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.711965469444244*^9, {3.711965506274419*^9, 3.711965525723867*^9}, 
   3.711982762365671*^9, 3.711984001506315*^9, 3.711990716098032*^9, 
   3.7119945179982452`*^9, 3.712030500210408*^9, 3.7149309628052692`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Theta] control\n",
 Cell[BoxData[
  RowBox[{"\[Theta]", "=", 
   RowBox[{"arccos", 
    RowBox[{"(", 
     RowBox[{"n1", ".", "n2"}], ")"}]}]}]],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}],
 "\n",
 Cell[BoxData[{
  RowBox[{
   OverscriptBox["\[Theta]", "."], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"n1", ".", "n2"}], ")"}], "2"]}]]]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n1dot", ".", "n2"}], "+", 
      RowBox[{"n1", ".", "n2dot"}]}], ")"}]}]}], "\[IndentingNewLine]", 
  RowBox[{
   OverscriptBox["\[Theta]", ".."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"n1", ".", "n2"}], ")"}], "2"]}]]]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n1ddot", ".", "n2"}], "+", 
        RowBox[{"n1", ".", "n2ddot"}]}], ")"}]}], "+"}], 
    "..."}]}], "\[IndentingNewLine]", 
  RowBox[{
   OverscriptBox["\[Theta]", ".."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"n1", ".", "n2"}], ")"}], "2"]}]]]}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["A1", "L1"], ".", "n2"}], "+", 
        RowBox[{"n1", ".", 
         FractionBox["A2", "L"]}]}], ")"}]}], "+"}], 
    "..."}]}], "\[IndentingNewLine]", 
  RowBox[{
   OverscriptBox["\[Theta]", ".."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"n1", ".", "n2"}], ")"}], "2"]}]]]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"OP", "[", "n1", "]"}], ".", "nT"}], "L1"], ".", "n2"}], 
         "+", 
         RowBox[{"n1", ".", 
          FractionBox[
           RowBox[{
            RowBox[{"OP", "[", "n2", "]"}], ".", "nT"}], "L"]}]}], ")"}]}], 
      "+"}], "..."}], " ", 
    RowBox[{"(", 
     RowBox[{"components", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"OP", "[", "n1", "]"}], ".", "nT"}], "L1"], ".", "n2"}], " ",
       "and", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"OP", "[", "n2", "]"}], ".", "nT"}], "L2"], ".", "n1"}], " ",
       "do", " ", "not", " ", "affect", " ", 
      RowBox[{"yaw", "!"}], " ", "Important"}], ")"}]}]}]}],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}]
}], "Section",
 CellChangeTimes->{{3.711799877597115*^9, 3.711799880979237*^9}, {
  3.711981702705323*^9, 3.711981973109995*^9}, {3.7119828174221287`*^9, 
  3.711982838664281*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ubar3rd", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
         "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ubar2nd", "[", 
        RowBox[{"z", ",", 
         RowBox[{"{", 
          RowBox[{
          "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
           "\[Tau]\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Tau]\[Tau]\[Theta]", "\[Rule]", " ", 
         RowBox[{
          FractionBox[
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}]], 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"n2", "[", "zk", "]"}], ".", 
               RowBox[{"uv", "[", 
                RowBox[{
                 RowBox[{"OP", "[", 
                  RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
                 RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], 
              RowBox[{"w1", " ", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"nT", "[", "zk", "]"}]}]}]], "+", 
             FractionBox[
              RowBox[{
               RowBox[{"n1", "[", "zk", "]"}], ".", 
               RowBox[{"uv", "[", 
                RowBox[{
                 RowBox[{"OP", "[", 
                  RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
                 RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], 
              RowBox[{"w2", "  ", 
               RowBox[{
                RowBox[{"n2", "[", "zk", "]"}], ".", 
                RowBox[{"nT", "[", "zk", "]"}]}]}]]}], ")"}]], 
          RowBox[{"(", 
           RowBox[{"\[Tau]\[Theta]", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A\[Theta]", "[", "z", "]"}], "+", 
              RowBox[{
               RowBox[{"B\[Theta]", "[", "zk", "]"}], ".", 
               RowBox[{"ubar2nd", "[", 
                RowBox[{"z", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                   "0", ",", "0"}], "}"}]}], "]"}]}]}], ")"}]}], ")"}]}]}], 
        "}"}]}], "/.", "PhysicalConstants"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ubar3rd", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
         ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
         "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
         "v2y_", ",", "v2z_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
         "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"ubar2nd", "[", 
        RowBox[{"z", ",", 
         RowBox[{"{", 
          RowBox[{
          "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
           "\[Tau]\[Tau]\[Theta]", ",", "\[Tau]\[Psi]"}], "}"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Tau]\[Tau]\[Theta]", "\[Rule]", " ", 
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["w2", "2"], " ", "+", " ", 
               RowBox[{"w1", " ", "w2", " ", 
                RowBox[{
                 RowBox[{"n1", "[", "zk", "]"}], ".", 
                 RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["w1", "2"], " ", "+", 
               RowBox[{"w1", " ", "w2", " ", 
                RowBox[{
                 RowBox[{"n1", "[", "zk", "]"}], ".", 
                 RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             SqrtBox[
              RowBox[{
               RowBox[{"NT", "[", "zk", "]"}], ".", 
               RowBox[{"NT", "[", "zk", "]"}]}]], ")"}], "3"]], 
          RowBox[{"(", 
           RowBox[{"\[Tau]\[Theta]", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"A\[Theta]", "[", "z", "]"}], "+", 
              RowBox[{
               RowBox[{"B\[Theta]", "[", "zk", "]"}], ".", 
               RowBox[{"ubar2nd", "[", 
                RowBox[{"z", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                   "0", ",", "0"}], "}"}]}], "]"}]}]}], ")"}]}], ")"}]}]}], 
        "}"}]}], "/.", "PhysicalConstants"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", 
    RowBox[{"now", " ", "theta", " ", "is", " ", "also", " ", 
     RowBox[{"controlled", ":", " ", 
      RowBox[{"missing", " ", "the", " ", "yaw"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Chop", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"m", " ", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{"nT", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"OP", "[", 
            RowBox[{"nT", "[", 
             RowBox[{"#1", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "5", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}], "-", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"RA", "[", "#1", "]"}], "+", 
          RowBox[{
           RowBox[{"RB", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
           RowBox[{"ubar3rd", "[", 
            RowBox[{"#1", ",", "#2"}], "]"}]}]}], ")"}]}], " ", "&"}], "[", 
      RowBox[{"zrandom", ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.2", ",", "1", ",", "2", ",", "2", ",", "0"}], 
        "}"}]}], "]"}], "/.", "PhysicalConstants"}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.711982541939345*^9, 3.711982586173183*^9}, 
   3.71198463315736*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.012129053008681188`"}], ",", "0.03607982166184235`", ",", 
   RowBox[{"-", "0.03242117428413531`"}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", 
   RowBox[{"-", "1.0029086327362873`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7119840127046328`*^9, 3.711990718562212*^9, 
  3.711994524273947*^9, 3.712030503054448*^9, 3.71493096547227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["check equality (simplification above)", "Subsubsection",
 CellChangeTimes->{3.711982779689425*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zrandom", "=", 
   RowBox[{"zlR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"test1", "=", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"n2", "[", "zk", "]"}], ".", 
        RowBox[{"uv", "[", 
         RowBox[{
          RowBox[{"OP", "[", 
           RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
          RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], 
       RowBox[{"w1", " ", 
        RowBox[{
         RowBox[{"n1", "[", "zk", "]"}], ".", 
         RowBox[{"nT", "[", "zk", "]"}]}]}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"n1", "[", "zk", "]"}], ".", 
        RowBox[{"uv", "[", 
         RowBox[{
          RowBox[{"OP", "[", 
           RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
          RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], 
       RowBox[{"w2", "  ", 
        RowBox[{
         RowBox[{"n2", "[", "zk", "]"}], ".", 
         RowBox[{"nT", "[", "zk", "]"}]}]}]]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w2", 
         FractionBox[
          RowBox[{
           RowBox[{"n2", "[", "zk", "]"}], ".", 
           RowBox[{"OP", "[", 
            RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
           RowBox[{"n2", "[", "zk", "]"}]}], 
          RowBox[{"w1", " ", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]}]], 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"#", ".", "#"}], "&"}], "[", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], "]"}]]]}], "+", 
        RowBox[{"w1", 
         FractionBox[
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], ".", 
           RowBox[{"OP", "[", 
            RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
           RowBox[{"n1", "[", "zk", "]"}]}], 
          RowBox[{"w2", "  ", 
           RowBox[{
            RowBox[{"n2", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]}]], 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"#", ".", "#"}], "&"}], "[", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], "]"}]]]}]}], ")"}], 
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         RowBox[{"NT", "[", "zk", "]"}], ".", 
         RowBox[{"NT", "[", "zk", "]"}]}]]]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w2", 
         FractionBox[
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], 
          RowBox[{"w1", " ", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]}]], 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"#", ".", "#"}], "&"}], "[", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], "]"}]]]}], "+", 
        RowBox[{"w1", 
         FractionBox[
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], 
          RowBox[{"w2", "  ", 
           RowBox[{
            RowBox[{"n2", "[", "zk", "]"}], ".", 
            RowBox[{"nT", "[", "zk", "]"}]}]}]], 
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"#", ".", "#"}], "&"}], "[", 
            RowBox[{
             RowBox[{"OP", "[", 
              RowBox[{"n2", "[", "zk", "]"}], "]"}], ".", 
             RowBox[{"nT", "[", "zk", "]"}]}], "]"}]]]}]}], ")"}], 
      FractionBox["1", 
       SqrtBox[
        RowBox[{
         RowBox[{"NT", "[", "zk", "]"}], ".", 
         RowBox[{"NT", "[", "zk", "]"}]}]]]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"w2", 
        FractionBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], 
         RowBox[{"w1", " ", 
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], ".", 
           RowBox[{"nT", "[", "zk", "]"}]}]}]], 
        FractionBox["1", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["w2", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]}]]]}], 
       "+", 
       RowBox[{"w1", 
        FractionBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], 
         RowBox[{"w2", "  ", 
          RowBox[{
           RowBox[{"n2", "[", "zk", "]"}], ".", 
           RowBox[{"nT", "[", "zk", "]"}]}]}]], 
        FractionBox["1", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["w1", "2"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], 
            ")"}]}]]]}]}], ")"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SqrtBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]], 
        RowBox[{"w1", " ", 
         RowBox[{
          RowBox[{"n1", "[", "zk", "]"}], ".", 
          RowBox[{"nT", "[", "zk", "]"}]}]}]], "+", 
       FractionBox[
        SqrtBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]], 
        RowBox[{"w2", "  ", 
         RowBox[{
          RowBox[{"n2", "[", "zk", "]"}], ".", 
          RowBox[{"nT", "[", "zk", "]"}]}]}]]}], ")"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      SqrtBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"w1", " ", 
          RowBox[{"(", 
           RowBox[{"w1", " ", "+", 
            RowBox[{"w2", " ", 
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]], "+", 
        FractionBox["1", 
         RowBox[{"w2", " ", 
          RowBox[{"(", 
           RowBox[{"w2", " ", "+", " ", 
            RowBox[{"w1", " ", 
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]]}], ")"}], 
      SqrtBox[
       RowBox[{
        RowBox[{"NT", "[", "zk", "]"}], ".", 
        RowBox[{"NT", "[", "zk", "]"}]}]]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      SqrtBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]], 
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox["w1", "2"], "+", 
         SuperscriptBox["w2", "2"], " ", "+", " ", 
         RowBox[{"2", "w1", " ", "w2", " ", 
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], ".", 
           RowBox[{"n2", "[", "zk", "]"}]}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w1", "2"], " ", "+", 
           RowBox[{"w1", " ", "w2", " ", 
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w2", "2"], " ", "+", " ", 
           RowBox[{"w1", " ", "w2", " ", 
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]], ")"}], 
      SqrtBox[
       RowBox[{
        RowBox[{"NT", "[", "zk", "]"}], ".", 
        RowBox[{"NT", "[", "zk", "]"}]}]]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      SqrtBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]], 
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"w1", "+", "w2"}], ")"}], "2"], " ", "+", " ", 
         RowBox[{"2", "w1", " ", "w2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}], "-", "1"}], ")"}]}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w1", "2"], " ", "+", 
           RowBox[{"w1", " ", "w2", " ", 
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["w2", "2"], " ", "+", " ", 
           RowBox[{"w1", " ", "w2", " ", 
            RowBox[{
             RowBox[{"n1", "[", "zk", "]"}], ".", 
             RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]], ")"}], 
      SqrtBox[
       RowBox[{
        RowBox[{"NT", "[", "zk", "]"}], ".", 
        RowBox[{"NT", "[", "zk", "]"}]}]]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"test2", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n1", "[", "zk", "]"}], ".", 
           RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}], ")"}]], 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         SqrtBox[
          RowBox[{
           RowBox[{"NT", "[", "zk", "]"}], ".", 
           RowBox[{"NT", "[", "zk", "]"}]}]], ")"}], "3"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["w1", "2"], " ", "+", 
          RowBox[{"w1", " ", "w2", " ", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["w2", "2"], " ", "+", " ", 
          RowBox[{"w1", " ", "w2", " ", 
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}]}]}], ")"}]}]], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"test1", "-", "test2"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"zk", "\[Rule]", 
       RowBox[{"zrandom", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}]}], "]"}]}], "/.", 
    "PhysicalConstants"}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.711962930584343*^9, 3.711963401878875*^9}, {
   3.7119635045366907`*^9, 3.711963528070983*^9}, {3.711963590474814*^9, 
   3.711963612964727*^9}, 3.711964001615707*^9, 3.711982706401925*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.711962949038746*^9, 3.7119629541224833`*^9}, {
   3.711963067101692*^9, 3.711963125750436*^9}, 3.711963225651379*^9, 
   3.7119632557688417`*^9, 3.711963315561133*^9, {3.711963372709361*^9, 
   3.711963402910801*^9}, 3.7119635298487062`*^9, {3.71196361492181*^9, 
   3.7119636168996773`*^9}, 3.711982788451619*^9, 3.7119840129676456`*^9, 
   3.711990718677451*^9, 3.711994526187808*^9, 3.71203050329683*^9, 
   3.714930965527466*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\[Psi] control: Only components along OP[n1].nT and OP[n2].nT left!\n",
 Cell[BoxData[
  RowBox[{"\[Psi]", "=", 
   RowBox[{
    FractionBox["1", "2"], "arctan", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"e1", ".", "nH"}], ")"}], "2"], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"e2", ".", "nH"}], ")"}], "2"]}], " ", ",", 
      RowBox[{"2", 
       RowBox[{"e1", ".", "nH"}], " ", 
       RowBox[{"e2", ".", "nH"}]}]}], ")"}]}]}]],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}],
 "\n",
 Cell[BoxData[
  RowBox[{
   OverscriptBox["\[Psi]", "."], "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"e2", ".", "nH"}], " ", 
      RowBox[{"e1", ".", "nHdot"}]}], "-", 
     RowBox[{
      RowBox[{"e1", ".", "nH"}], " ", 
      RowBox[{"e2", ".", "nHdot"}]}]}], ")"}]}]],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}],
 "\n",
 Cell[BoxData[{
  RowBox[{
   OverscriptBox["\[Psi]", ".."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"e2", ".", "nH"}]}], " ", 
        RowBox[{"e1", ".", "nHddot"}]}], "+", 
       RowBox[{
        RowBox[{"e1", ".", "nH"}], " ", 
        RowBox[{"e2", ".", "nHddot"}]}]}], ")"}], "+"}], 
    "..."}]}], "\[IndentingNewLine]", 
  RowBox[{
   OverscriptBox["\[Psi]", ".."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"e2", ".", "nH"}]}], " ", 
        RowBox[{"e1", ".", 
         FractionBox[
          RowBox[{
           RowBox[{"OP", "[", "e3", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              OverscriptBox["n", ".."], "1"}], "-", 
             RowBox[{
              OverscriptBox["n", ".."], "2"}]}], ")"}]}], "..."]}]}], "+", 
       RowBox[{
        RowBox[{"e1", ".", "nH"}], " ", 
        RowBox[{"e2", ".", 
         FractionBox[
          RowBox[{
           RowBox[{"OP", "[", "e3", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              OverscriptBox["n", ".."], "1"}], "-", 
             RowBox[{
              OverscriptBox["n", ".."], "2"}]}], ")"}]}], "..."]}]}]}], ")"}],
      "+"}], "..."}]}], "\[IndentingNewLine]", 
  RowBox[{
   OverscriptBox["\[Psi]", ".."], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"e2", ".", "nH"}]}], " ", 
        RowBox[{"e1", ".", 
         FractionBox[
          RowBox[{
           RowBox[{"OP", "[", "e3", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"?", "(OP[n1].nT)-?OP[n2].nT)"}]}]}], "..."]}]}], "+", 
       RowBox[{
        RowBox[{"e1", ".", "nH"}], " ", 
        RowBox[{"e2", ".", 
         FractionBox[
          RowBox[{
           RowBox[{"OP", "[", "e3", "]"}], ".", 
           RowBox[{"(", 
            RowBox[{"?", "(OP[n1].nT)-?OP[n2].nT)"}]}]}], "..."]}]}]}], ")"}],
      "+"}], "..."}]}]}],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}],
 "\neasier to check this yaw, but there is some equilavence that needs to be \
taken care because\narctan(e1.nH ,e2.nH)\[CloseCurlyQuote]\[CloseCurlyQuote]=\
\[CloseCurlyQuote]\[CloseCurlyQuote]",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], "arcsin", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"e1", ".", "nH"}], "  ", 
     RowBox[{"e2", ".", "nH"}]}], ")"}]}]],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}]
}], "Section",
 CellChangeTimes->{{3.711799877597115*^9, 3.711799880979237*^9}, {
  3.711981702705323*^9, 3.711981973109995*^9}, {3.711982804131274*^9, 
  3.7119828110489187`*^9}, {3.711982874346614*^9, 3.71198329106833*^9}, {
  3.71198337761333*^9, 3.7119833850932283`*^9}, {3.711994533785424*^9, 
  3.711994549024761*^9}, {3.711996719505542*^9, 3.711996746477543*^9}, {
  3.7119967971984987`*^9, 3.711996834043687*^9}, {3.711997137645692*^9, 
  3.711997180582488*^9}, {3.711997216153133*^9, 3.7119972165284147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "2"], "-", 
         SuperscriptBox["y", "2"]}], " ", ",", 
        RowBox[{"2", " ", "x", " ", "y"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"xd", ",", "yd"}], "}"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"x", " ", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"xd", ",", "yd"}], "}"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["y", "2"]}], " ", ",", 
         RowBox[{"2", " ", "x", " ", "y"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"xd", ",", "yd"}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], ",", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}], "}"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{"x", " ", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"xd", ",", "yd"}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], ",", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}], "}"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          SuperscriptBox["y", "2"]}], " ", ",", 
         RowBox[{"2", " ", "x", " ", "y"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"xd", ",", "yd"}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], ",", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], ",", 
     RowBox[{"xd", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "\[Gamma]d"}]}], ",", 
     RowBox[{"yd", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Gamma]", "]"}], "\[Gamma]d"}]}]}], "}"}]}], "//",
   "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{"x", " ", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"xd", ",", "yd"}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", 
      RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], ",", 
     RowBox[{"y", "\[Rule]", " ", 
      RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], ",", 
     RowBox[{"xd", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "\[Gamma]d"}]}], ",", 
     RowBox[{"yd", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Gamma]", "]"}], "\[Gamma]d"}]}]}], "}"}]}], "//",
   "Simplify"}]}], "Input",
 CellChangeTimes->{{3.711983129382523*^9, 3.7119831399460373`*^9}, {
  3.7119945587205267`*^9, 3.7119946551262627`*^9}, {3.711994733240485*^9, 
  3.711994754391776*^9}, {3.711996754323207*^9, 3.7119967886245117`*^9}, {
  3.71199685231629*^9, 3.71199686316057*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "xd"}], " ", "y"}], "+", 
   RowBox[{"x", " ", "yd"}]}], 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{
  3.71198291009087*^9, 3.7119829707827597`*^9, {3.711983137222067*^9, 
   3.711983140551835*^9}, 3.711984017851233*^9, 3.711990718703771*^9, {
   3.711994569415557*^9, 3.711994598026593*^9}, {3.711994641023034*^9, 
   3.71199465584457*^9}, 3.711994754812664*^9, {3.711996771420576*^9, 
   3.711996789281375*^9}, 3.711996863570106*^9, 3.7120305034284897`*^9, 
   3.714930965552456*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "xd"}], " ", "y"}], "+", 
   RowBox[{"x", " ", "yd"}]}], 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{
  3.71198291009087*^9, 3.7119829707827597`*^9, {3.711983137222067*^9, 
   3.711983140551835*^9}, 3.711984017851233*^9, 3.711990718703771*^9, {
   3.711994569415557*^9, 3.711994598026593*^9}, {3.711994641023034*^9, 
   3.71199465584457*^9}, 3.711994754812664*^9, {3.711996771420576*^9, 
   3.711996789281375*^9}, 3.711996863570106*^9, 3.7120305034284897`*^9, 
   3.714930965553623*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yd", " ", 
   RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "-", 
  RowBox[{"xd", " ", 
   RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.71198291009087*^9, 3.7119829707827597`*^9, {3.711983137222067*^9, 
   3.711983140551835*^9}, 3.711984017851233*^9, 3.711990718703771*^9, {
   3.711994569415557*^9, 3.711994598026593*^9}, {3.711994641023034*^9, 
   3.71199465584457*^9}, 3.711994754812664*^9, {3.711996771420576*^9, 
   3.711996789281375*^9}, 3.711996863570106*^9, 3.7120305034284897`*^9, 
   3.7149309655709867`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"yd", " ", 
   RowBox[{"Cos", "[", "\[Gamma]", "]"}]}], "-", 
  RowBox[{"xd", " ", 
   RowBox[{"Sin", "[", "\[Gamma]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.71198291009087*^9, 3.7119829707827597`*^9, {3.711983137222067*^9, 
   3.711983140551835*^9}, 3.711984017851233*^9, 3.711990718703771*^9, {
   3.711994569415557*^9, 3.711994598026593*^9}, {3.711994641023034*^9, 
   3.71199465584457*^9}, 3.711994754812664*^9, {3.711996771420576*^9, 
   3.711996789281375*^9}, 3.711996863570106*^9, 3.7120305034284897`*^9, 
   3.714930965572104*^9}],

Cell[BoxData["\[Gamma]d"], "Output",
 CellChangeTimes->{
  3.71198291009087*^9, 3.7119829707827597`*^9, {3.711983137222067*^9, 
   3.711983140551835*^9}, 3.711984017851233*^9, 3.711990718703771*^9, {
   3.711994569415557*^9, 3.711994598026593*^9}, {3.711994641023034*^9, 
   3.71199465584457*^9}, 3.711994754812664*^9, {3.711996771420576*^9, 
   3.711996789281375*^9}, 3.711996863570106*^9, 3.7120305034284897`*^9, 
   3.7149309655731087`*^9}],

Cell[BoxData["\[Gamma]d"], "Output",
 CellChangeTimes->{
  3.71198291009087*^9, 3.7119829707827597`*^9, {3.711983137222067*^9, 
   3.711983140551835*^9}, 3.711984017851233*^9, 3.711990718703771*^9, {
   3.711994569415557*^9, 3.711994598026593*^9}, {3.711994641023034*^9, 
   3.71199465584457*^9}, 3.711994754812664*^9, {3.711996771420576*^9, 
   3.711996789281375*^9}, 3.711996863570106*^9, 3.7120305034284897`*^9, 
   3.714930965574129*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "what", " ", "we", " ", "get", " ", "with", " ", 
     "\[Psi]"}], "=", 
    RowBox[{
     RowBox[{"arctan", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e1", ".", "nH"}], ",", 
        RowBox[{"e2", ".", "nH"}]}], ")"}]}], ":", " ", 
     RowBox[{"but", " ", "there", " ", "is", " ", "the", " ", "sign"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ubar4th", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
        ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
        "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", 
        "v2y_", ",", "v2z_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "T_", ",", "\[Tau]x_", ",", "\[Tau]y_", ",", "\[Tau]z_", ",", 
        "\[Tau]\[Theta]_", ",", "\[Tau]\[Psi]_"}], "}"}]}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ubar3rd", "[", 
       RowBox[{"z", ",", 
        RowBox[{"{", 
         RowBox[{
         "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
          "\[Tau]\[Theta]", ",", "\[Tau]\[Tau]\[Psi]"}], "}"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Tau]\[Tau]\[Psi]", "\[Rule]", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"NH", "[", "zk", "]"}], ".", 
            RowBox[{"NH", "[", "zk", "]"}]}], " ", 
           SqrtBox[
            RowBox[{"1", "-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n1", "[", "zk", "]"}], ".", 
                RowBox[{"n2", "[", "zk", "]"}]}], ")"}], "2"]}]]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", "w1"], "+", 
             FractionBox["1", "w2"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
              RowBox[{"n1", "[", "zk", "]"}]}], "+", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}], "-", "1"}], ")"}]}]], 
         RowBox[{"(", 
          RowBox[{"\[Tau]\[Psi]", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"A\[Psi]", "[", "z", "]"}], "+", 
             RowBox[{
              RowBox[{"B\[Psi]", "[", "zk", "]"}], ".", 
              RowBox[{"ubar3rd", "[", 
               RowBox[{"z", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "T", ",", "\[Tau]x", ",", "\[Tau]y", ",", "\[Tau]z", ",", 
                  "\[Tau]\[Theta]", ",", "0"}], "}"}]}], "]"}]}]}], ")"}]}], 
          ")"}]}]}], "}"}]}], "/.", "PhysicalConstants"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.711983344390849*^9, 3.711983404612443*^9}, {
  3.711997225792062*^9, 3.711997270432513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"now", " ", "theta", " ", "is", " ", "also", " ", 
    RowBox[{"controlled", ":", " ", 
     RowBox[{"missing", " ", "the", " ", "yaw"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Chop", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{"nT", "[", 
           RowBox[{"#1", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"OP", "[", 
           RowBox[{"nT", "[", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"#2", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}], "-", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"RA", "[", "#1", "]"}], "+", 
         RowBox[{
          RowBox[{"RB", "[", 
           RowBox[{"#1", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], ".", 
          RowBox[{"ubar4th", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}]}]}], ")"}]}], " ", "&"}], "[", 
     RowBox[{"zrandom", ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.2", ",", "1", ",", "2", ",", "2", ",", "0"}], 
       "}"}]}], "]"}], "/.", "PhysicalConstants"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711983438229465*^9, 3.711983438609613*^9}, 
   3.71198463809589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.010646363594257392`", ",", "0.020714705430965295`", ",", 
   RowBox[{"-", "0.04424427557466841`"}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7119834502165737`*^9, 3.711990737401849*^9, 
  3.712030525905703*^9, 3.714930987483828*^9}]
}, Open  ]],

Cell["some interesting things to note", "Text",
 CellChangeTimes->{{3.711983521646133*^9, 3.711983530386032*^9}}],

Cell[CellGroupData[{

Cell[BoxData["zd"], "Input",
 CellChangeTimes->{{3.7119907872430468`*^9, 3.711990791624745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "vx", ",", "vy", ",", "vz", ",", "v1x", ",", "v1y", ",", "v1z", ",", "v2x", 
   ",", "v2y", ",", "v2z"}], "}"}]], "Output",
 CellChangeTimes->{{3.7119907878457823`*^9, 3.711990791865651*^9}, 
   3.7120305260395393`*^9, 3.7149309875158*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zrandom", "=", 
   RowBox[{"zlR", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]1", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"ArcTan", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
          RowBox[{"nH", "[", "zk", "]"}]}], ")"}], "2"], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
          RowBox[{"nH", "[", "zk", "]"}]}], ")"}], "2"]}], ",", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", "zk", "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", "zk", "]"}]}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]\[Psi]1", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "vx_", ",", "vy_", ",", "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", 
       ",", "v2x_", ",", "v2y_", ",", "v2z_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"vf", "[", "\[Psi]1", "]"}], "[", 
    RowBox[{"zk", ",", "zd"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B\[Psi]1", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Bf", "[", "\[Psi]1", "]"}], "[", "zk", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A\[Psi]1", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Af", "[", "\[Psi]1", "]"}], "[", "z", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]2", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"nH", "[", "zk", "]"}]}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
      RowBox[{"nH", "[", "zk", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]\[Psi]2", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "vx_", ",", "vy_", ",", "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", 
       ",", "v2x_", ",", "v2y_", ",", "v2z_"}], "}"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"vf", "[", "\[Psi]2", "]"}], "[", 
    RowBox[{"zk", ",", "zd"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B\[Psi]2", "[", 
    RowBox[{"{", 
     RowBox[{
     "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
      ",", "p2x_", ",", "p2y_", ",", "p2z_"}], "}"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Bf", "[", "\[Psi]2", "]"}], "[", "zk", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A\[Psi]2", "[", 
     RowBox[{"{", 
      RowBox[{
      "px_", ",", "py_", ",", "pz_", ",", "p1x_", ",", "p1y_", ",", "p1z_", 
       ",", "p2x_", ",", "p2y_", ",", "p2z_", ",", "vx_", ",", "vy_", ",", 
       "vz_", ",", "v1x_", ",", "v1y_", ",", "v1z_", ",", "v2x_", ",", "v2y_",
        ",", "v2z_"}], "}"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Af", "[", "\[Psi]2", "]"}], "[", "z", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{
   RowBox[{"\[Psi]1", "[", 
    RowBox[{"zrandom", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "-", 
   RowBox[{"\[Psi]2", "[", 
    RowBox[{"zrandom", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], 
  FractionBox["\[Pi]", "4"]], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Omega]\[Psi]1", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}], "-", " ", 
     RowBox[{"\[Omega]\[Psi]2", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"10", ";;", "18"}], "]"}], "]"}]}], "]"}]}], "&"}], "[", 
   "zrandom", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"B\[Psi]1", "[", 
    RowBox[{"zrandom", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}], "-", "  ", 
   RowBox[{"B\[Psi]2", "[", 
    RowBox[{"zrandom", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "9"}], "]"}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"A\[Psi]1", "[", "zrandom", "]"}], "-", 
   RowBox[{"A\[Psi]2", "[", "zrandom", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.711983540158003*^9, 3.711983656733851*^9}, {
  3.711984058097446*^9, 3.7119841530868464`*^9}, {3.711997311049561*^9, 
  3.711997339863604*^9}}],

Cell[BoxData[
 RowBox[{"-", "4.`"}]], "Output",
 CellChangeTimes->{{3.71198413643696*^9, 3.7119841578736143`*^9}, 
   3.711990751412016*^9, 3.7119908567768297`*^9, {3.711997316202229*^9, 
   3.711997366756894*^9}, 3.712030530146531*^9, 3.714930991331503*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.71198413643696*^9, 3.7119841578736143`*^9}, 
   3.711990751412016*^9, 3.7119908567768297`*^9, {3.711997316202229*^9, 
   3.711997366756894*^9}, 3.712030530146531*^9, 3.71493099133778*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.71198413643696*^9, 3.7119841578736143`*^9}, 
   3.711990751412016*^9, 3.7119908567768297`*^9, {3.711997316202229*^9, 
   3.711997366756894*^9}, 3.712030530146531*^9, 3.714930991373996*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.71198413643696*^9, 3.7119841578736143`*^9}, 
   3.711990751412016*^9, 3.7119908567768297`*^9, {3.711997316202229*^9, 
   3.711997366756894*^9}, 3.712030530146531*^9, 3.714930991577186*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "check equality (simplify when ",
 Cell[BoxData[
  RowBox[{"\[Psi]", "=", 
   RowBox[{"arctan", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e1", ".", "nH"}], " ", ",", 
      RowBox[{"e2", ".", "nH"}]}], ")"}]}]}]],
  CellChangeTimes->{{3.7118005265660048`*^9, 3.711800718657236*^9}, {
   3.711800749160565*^9, 3.711800896059864*^9}}],
 ")"
}], "Section",
 CellChangeTimes->{{3.711949817975979*^9, 3.71194982374642*^9}, {
  3.711984207142025*^9, 3.711984210449658*^9}, {3.711984300836372*^9, 
  3.711984319346917*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{"zk", "\[Rule]", 
   RowBox[{"zrandom", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "9"}], "]"}], "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"px", "\[Rule]", "0.7497970718242861`"}], ",", 
   RowBox[{"py", "\[Rule]", 
    RowBox[{"-", "0.7391507092365854`"}]}], ",", 
   RowBox[{"pz", "\[Rule]", 
    RowBox[{"-", "0.6113372467500939`"}]}], ",", 
   RowBox[{"p1x", "\[Rule]", "0.7182695655246124`"}], ",", 
   RowBox[{"p1y", "\[Rule]", 
    RowBox[{"-", "0.7851350724391299`"}]}], ",", 
   RowBox[{"p1z", "\[Rule]", 
    RowBox[{"-", "0.11445551566373119`"}]}], ",", 
   RowBox[{"p2x", "\[Rule]", "0.9834966240970806`"}], ",", 
   RowBox[{"p2y", "\[Rule]", 
    RowBox[{"-", "0.928520978370073`"}]}], ",", 
   RowBox[{"p2z", "\[Rule]", "0.02074140376406941`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7119498857876797`*^9, 3.7119907532865458`*^9, 
  3.712030530559924*^9, 3.714930991610793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"test1", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", "zk", "]"}]}], " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "-", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], ".", 
         RowBox[{"nH", "[", "zk", "]"}]}], " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ")"}], ".", 
     RowBox[{"OP", "[", 
      RowBox[{"nH", "[", "zk", "]"}], "]"}], ".", 
     RowBox[{"uv", "[", 
      RowBox[{
       RowBox[{"Skew", "[", 
        RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
       RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
        RowBox[{"Skew", "[", 
         RowBox[{"nH", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"uv", "[", 
         RowBox[{
          RowBox[{"Skew", "[", 
           RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
          RowBox[{"nT", "[", "zk", "]"}]}], "]"}]}], "&"}], "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"nT", "[", "zk", "]"}]}], ",", 
       RowBox[{"NT", "[", "zk", "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
         RowBox[{"Skew", "[", 
          RowBox[{"nH", "[", "zk", "]"}], "]"}], ".", 
         RowBox[{"Skew", "[", 
          RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
         RowBox[{"n2", "[", "zk", "]"}]}], 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"#1", ".", "#1"}]]], 
        FractionBox["w2", 
         SqrtBox[
          RowBox[{"#2", ".", "#2"}]]]}], "&"}], "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"nT", "[", "zk", "]"}]}], ",", 
       RowBox[{"NT", "[", "zk", "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"n1", "[", "zk", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nH", "[", "zk", "]"}], ".", 
              RowBox[{"n2", "[", "zk", "]"}]}], ")"}]}], " ", "-", 
           RowBox[{
            RowBox[{"n2", "[", "zk", "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nH", "[", "zk", "]"}], ".", 
              RowBox[{"n1", "[", "zk", "]"}]}], ")"}]}]}], " ", ")"}]}], 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"#1", ".", "#1"}]]], 
        FractionBox["w2", 
         SqrtBox[
          RowBox[{"#2", ".", "#2"}]]]}], "&"}], "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"nT", "[", "zk", "]"}]}], ",", 
       RowBox[{"NT", "[", "zk", "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"test2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
            RowBox[{"n1", "[", "zk", "]"}]}], 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], "-", 
              RowBox[{"n2", "[", "zk", "]"}]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"NH", "[", "zk", "]"}], ".", 
               RowBox[{"NH", "[", "zk", "]"}]}]]], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}]}], " ", "-", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
            RowBox[{"n2", "[", "zk", "]"}]}], 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"n1", "[", "zk", "]"}], "-", 
              RowBox[{"n2", "[", "zk", "]"}]}], 
             SqrtBox[
              RowBox[{
               RowBox[{"NH", "[", "zk", "]"}], ".", 
               RowBox[{"NH", "[", "zk", "]"}]}]]], ".", 
            RowBox[{"n1", "[", "zk", "]"}]}]}]}], " ", ")"}], 
        FractionBox["1", 
         SqrtBox[
          RowBox[{"#1", ".", "#1"}]]], 
        FractionBox["w2", 
         SqrtBox[
          RowBox[{"#2", ".", "#2"}]]]}], "&"}], "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Skew", "[", 
         RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
        RowBox[{"nT", "[", "zk", "]"}]}], ",", 
       RowBox[{"NT", "[", "zk", "]"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
         RowBox[{"n1", "[", "zk", "]"}]}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
         RowBox[{"n2", "[", "zk", "]"}]}]}], ")"}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"n1", "[", "zk", "]"}], ".", 
         RowBox[{"n2", "[", "zk", "]"}]}], "-", "1"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"NH", "[", "zk", "]"}], ".", 
         RowBox[{"NH", "[", "zk", "]"}]}]]], " ", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"#1", ".", "#1"}]]], 
      FractionBox["w2", 
       SqrtBox[
        RowBox[{"#2", ".", "#2"}]]]}], "&"}], "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Skew", "[", 
       RowBox[{"n1", "[", "zk", "]"}], "]"}], ".", 
      RowBox[{"nT", "[", "zk", "]"}]}], ",", 
     RowBox[{"NT", "[", "zk", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"test1", "-", "test2"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{"zk", "\[Rule]", 
       RowBox[{"zrandom", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "9"}], "]"}], "]"}]}], "]"}]}], "/.", 
    "PhysicalConstants"}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.711951349955744*^9, {3.711984173706262*^9, 3.71198418523925*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.711962359445448*^9, 3.71198418895214*^9, 
  3.711990753385716*^9, 3.7120305306880617`*^9, 3.714930991638735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
some interesting: vector plot for yaw dynamics (check that bar orientation \
does not \[OpenCurlyQuote]see\[CloseCurlyQuote] 180 degree difference)\
\>", "Subsubsection",
 CellChangeTimes->{{3.711984267803891*^9, 3.7119842964336777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", 
      FractionBox["1", "2"], 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Gamma]", "]"}], "2"], "-", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Gamma]", "]"}], "2"]}], ",", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", "\[Gamma]", "]"}], 
         RowBox[{"Cos", "[", "\[Gamma]", "]"}]}]}], "]"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711961643692569*^9, 3.711961680661503*^9}, {
  3.7119954324615307`*^9, 3.711995516233539*^9}, {3.711997419673877*^9, 
  3.711997438758175*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtmnk0Vd/7x91zr1mhgcInUSRpTqPsQygzJVSkiSbRKCXKkCmVKXNEKEOG
DI3sY6YkMmYe73zvJkTG3/mu9fvn3vVaZ52zn+f9vPezz97rKJ1zPeqICQgI
lJA///s3Mlx6aFZJlLgQY9AwpBlWeqDowajIGlGi31hZYXWEK9RQ4ryUkRMl
hHQM6JXhD+HSfzXT25eJEk0GCxTH8Oew6a13ziVMlIhWGufZhyVBW5HJ1W2D
IoR96SlRr6e58GJN12jeaxHCJGv3RUUvCP30MxKdVESImPt2Zf34T3ijZWZZ
xHJhQvN3Yf5V9z4YddT8ZKSkMOH3rMifltcHvza+Tn4hLkycNhiHnow+KPTD
ZFsMVZhg7JnCRTb1w4SqRNOX40KE8fqtSR0x/bC2WDfwTTPJ8uJcmxsDcE1s
8PyXCCHihpu39sqVQ1BPtk+v5LkQMWe7JbJgyxC8/GJnSOkTIaK7+kqN9pEh
WBjWLVfmK0RkTn06I+8xBA2Dt+ytviVE8AMWY9l9Q/C2x6+bjceEiIG7Izrf
04bhN3s55vByIYI+euMsW4kOzZO0wIykEGFSKCrlvZcOW/pPR0lKCBFitIrr
mDkd9px/rbefJkQUtTv8qfSgw9HLGsnPJwQJmeXqSQYtdCjrpn1yf6sgcXMs
WV3dmwEvPDtX/zxKkFDaSFQN1jEh66ffurRwQSLsYrbPmx4mdJF+c//zM0Gi
csb7ktUYE96N5KiN+AsS055PzjutYsHguNuP998VJCyuhkpcdmTBvHR/7REb
QaJI1lr59wwLzpdm5u1fLUj4+3pMMpdxYH3nVonZFYJE8+Nq9en1HJjwt/Di
FylBQqr+IcHczYFaW+AaLRFB4rr41a/XTnLg/ZfNIQenaMTnIws1tFcc+Ndj
7hLeSiO2vS3faq3ChdXR3pUCTTRi1u7NgZuaXPiiQGhtWT2N0DofedtFnwt3
caTadSppRGBsoIqwIxfeOqmif6iARkwHV0V8SOHC0b1mSgZhNEJvZlmM4Coe
JKyaHwg9pRGxV7LNFVR58Pl1247qQBpxf/r7+mW7eHDL23PPDz+iEUrKFcw4
cx68Jnt3/ogrjdjJKt2g+JgH2ZNJv41NaYRx+D6vERYPfpZW0ZQwpBH725cs
0Cd5MGhzZmi9Ho2Q+jubV03hQzXHwsOmWjTCqKP4/trVfOjUUltktolGsKrn
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
UM4=
       "]]},
     Annotation[#, "Charting`Private`Tag$176930#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.9999993650500513, 
     0.9999996658276197}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.9999993650500513, 0.9999996658276197}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.711961654019642*^9, 3.7119616811917963`*^9}, 
   3.7119907540394363`*^9, {3.711995462752329*^9, 3.711995517083006*^9}, {
   3.711997421162643*^9, 3.711997439326645*^9}, 3.7120305309128304`*^9, 
   3.714930991685492*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StreamPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vv", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         FractionBox["1", "2"], 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Gamma]", "]"}], "2"], "-", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Gamma]", "]"}], "2"]}], ",", 
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", "\[Gamma]", "]"}], 
            RowBox[{"Cos", "[", "\[Gamma]", "]"}]}]}], "]"}]}], "]"}]}], "-", 
      "vv"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Gamma]", ",", 
     RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vv", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.711961475888362*^9, 3.711961548559029*^9}, {
  3.711961606869534*^9, 3.711961619164133*^9}, {3.7119911263155537`*^9, 
  3.71199121959696*^9}, {3.711997474403667*^9, 3.711997476239911*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.780633686363479, 3.}, {-2.7695622031173737`, 
       2.986674337984109}, {-2.7073278886856746`, 
       2.9095570576829326`}, {-2.646737566313056, 
       2.8324475805865053`}, {-2.587766549317204, 
       2.755557204585985}, {-2.530390151015808, 
       2.6790972275725298`}, {-2.474583684726553, 
       2.603278947437297}, {-2.4611480383200073`, 2.584716757919031}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.4534664097584447`, 
       2.57410410551258}, {-2.4203224637671275`, 
       2.528313662071445}, {-2.3676510862697255`, 
       2.4547263114915236`}, {-2.316588955888539, 
       2.382927784032121}, {-2.26707359422425, 
       2.312958300061454}, {-2.219042522877544, 
       2.2448580799477407`}, {-2.172433263449103, 
       2.178667344059198}, {-2.150028456240051, 2.1468593821200446`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.1424841010944977`, 
       2.1361487092235487`}, {-2.1271833375396105`, 
       2.1144263127640426`}, {-2.08323026674975, 
       2.052175206430492}, {-2.0405115726802046`, 
       1.991954245426763}, {-1.983093674560695, 
       1.9120176613451347`}, {-1.927825945454991, 
       1.8366026443124703`}, {-1.8747083853630921`, 
       1.7657091943287697`}, {-1.8339467456969134`, 1.7126276706540304`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.8259675827274526`, 
       1.7022368686270093`}, {-1.8237409942849985`, 
       1.6993373113940333`}, {-1.7746652948891675`, 
       1.6373349578196823`}, {-1.7272228098440565`, 
       1.5795500959171371`}, {-1.6814135391496658`, 
       1.525982725686399}, {-1.6372374828059948`, 
       1.476632847127467}, {-1.5528708565536848`, 
       1.389294112855404}, {-1.4732087744699984`, 
       1.3162424409313298`}, {-1.4729743523432635`, 1.3160425914358531`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.4630046040292577`, 
       1.307543183985134}, {-1.4355234594637194`, 
       1.284114965185819}, {-1.3987577746463853`, 
       1.2550061623817945`}, {-1.351307436297532, 
       1.2240149381617558`}, {-1.304895813719084, 
       1.1972449349527576`}, {-1.2138677393915738`, 
       1.1512370541794168`}, {-1.1258950199134434`, 
       1.1187582320895717`}, {-1.0400309240707475`, 
       1.0968506028955889`}, {-0.9941334513489541, 1.0900788755162834`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9811727718571072, 
       1.088166652838984}, {-0.9249941930054282, 
       1.079878047868372}, {-0.8113428877933724, 
       1.0709507308231028`}, {-0.6982682082626945, 
       1.0636059471861454`}, {-0.5861060595247604, 
       1.0531173532509244`}, {-0.4753102192212715, 
       1.0350554696868848`}, {-0.46079002869134805`, 
       1.0311802721983014`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4481320824147673, 
       1.0278020767455254`}, {-0.3670246901658904, 
       1.0061558619730218`}, {-0.2624007126314915, 
       0.9643394248974949}, {-0.1628884905656578, 
       0.9090270486421101}, {-0.10743876585415196`, 
       0.8702271479699293}, {-0.05444877982375544, 
       0.8272125005213912}, {-0.004206984704912875, 0.7805069165955387}, {
       0.002025794222836305, 0.7739516108268504}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.011053077792549108`, 0.7644571935298303}, {
       0.04297176733083549, 0.7308868115084575}, {0.08690959503093851, 
       0.678870666487854}, {0.12755550344084188`, 0.6247505434326487}, {
       0.16478167455993162`, 0.5692286830567747}, {0.198482296627264, 
       0.5131086602451571}, {0.2552549358768884, 0.4009803964641909}, {
       0.28598127074043905`, 0.32285131446922405`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2907761062956095, 0.3106592941092987}, {0.2981881242947808,
        0.29181245915234527`}, {0.32789826027345353`, 0.1887829037628522}, {
       0.34524004925782886`, 0.09353894671673979}, {0.3513375006667034, 
       0.007389932199350607}, {0.3473502764213193, -0.06878075518015202}, {
       0.3143015552262049, -0.18947437589799074`}, {
       0.30714243675051733`, -0.19907222378836004`}}]}, 
     {Arrowheads[{{0.019659322706122993`, 1.}}], 
      ArrowBox[{{0.29930936976421885`, -0.20957359846247398`}, {
       0.2565998359897002, -0.26683198998490937`}, {
       0.18496060121767288`, -0.30181363062162253`}, {
       0.09709473463331796, -0.2948575892616364}, {
       0.017259860993647725`, -0.24789941439395718`}, {-0.04512514717905596, \
-0.17678101334270463`}, {-0.08531881644614235, -0.09783207405622735}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.13868491897740529`, -3.}, {-0.18784769647420985`, \
-2.9460415411215877`}, {-0.23620211752525946`, -2.8915826537021165`}, \
{-0.2836435178665979, -2.83673821169034}, {-0.3301718974982254, \
-2.7815082150862587`}, {-0.3757872564201416, -2.7258926638898724`}, \
{-0.42048959463234686`, -2.66989155810118}, {-0.46427891213484107`, \
-2.6135048977201834`}, {-0.47548664061050905`, -2.5987804729654784`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4834215287499022, -2.5883558214761826`}, \
{-0.5071580408136123, -2.557171403814742}, {-0.5491298125546482, \
-2.5013297974527187`}, {-0.5901942273579491, -2.445980078634111}, \
{-0.6303512852235149, -2.391122247358921}, {-0.7079433301414415, \
-2.282882247438792}, {-0.7819059473084277, -2.17660979769233}, \
{-0.7906185508677399, -2.1638714079130783`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7980146525409895, -2.153057829019071}, \
{-0.8524494986412262, -2.0734705641472218`}, {-0.9197843460565898, \
-1.9746302128311513`}, {-0.9839104895545181, -1.8800887437441194`}, \
{-1.0448279291350113`, -1.789846156886126}, {-1.0924620543312908`, \
-1.7195640772847158`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.099812222311721, -1.7087192241682638`}, \
{-1.1028463844837675`, -1.7042424498720916`}, {-1.1582755752864844`, \
-1.6236176203169377`}, {-1.211115501543162, -1.5479716682206641`}, \
{-1.2613661632538005`, -1.4773045935832703`}, {-1.2999219771417434`, \
-1.4236106099905754`}, {-1.3370763857965744`, -1.3730009146447146`}, \
{-1.3803893847476199`, -1.3174618173938752`}, {-1.407169028181089, \
-1.2844765871295423`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.4154265383831672`, -1.2743055825714598`}, \
{-1.4220167390207188`, -1.2661882494912846`}, {-1.5021626384129283`, \
-1.171899059004684}, {-1.5766161046245553`, -1.0933329427170633`}, \
{-1.6463687554873796`, -1.0289156415941423`}, {-1.7073366148408389`, \
-0.9808400241605191}, {-1.7654424459549172`, -0.9426681235391052}, \
{-1.8003429844399215`, -0.9242078298297114}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.811923734695185, -0.9180823068330057}, \
{-1.82143751952762, -0.9130500846978032}, {-1.8760731062569511`, \
-0.8906360526045143}, {-1.9824511391631585`, -0.8641907437180483}, \
{-2.086947184628855, -0.8568736669918497}, {-2.1916135007126427`, \
-0.8622195715161274}, {-2.2972740821692272`, -0.8748415629513874}, \
{-2.325667190369442, -0.878592891559725}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.3386553056517667`, -0.8803088956013889}, \
{-2.404552169314312, -0.8890152615305391}, {-2.51325611637265, \
-0.8992179803440449}, {-2.585979907573093, -0.901493571569502}, \
{-2.6584744920119685`, -0.899051722637318}, {-2.7304640929639654`, \
-0.8906321704479269}, {-2.80167293370377, -0.8749746519017617}, \
{-2.855844721908193, -0.8550990194467172}}]}, 
     {Arrowheads[{{0.012589624578871292`, 1.}}], 
      ArrowBox[{{-2.868143998384489, -0.8505864141440576}, \
{-2.915878751735128, -0.8330725301764604}, {-3.023279775976615, \
-0.7717462315185456}, {-3.1214968790372457`, -0.6927487682940736}, \
{-3.141592653589793, -0.6714184236537699}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.3789856456850987, 3.}, {0.4145157431548775, 
       2.9567548817377336`}, {0.4599061825826162, 2.9002540170363416`}, {
       0.5044240633790341, 2.8435608531795067`}, {0.5480693855441314, 
       2.7866753901672277`}, {0.5908561040788883, 2.7300209147177377`}, {
       0.6327981739842852, 2.6740207135492664`}, {0.6738955952603221, 
       2.6186747866618143`}, {0.6987410271947564, 2.5849171684191607`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.706506723568767, 2.574365876162539}, {0.7141483679069991, 
       2.5639831340553814`}, {0.7921199673122725, 2.456562651685575}, {
       0.8667129722001059, 2.3517592664398457`}, {0.9347608276418606, 
       2.2553602129305483`}, {1.0001460230302084`, 2.16314583154565}, {
       1.0110168480048263`, 2.1478888659777375`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.0186191292605602`, 2.1372192301748303`}, {
       1.0628685583651492`, 2.075116122285152}, {1.1229284336466832`, 
       1.9912710851490538`}, {1.1805878739859088`, 1.9118289704091271`}, {
       1.236109104493925, 1.8370080283371446`}, {1.2894921251707314`, 
       1.766808258933106}, {1.3295910095168944`, 1.7154932375150835`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.3376576801247917`, 1.7051702227538015`}, {
       1.3407369360163282`, 1.7012296621970115`}, {1.3901059306205696`, 
       1.6400942622959398`}, {1.4378615025733095`, 1.583224083396967}, {
       1.4840036518745483`, 1.5306191255000956`}, {1.528532378524286, 
       1.4822793886053243`}, {1.5697139325497924`, 1.4387571205249123`}, {
       1.6096864675038383`, 1.3987293420727607`}, {1.6573264540694905`, 
       1.3571206062018062`}, {1.6969380956016593`, 1.3253785883516052`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.7072834913117836`, 1.317345450976283}, {
       1.7940077665052068`, 1.254004524296356}, {1.8802449264246088`, 
       1.2032848652185373`}, {1.963369313741719, 1.165336611275572}, {
       2.0876784165830675`, 1.1271652837534782`}, {2.181425293357155, 
       1.1106784701909278`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.1943282626102825`, 1.108409286877309}, {2.208732839803465, 
       1.1058760229777163`}, {2.328318699592778, 1.093375681645605}, {
       2.4467389675038143`, 1.0835111205712742`}, {2.564088880177592, 
       1.0703050953175401`}, {2.679514367024812, 1.0489262602543123`}, {
       2.7129582340503706`, 1.039067831340054}}]}, 
     {Arrowheads[{{0.01865910117807483, 1.}}], 
      ArrowBox[{{2.7255246273504383`, 1.0353635678658974`}, {
       2.7920600100622135`, 1.015750574540523}, {2.9002816631775845`, 
       0.9686645160439508}, {2.9637943886108804`, 0.9323725970888898}, {
       3.0248435803963107`, 0.8907716234938545}, {3.0830275280278063`, 
       0.8442940333026401}, {3.137879477482128, 0.7937001328343849}, {
       3.141592653589793, 0.7897776862888023}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.947214281215124, -3.}, {
       2.9385412434627876`, -2.9903613856317666`}, {
       2.8909169907905814`, -2.936215990688075}, {
       2.8441736476719863`, -2.881830483691602}, {
       2.7983112141070023`, -2.82720486464235}, {
       2.753329690095629, -2.7723391335403176`}, {
       2.7092290756378667`, -2.7172332903855048`}, {
       2.666009370733716, -2.661887335177912}, {
       2.6236705753831755`, -2.6063012679175386`}, {
       2.615101783055513, -2.5948507913114525`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.607252373817511, -2.5843616262792715`}, {
       2.582202082790687, -2.55088692407972}, {
       2.5415932861606922`, -2.496056139139791}, {
       2.4629547807881798`, -2.3881452459536012`}, {
       2.387755059265639, -2.28256858835897}, {
       2.3159941215930697`, -2.179326166355896}, {
       2.3017838396587162`, -2.1586104613425396`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.2943730071042494`, -2.1478069725862343`}, {
       2.249978203521903, -2.08308836535618}, {
       2.1867572823397277`, -1.9908653431743855`}, {
       2.126331358046546, -1.9026570998105141`}, {
       2.068700430642356, -1.8184636352645647`}, {
       2.013598475718695, -1.7385281228278688`}, {
       1.9977013396410974`, -1.7158329438853264`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{1.9901850831366874`, -1.7051025339855193`}, {
       1.9607594688670975`, -1.6630937357917568`}, {
       1.9101834100875643`, -1.5921604741562292`}, {
       1.8618702993800949`, -1.5257283379212856`}, {
       1.815550793230794, -1.4636444997797744`}, {
       1.7709555481257668`, -1.4057561324245431`}, {
       1.6869378410485332`, -1.3025658100729234`}, {
       1.6740580121217512`, -1.287411135156321}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.6655738088774334`, -1.2774284449494144`}, {
       1.6505725310909776`, -1.2597776291288205`}, {
       1.6154017082794367`, -1.2201752461510247`}, {
       1.573756380796143, -1.1783090537999574`}, {
       1.5334433801066674`, -1.140622262444379}, {
       1.455213340342203, -1.073115388622278}, {
       1.3812459468569844`, -1.0203244043060504`}, {
       1.3105594352985728`, -0.980291249545341}, {
       1.2562428307727038`, -0.9592972044129668}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.2440228679267715`, -0.9545740363551908}, {
       1.2070743352272348`, -0.9402929676131335}, {
       1.1068666704868215`, -0.920004076290137}, {
       1.0077825574168398`, -0.9134694359474603}, {
       0.9088330427714941, -0.9162110952834536}, {
       0.809198274790365, -0.9234910399933592}, {
       0.7254365751620228, -0.9297978850186511}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7123725700207363, -0.930781540510377}, {
       0.7088099684057579, -0.931049786932933}, {
       0.6077941088352362, -0.9347932354501993}, {
       0.5067603631656159, -0.930970622651689}, {
       0.43526612695832756`, -0.9219427310631113}, {
       0.3645797914522639, -0.906993380411805}, {
       0.295223310218098, -0.8855141046061701}, {
       0.2278655389582281, -0.8570965193291749}, {
       0.2030509562224706, -0.8435939829528892}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.19154329236369877`, -0.8373322355153541}, {
       0.16298078984524178`, -0.8217903167428303}, {
       0.10086990841460342`, -0.7800873398891491}, {
       0.04208602679693957, -0.7325998855895032}, {-0.012771989830297453`, \
-0.6802167753152322}, {-0.06334385335691388, -0.6237737754850059}, \
{-0.10949030273293214`, -0.5640739418909134}, {-0.1509385938263379, \
-0.5022985771054551}, {-0.1709467332871888, -0.46805806190019794`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.1775564431017104, -0.4567466718606945}, \
{-0.18745448949209367`, -0.43980785510587334`}, {-0.21898160673245998`, \
-0.37746581093150444`}, {-0.24563281502043213`, -0.315682007988881}, \
{-0.2675164824331674, -0.2552532176147858}, {-0.28482077208230244`, \
-0.19695507948625535`}, {-0.30637216711527543`, -0.0884967642680784}, \
{-0.31208913278413747`, 0.007362926700223964}, {-0.30868527341882435`, 
       0.04278289021039522}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.30743204206678687`, 
       0.05582379583984563}, {-0.3042456435077124, 
       0.0889809003434567}, {-0.2850209927176293, 
       0.15554599206442166`}, {-0.22192222685039573`, 
       0.24300280524333404`}, {-0.14106311804625926`, 
       0.27184837865986916`}, {-0.042658751379717696`, 
       0.24172113232510373`}, {0.03538383276736609, 0.16557414619558278`}, {
       0.042502805715581106`, 0.15146786161124437`}}]}, 
     {Arrowheads[{{0.0027933593492527257`, 1.}}], 
      ArrowBox[{{0.04840536946011299, 0.13977189864534462`}, {
       0.08138133270080965, 0.07442984364672513}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{3.141592653589793, -2.0462940814163146`}, {
       3.106625549300293, -2.0112321541213203`}, {
       3.0584731747348863`, -1.9598588534415067`}, {
       3.0115847082937197`, -1.9074689740445478`}, {
       2.9659888852717207`, -1.8542418250155566`}, {
       2.9217000733165364`, -1.8002670608973095`}, {
       2.864479422573152, -1.7275954051237774`}, {
       2.809648661750816, -1.6542467653930466`}, {
       2.803953729911525, -1.6462438342320675`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.7963578912228835`, -1.6355696109313258`}, {
       2.7571969257089055`, -1.580537782623291}, {
       2.7071133493067987`, -1.5067850977326847`}, {
       2.6594075876157333`, -1.4333730977027848`}, {
       2.61407287953746, -1.3606319726644425`}, {
       2.5710737356771234`, -1.288797068259773}, {
       2.530374666639869, -1.2181037301308917`}, {
       2.5163844100299397`, -1.1929411795716922`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.5100181631304053`, -1.1814909957796247`}, {
       2.493602077638958, -1.1519654057436637`}, {
       2.4589113247068943`, -1.0875267124072545`}, {
       2.42623340798663, -1.0247788685056431`}, {
       2.395499327621115, -0.9637130924228089}, {
       2.3395866765261397`, -0.8465926172493903}, {
       2.2906213725655764`, -0.7360950339588337}, {
       2.2802903845285836`, -0.710803730490482}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.275336270454769, -0.6986755582373518}, {
       2.2410931036829957`, -0.6148448230316619}, {
       2.2000654940671125`, -0.5035517748940262}, {
       2.1668524806049647`, -0.4015870546603179}, {
       2.1407680001835923`, -0.308321827444928}, {
       2.121236608518519, -0.22293470691746117`}, {
       2.117281754243929, -0.20007864257411254`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.1150480435069703`, -0.18716948517319915`}, {
       2.1076828613252685`, -0.14460430674752228`}, {
       2.1038055092381307`, -0.11715178370044851`}, {
       2.1006644205564537`, -0.09053538259351572}, {
       2.098412016517599, -0.0442282973412903}, {
       2.0983918373561976`, -0.00015499808380482066`}, {2.1087096400121323`, 
       0.1293387134714713}, {2.138446755187616, 0.2423162837290308}, {
       2.175985360463737, 0.3231785629792125}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.1815017777729033`, 0.33506153182243903`}, {
       2.1852690068031952`, 0.3431765569707135}, {2.231801502713429, 
       0.41344865655251173`}, {2.2865946603150062`, 0.47841967680292097`}, {
       2.3488310427424537`, 0.5380025383636337}, {2.417918712803739, 
       0.5908472995580005}, {2.492965252103862, 0.6355997877644499}, {
       2.571221361257637, 0.669546116143548}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.5837720938148436`, 0.6732475363564379}, {
       2.6563969111022745`, 0.6931188009989239}, {2.7418755807748627`, 
       0.702338409587536}, {2.8105791190115523`, 0.6989263906308193}, {
       2.8784616132864005`, 0.6857741104156353}, {2.9445947546199815`, 
       0.6632269425427848}, {3.008050234032873, 0.6316302606130693}, {
       3.068053432078334, 0.5920161159907005}, {3.0773999463883017`, 
       0.584207361409408}}]}, 
     {Arrowheads[{{0.002807061012617835, 1.}}], 
      ArrowBox[{{3.0874538172735875`, 0.5758076299446551}, {
       3.1238297293096267`, 0.5454165600398907}, {3.141592653589793, 
       0.5262255908750026}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-3.141592653589793, 2.280752670022377}, {-3.12277680073595, 
       2.2619307411439262`}, {-3.0692891844408035`, 
       2.2058668679729294`}, {-3.0171650825856964`, 
       2.148656645338219}, {-2.9402298329436194`, 
       2.0600090411069294`}, {-2.866610593209993, 
       1.9696250164745628`}, {-2.8004587726965666`, 1.8835036526823206`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.7926090813057205`, 
       1.8730160816837942`}, {-2.7293057116348844`, 
       1.786006787968874}, {-2.665664461838517, 
       1.6941020230963897`}, {-2.605386719671454, 
       1.6029997974087444`}, {-2.5484069476213334`, 
       1.5131100037728664`}, {-2.5021279369765717`, 1.437107523157287}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.4953143332804433`, 
       1.4259177683284237`}, {-2.4946596081757924`, 
       1.4248425350556828`}, {-2.4544791053161923`, 
       1.3567464516162517`}, {-2.41630042178849, 
       1.290434419591755}, {-2.3800538094943438`, 
       1.225903966585598}, {-2.345669520335412, 
       1.1631526202011864`}, {-2.313077806213353, 
       1.102177908041927}, {-2.2822089190298236`, 
       1.042977357711224}, {-2.2437068890623006`, 0.9663851275856157}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.237822788695007, 
       0.9546798650372754}, {-2.2253606330849887`, 
       0.9298888529491126}, {-2.193843267607241, 
       0.8648821049799578}, {-2.164455135930908, 
       0.8027312771025279}, {-2.112066573982487, 
       0.6869973816228426}, {-2.0674353274740467`, 
       0.5820283668922221}, {-2.0298017766399097`, 
       0.48716543329283146`}, {-2.025636893598889, 0.4757601256825731}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.021143051430209, 
       0.46345398124083376`}, {-1.9985213446600905`, 
       0.40150565716039577`}, {-1.972949454714604, 
       0.3241461148306403}, {-1.9639366081816232`, 
       0.29510146370606893`}, {-1.955731430884871, 
       0.26721538003214956`}, {-1.9456041211557138`, 
       0.22667121374998236`}, {-1.9371858606082808`, 
       0.1883908362132362}, {-1.923592139103612, 
       0.11599431324214547`}, {-1.9161358732675187`, 
       0.051167838504000376`}, {-1.9141922084723209`, -0.007501275415845589}, \
{-1.9193062236832519`, -0.045692920161832934`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.9210449794555764`, -0.05867800918047926}, \
{-1.9315513659280448`, -0.13714007140956333`}, {-1.9761596022412395`, \
-0.25044569601898753`}, {-2.045620948526288, -0.35672766616430834`}, \
{-2.0894007713640597`, -0.4087093056805431}, {-2.1391112172163753`, \
-0.46013146455320353`}, {-2.1816626946173248`, -0.49753800573018825`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.1915022247660376`, -0.5061878297116652}, \
{-2.2215717398527177`, -0.5326216135181182}, {-2.315667721201733, \
-0.6009382312806476}, {-2.392531851550628, -0.6467340867858816}, \
{-2.474647526946447, -0.6857008173869074}, {-2.560853152856777, \
-0.715431274406319}, {-2.6499871347492063`, -0.7335183091667109}, \
{-2.655198443416267, -0.7337905679461848}}]}, 
     {Arrowheads[{{0.01020937066722247, 1.}}], 
      ArrowBox[{{-2.668281585913419, -0.7344740815577412}, \
{-2.7403994838887993`, -0.7382417975261136}, {-2.83044021154062, \
-0.7278816153425577}, {-2.930843525389273, -0.6983561108113632}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.9650431224283347`, -3.}, {
       1.9177064755737445`, -2.942660505553707}, {
       1.8567394455922106`, -2.8705402923001433`}, {
       1.7972594431319795`, -2.8019317830248265`}, {
       1.739181553244553, -2.736712626293992}, {
       1.6824208609814333`, -2.674760470673874}, {
       1.6268924513941223`, -2.615952964730708}, {
       1.6183415925903608`, -2.60723406655464}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.6091683707009559`, -2.597880574766773}, {
       1.5632375683149937`, -2.5510471515587865`}, {
       1.5010173156900475`, -2.490546723436921}, {
       1.4402316935192838`, -2.4344516803651115`}, {
       1.3808807018027032`, -2.3827620223433583`}, {
       1.3227734748350521`, -2.3349339740674666`}, {
       1.2657191469110773`, -2.2904237602332413`}, {
       1.2152780809633403`, -2.2533213582583667`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.2046141971350217`, -2.245713661037281}, {
       1.154769188194159, -2.211356835889795}, {
       1.0474992908208696`, -2.1430945163630026`}, {
       0.9433779199601315, -2.0831700687028505`}, {
       0.8923281793369273, -2.055414001482043}, {
       0.8419583874927492, -2.0289924749528288`}, {
       0.7647726146422703, -1.990548827117137}, {
       0.7513397691243869, -1.9838671897483886`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.7396097667937025, -1.9780325643293837`}, {
       0.6890494573204214, -1.9528833394162848`}, {
       0.5877074654941865, -1.9011656647249353`}, {
       0.489126348257163, -1.8482030544554195`}, {
       0.39343823349133883`, -1.792662086343636}, {
       0.30077524907870207`, -1.733209338125485}, {
       0.28356132079583285`, -1.7209180367934027`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.2728993331595748, -1.713305032911738}, {
       0.21136618049983952`, -1.6693683725036377`}, {
       0.12543981323533798`, -1.600662752180766}, {
       0.05515520235915595, -1.5385902751512617`}, {-0.012153982754242607`, \
-1.4736708141202706`}, {-0.07648774210485756, -1.4059043690877946`}, \
{-0.11432489650638883`, -1.362359978930017}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.12291792291893414`, -1.3524708078054353`}, \
{-0.1378460756926888, -1.3352909400538324`}, {-0.1960687165571955, \
-1.2628161989874318`}, {-0.25099539773783675`, -1.1894658178576396`}, \
{-0.30262611923461247`, -1.115239796664456}, {-0.35096088104752243`, \
-1.0401381354078814`}, {-0.3959988830966782, -0.9650780914186944}, \
{-0.42025098718976245`, -0.9220237015144841}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4266807406868826, -0.9106090583564947}, \
{-0.4377393253021911, -0.8909769220276735}, {-0.4761822076640612, \
-0.8178346272348191}, {-0.5113275301822882, -0.7456512070401311}, \
{-0.5499924438358135, -0.6586894624392281}, {-0.5840023166567905, \
-0.5740023598207741}, {-0.6134537516183958, -0.49243037750407714`}, \
{-0.6335078469751312, -0.4301434119191885}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6375229082007928, -0.41767284289399365`}, \
{-0.6384433516938053, -0.41481399380844547`}, {-0.6705856957837975, \
-0.29476358088873855`}, {-0.6921904585939205, -0.18407169814921812`}, \
{-0.7041446217024017, -0.0824864842461191}, {-0.7072931082597992, 
       0.010511367377565075`}, {-0.7024053184313026, 
       0.09536842516078219}, {-0.7018347294938225, 0.0989650516123509}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6997819875671505, 
       0.11190421924556611`}, {-0.6901541001828974, 
       0.17259224203104126`}, {-0.6712207411736493, 
       0.24256331767000705`}, {-0.6462466926561009, 
       0.305565590757781}, {-0.5808086458772892, 
       0.4106218664751794}, {-0.4988721871586317, 
       0.4880645800292388}, {-0.42295345704694753`, 0.5280839179262523}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.4113640668879701, 
       0.5341930786051802}, {-0.4055895843278013, 
       0.5372370042400776}, {-0.3061452866558, 
       0.5560665269927129}, {-0.2057628732749, 
       0.5450033732768831}, {-0.10972114390030913`, 
       0.5063126627194964}, {-0.022521988852172686`, 0.4441853957412538}, {
       0.04958602833411531, 0.36827354058219613`}}]}, 
     {Arrowheads[{{0.009566767278841372, 1.}}], 
      ArrowBox[{{0.057443166944115054`, 0.3578312642026581}, {
       0.10396658520329409`, 0.2900169882191969}, {0.1437772855390661, 
       0.21214522138108888`}, {0.17129496972645258`, 
       0.13599307095835153`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.1393227004972932`, -3.}, {-1.1642527811504946`, \
-2.9691275515247577`}, {-1.2203617820097574`, -2.900742383633962}, \
{-1.275197904871906, -2.8350779947364217`}, {-1.3288298136385701`, \
-2.7720957997010656`}, {-1.38132617221138, -2.71175721339682}, \
{-1.4466061344626198`, -2.6389785716754988`}, {-1.4806573805556993`, \
-2.602526711047416}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.4896005630039708`, -2.5929530337938793`}, \
{-1.510280664783847, -2.570814983814915}, {-1.5723497631750627`, \
-2.5072664498150687`}, {-1.6328134296362669`, -2.44833296967596}, \
{-1.691877474769425, -2.3936012432081952`}, {-1.7497477091765021`, \
-2.3426579702223798`}, {-1.8064241328574981`, -2.295503150718513}, \
{-1.8619067458124137`, -2.252136784696596}, {-1.8771024163124634`, \
-2.241221214598855}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.8877427137727407`, -2.2335779248349654`}, \
{-1.9699202876179205`, -2.174546961524304}, {-2.074418082666941, \
-2.1076660491312005`}, {-2.1335860210863524`, -2.0722329520453995`}, \
{-2.1917597407057956`, -2.0393979376072933`}, {-2.252594387781767, \
-2.0085630804988}, {-2.3125213284985695`, -1.9793938390287564`}, \
{-2.337863552762409, -1.9670911194140557`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.3496491579639613`, -1.9613696407161048`}, \
{-2.4297892295894368`, -1.9224645777332525`}, {-2.5296133756853014`, \
-1.8729399114704783`}, {-2.6267977529347055`, -1.8225693407019063`}, \
{-2.7212314067005425`, -1.76997106290883}, {-2.811540522283976, \
-1.7145384316100243`}}]}, 
     {Arrowheads[{{0.015699694810229054`, 1.}}], 
      ArrowBox[{{-2.8224010309965832`, -1.7072141547384128`}, \
{-2.90129529985869, -1.6533792917742112`}, {-2.9864887792279795`, \
-1.5882524245949907`}, {-3.0594115832699424`, -1.5264827787910171`}, \
{-3.1292110131637565`, -1.4615310548956262`}, {-3.141592653589793, \
-1.4488787132472642`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.8808369053278915`, 3.}, {-1.8559699660391873`, 
       2.9707635564427157`}, {-1.795719198899751, 
       2.9016747446052467`}, {-1.736850540707371, 
       2.8359351743745402`}, {-1.679281672315987, 
       2.773423393535724}, {-1.622930274579537, 
       2.714017949873926}, {-1.5577380915021775`, 
       2.647815474511165}, {-1.5247240187641458`, 2.6158303124830424`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.5153147602019104`, 
       2.606714301197016}, {-1.4939919714608947`, 
       2.5860560546915146`}, {-1.4316919144556888`, 
       2.5287396904149744`}, {-1.3708379204865606`, 
       2.4758663816815454`}, {-1.31124069007615, 
       2.426873497682081}, {-1.2527109237470975`, 
       2.3811984076074335`}, {-1.1952486214994038`, 
       2.338841111457605}, {-1.1388537833330679`, 
       2.2998016092325937`}, {-1.107118776490933, 2.279427543772459}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.0960942437057777`, 
       2.2723497273488014`}, {-1.0287465499626705`, 
       2.229112102484345}, {-0.9218692743541048, 
       2.1665660032900096`}, {-0.8698867296304085, 
       2.1376891122333794`}, {-0.8185967999617374, 
       2.11005110218849}, {-0.7423308661640887, 
       2.0704830281513225`}, {-0.667503685286494, 
       2.031471087552922}, {-0.6391799004401318, 2.0162798929652177`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6276346556370065, 
       2.0100877099177077`}, {-0.5634069905372512, 
       1.975639808137038}, {-0.4622601400641919, 
       1.9182277235671863`}, {-0.3642093070701597, 
       1.8579389174571943`}, {-0.2694006647579988, 
       1.7934774734208918`}, {-0.18554793901880767`, 1.730112383082372}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.1752210356733431, 
       1.7220569873488325`}, {-0.09044845129730807, 
       1.6505056726553908`}, {-0.017157750804150843`, 1.5823319520212937`}, {
       0.052848246844915805`, 1.5113549785102833`}, {0.11956954164989202`, 
       1.43757475212236}, {0.18300613361077775`, 1.3609912728575237`}, {
       0.1917689808001678, 1.3495652882482305`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.19974170970274016`, 1.3391695486254789`}, {
       0.24301368191011005`, 1.2827466899621642`}, {0.2994478457304259, 
       1.2039831526826719`}, {0.35230862507172533`, 1.1247006610190466`}, {
       0.40159601993400823`, 1.0448992149712883`}, {0.44734418166961565`, 
       0.9655422615118368}, {0.48324870677500964`, 0.8992894615495108}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.48949084965428125`, 0.887771151745867}, {
       0.4895872616308886, 0.8875932476131319}, {0.528325259817827, 
       0.811052173275173}, {0.5635581762304307, 0.7359190384979609}, {
       0.6000450802087048, 0.650880775218172}, {0.6321613119249627, 
       0.5683628379941899}, {0.6600296984150142, 0.4890743475078121}, {
       0.6837730667146695, 0.41372442444083646`}, {0.6866934622931513, 
       0.4031827214122684}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6901911256344775, 0.39055726460434637`}, {
       0.7035838043466522, 0.3422139364672163}, {0.7196940476833515, 
       0.2739818923992796}, {0.732286247035075, 0.20904462462638615`}, {
       0.7415428527121304, 0.1474184655378955}, {0.7507282781077471, 
       0.033437618553041996`}, {0.7486083140012236, -0.06928435827744257}, {
       0.7409512907137411, -0.12698706312838864`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.7392279254372578, -0.13997420371366656`}, {
       0.7363536746386147, -0.1616343240077804}, {
       0.7149223952931487, -0.24442587923351417`}, {
       0.6891206414401222, -0.30998588515591047`}, {
       0.657543196579097, -0.3684298975501583}, {
       0.6208681859161539, -0.4200458795706622}, {
       0.5797737346573726, -0.465121794371826}, {
       0.4869170466332642, -0.5341430419996446}, {
       0.4496540936953403, -0.5480418688552573}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.4373791794300905, -0.5526203280107733}, {
       0.3841542050687065, -0.5724728798006348}, {
       0.2770292287609413, -0.579315095543883}, {
       0.17138810047083924`, -0.5547669089334877}, {
       0.07250118558209022, -0.5018759692323245}, {-0.014785785916981407`, \
-0.4270870712295532}, {-0.030007594957568825`, -0.40808748844465165`}}]}, 
     {Arrowheads[{{0.00296731564572063, 1.}}], 
      ArrowBox[{{-0.03819897909445985, -0.3978631530442527}, \
{-0.08681182371346892, -0.3371854922428545}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.265202575144508, 3.}, {1.2675147984861839`, 
       2.997256797509107}, {1.3247271081679715`, 2.930771935214001}, {
       1.3807065766240443`, 2.867161483227391}, {1.4355256494032866`, 
       2.8063599256962917`}, {1.502051880742481, 2.734962651793449}, {
       1.5670308019406816`, 2.6681599086211234`}, {1.62083383211877, 
       2.615394571661404}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{1.630187388837082, 2.6062214159789097`}, {1.630462412997889, 
       2.605951696179318}, {1.6923467139141024`, 2.5483380144680288`}, {
       1.75288186362938, 2.494836589518195}, {1.812266021083778, 
       2.4449651473607528`}, {1.8704991862772973`, 2.3987236879957017`}, {
       1.927581359209937, 2.3561122114230417`}, {1.98365735403533, 
       2.3165217659481483`}, {2.0388426076674824`, 2.279363180824882}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.0499646156985123`, 2.272439587136732}, {
       2.1467171547898203`, 2.212222905942314}, {2.208489873275594, 
       2.1759608872692606`}, {2.2692505503080467`, 2.141915767172159}, {
       2.3315478480908443`, 2.1091992381280855`}, {2.3928923756709874`, 
       2.077620386928461}, {2.4532945921278655`, 2.045866401203932}, {
       2.507375807540196, 2.0172218999594462`}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{2.5189105434661108`, 2.011010726746286}, {2.616613401215335, 
       1.9576482531939121`}, {2.71744305224138, 1.8986782426713384`}, {
       2.81506657637393, 1.8363247432422503`}, {2.909310585807103, 
       1.7694476446390042`}, {2.9599181837478965`, 1.7294475931429811`}}]}, 
     {Arrowheads[{{0.008799743836804081, 1.}}], 
      ArrowBox[{{2.970196308177783, 1.721323802976948}, {2.999928194009707, 
       1.6978238343409697`}, {3.0866725144505547`, 1.621230199827517}, {
       3.141592653589793, 1.5673274524281626`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.038122169921395, 3.}, {2.0465411096344366`, 
       2.9936723173071247`}, {2.1215139913971663`, 2.9393355172066924`}, {
       2.195156598548228, 2.888011438258978}, {2.2674689310876217`, 
       2.8397000804639805`}, {2.3385470749188135`, 2.7932910783117}, {
       2.4084871159452677`, 2.7476740662921353`}, {2.471994683199641, 
       2.706298370116485}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{2.482973489724445, 2.699149831526453}, {2.5449528895839704`, 
       2.6588160126511555`}, {2.616891152011422, 2.6120288794498983`}, {
       2.6875640947599035`, 2.564817597797965}, {2.7526709422234124`, 
       2.5167173464127606`}, {2.816497375760611, 2.467501082724528}, {
       2.878940808284997, 2.4166861530451884`}, {2.9072362180619677`, 
       2.3924857946774996`}}]}, 
     {Arrowheads[{{0.011578336031096753`, 1.}}], 
      ArrowBox[{{2.9171924103301285`, 2.3839705117123025`}, {
       2.9400354354920712`, 2.364433441937435}, {3.0172739549213574`, 
       2.2977913832483168`}, {3.0921842934595363`, 2.22868759582647}, {
       3.141592653589793, 2.179971287167443}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.3600578491275819, 3.}, {-0.2960109163116385, 
       2.9488835475122466`}, {-0.20215930467846022`, 
       2.869547215996665}, {-0.11082869471919705`, 
       2.7877904315664286`}, {-0.06575651055543051, 
       2.745460351635424}, {-0.02138197988758737, 2.702383926200132}, {
       0.030070583303386852`, 2.650673192551171}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.03916074812393182, 2.641239617116199}, {
       0.08444774357569719, 2.5938171043058635`}, {0.13567828989651734`, 
       2.5380481488325044`}, {0.18578240819489797`, 2.481466816817499}, {
       0.2347574351594213, 2.424206598117723}, {0.2826007074786695, 
       2.366400982590055}, {0.3293095618412238, 2.308183460091371}, {
       0.3748813349356663, 2.2496875204785476`}, {0.3797054918407354, 
       2.2433234339711436`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.38761962312047515`, 2.232883015658403}, {
       0.41928144663342753`, 2.1911143527015953`}, {0.4624869229212657, 
       2.1326405278584737`}, {0.5045125096607546, 2.0743626090279883`}, {
       0.5453729527134671, 2.016377159288945}, {0.5850829979409771, 
       1.9587807417201473`}, {0.6236573912048586, 1.901669919400401}, {
       0.6611108783666844, 1.8451412554085107`}, {0.6880837289286759, 
       1.8036957824440987`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.6952298127497721, 1.7927153774206113`}, {0.697458205288028,
        1.7892913128232815`}, {0.7451251931887688, 1.714843702218282}, {
       0.7907212835671447, 1.64253806266462}, {0.8343279577129488, 
       1.5723796457458998`}, {0.8760266969159747, 1.5043737030457283`}, {
       0.9158989824660162, 1.4385254861477113`}, {0.9540262956528658, 
       1.374840246635454}, {0.9705924061829468, 1.3468920630094228`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9772725802150104, 1.3356221436060152`}, {
       0.9904901177663178, 1.313323236092563}, {1.0253719300961648`, 
       1.2539797061026436`}, {1.0664905115701997`, 1.1837504161350445`}, {
       1.1054291879050624`, 1.1172012484076677`}, {1.142187959100753, 
       1.0543322029205133`}, {1.1767668251572716`, 0.9951432796735811}, {
       1.2403304362415088`, 0.8870303250606728}, {1.242385377901239, 
       0.8835914854928473}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.2491056605368132`, 0.8723454368642861}, {
       1.2970656155464915`, 0.792086909729232}, {1.3477857516013012`, 
       0.7092385989341212}, {1.393304232935022, 0.6374109579302034}, {
       1.4118838749258862`, 0.6087012850748026}, {1.4296266922528762`, 
       0.5818508520490688}, {1.452606755262579, 0.5490623766348826}, {
       1.4743409175719118`, 0.5192969165433607}, {1.5155446448230931`, 
       0.4654500083107669}, {1.5398311637712987`, 0.43715701996031153`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.5483643368797968`, 0.42721615655926004`}, {
       1.552672725517674, 0.42219702681898497`}, {1.586564452847849, 
       0.38811381553555113`}, {1.6650524761909686`, 0.33463242202617766`}, {
       1.736662740504518, 0.3198909763485869}, {1.8085504113228796`, 
       0.33438442933890433`}, {1.8861843451562206`, 0.37230714334047593`}, {
       1.9859913929571593`, 0.4364382152836446}, {2.004810982701105, 
       0.4494854820473265}}]}, 
     {Arrowheads[{{0.010395710443720533`, 1.}}], 
      ArrowBox[{{2.0155776029338113`, 0.45694977687153054`}, {
       2.042324033024536, 0.4754925726028838}, {2.1036599611627853`, 
       0.5180157398789978}, {2.1702626964262652`, 0.5625606738855282}, {
       2.2423957578693328`, 0.6076803313960164}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-3.141592653589793, 1.162551890945718}, {-3.102474830448636, 
       1.1223359217911848`}, {-3.0507540272921077`, 
       1.0641165423636259`}, {-3.001782589833045, 
       1.0041831528864686`}, {-2.927522957879355, 
       0.9035218366426799}, {-2.861182972901025, 
       0.8008039277971739}, {-2.8289978633131896`, 0.7439889012980615}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.8225404426753617`, 
       0.7325898869913718}, {-2.8027901261356747`, 
       0.6977254800672366}, {-2.7523719088209235`, 
       0.5959825471701532}, {-2.70972195281224, 
       0.49670642358261213`}, {-2.674633889965092, 
       0.4010284037813011}, {-2.6483498584882037`, 
       0.3158014629897344}, {-2.630791407722869, 0.24672557063773942`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.6276154974853108`, 
       0.2340168180184138}, {-2.612956131799707, 
       0.1583847764770156}, {-2.6038464365880993`, 
       0.08619503075586346}, {-2.601537698650725, 
       0.060319776507036564`}, {-2.599922045011282, 
       0.03507907670975594}, {-2.6003734806815295`, -0.008962567182949223}, \
{-2.6029316535566305`, -0.050775917331571385`}, {-2.6170400272681262`, \
-0.15889876329371336`}, {-2.6450971540738424`, -0.2500568529754131}, \
{-2.6604793795001567`, -0.2788155224667693}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.666658389017169, -0.29036782309680104`}, \
{-2.6847803236152536`, -0.3242486636908237}, {-2.7337668255338348`, \
-0.38147267275409835`}, {-2.8499907909150757`, -0.4450969444312913}, \
{-2.9087650352405845`, -0.45186182334756}, {-2.967501876924936, \
-0.44490074496412674`}, {-3.0245154958766176`, -0.4254514035537632}, \
{-3.075786814771992, -0.39684358935430697`}, {-3.1077857765982855`, \
-0.37197362517062044`}}]}, 
     {Arrowheads[{{0.0012462861810616191`, 1.}}], 
      ArrowBox[{{-3.1181299057561995`, -0.3639340480410474}, \
{-3.1229897741225994`, -0.3601569019928127}, {-3.141592653589793, \
-0.3412840077241583}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-3.141592653589793, 2.71491429777329}, {-3.0872627268538255`,
        2.659588404153652}, {-3.019026156529572, 
       2.5864226459368593`}, {-2.952729500671821, 
       2.5118416343587664`}, {-2.8883710477928775`, 
       2.436131183358042}, {-2.8259490864050454`, 
       2.359577106873355}, {-2.796005192254806, 2.321403230027941}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.787919449591144, 
       2.311095147081292}, {-2.7654619050206324`, 
       2.2824652188433765`}, {-2.7069077921519433`, 
       2.2050813332067754`}, {-2.6503690128030333`, 
       2.1279911960365787`}, {-2.595897295071867, 
       2.0516587599024096`}, {-2.5434451221116134`, 
       1.9762171484878341`}, {-2.4929649770754425`, 
       1.901799485476419}, {-2.4822317104044775`, 1.8856051657908302`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.474994003782358, 
       1.8746849363376505`}, {-2.444409343116524, 
       1.82853889455173}, {-2.3977307033880253`, 
       1.756568499397332}, {-2.3528815410431183`, 
       1.6860214236967923`}, {-2.309814339234972, 
       1.617030791133676}, {-2.2685169812567176`, 
       1.5500185833548608`}, {-2.22896447762332, 
       1.4853017427478377`}, {-2.1960818936347235`, 1.4310862633460353`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.189296893167044, 
       1.4198791552913588`}, {-2.1548267293347623`, 
       1.3626564222271162`}, {-2.086866486256635, 
       1.2488993479274084`}, {-2.024549140276274, 
       1.1438350382046085`}, {-1.9848180209685538`, 
       1.0768638915581268`}, {-1.947406559761887, 
       1.014071212106087}, {-1.9207668346701618`, 0.9698713594088587}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.9140040822759397`, 
       0.958650798437481}, {-1.8789627522639005`, 
       0.9005112485917438}, {-1.8181001626418951`, 
       0.8020159669607735}, {-1.7902155424557362`, 
       0.7580531233843684}, {-1.7638432953056302`, 
       0.7173555348574325}, {-1.7161415055464826`, 
       0.6464515448800825}, {-1.6730154090230223`, 
       0.5861770487361838}, {-1.6225622284607581`, 0.5237737025945878}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.6143254071141628`, 
       0.5135859362759959}, {-1.5979083015956321`, 
       0.4932803320128184}, {-1.49970133717174, 
       0.40495761218985615`}, {-1.414920363484466, 
       0.3695273857125293}, {-1.3336122856447037`, 
       0.37203643635645384`}, {-1.3219475587348437`, 
       0.3746947639437954}, {-1.3101994325262094`, 
       0.3779164063774234}, {-1.2868477555237263`, 
       0.38700150459104526`}, {-1.2628432640987624`, 
       0.39783819368129625`}, {-1.2133385611698573`, 
       0.4227253170345146}, {-1.1604798218630656`, 
       0.4535552357359175}, {-1.1600801593012953`, 0.4538066768247447}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.148991195455059, 
       0.46078311497575164`}, {-1.103603562035339, 
       0.4893379936608981}, {-1.0301953480462778`, 
       0.5369319920600598}, {-0.9497491117778892, 
       0.5877049956846867}, {-0.8619287428408712, 
       0.6386955448011866}, {-0.7670329986576302, 
       0.6863868148556176}, {-0.6926850583518658, 0.7160439966902534}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6805164770275737, 
       0.720898009155426}, {-0.6657824722558374, 
       0.7267753617340004}, {-0.5596370261742822, 
       0.7550934393521435}, {-0.4504683498134302, 
       0.767350472820262}, {-0.3409295941909805, 
       0.7599509074578715}, {-0.2746989593020049, 
       0.744923955794901}, {-0.21009493510841667`, 
       0.7224373075656723}, {-0.17194857779090725`, 0.7040287287259199}}]}, 
     {Arrowheads[{{0.0076525871171629805`, 1.}}], 
      ArrowBox[{{-0.16014962835943228`, 
       0.6983348196318565}, {-0.14777036209588795`, 
       0.6923608626143108}, {-0.08837808075009077, 0.6545645207849418}, {
       0.0004322029944243133, 0.5793688673763161}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.666040054444666, -3.}, {
       0.613374100281216, -2.9634026441276733`}, {
       0.5291862517115867, -2.904618354696003}, {
       0.44673886993330164`, -2.8455091348841592`}, {
       0.3660516773586248, -2.784836814313577}, {
       0.2871246739875558, -2.7226013929842567`}, {
       0.2452646943061919, -2.6879931890935067`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.23516767911557493`, -2.6796453694561158`}, {
       0.20995785982009466`, -2.6588028708961993`}, {
       0.13465774918805629`, -2.5931789476547373`}, {
       0.061330856423254976`, -2.5254673228652047`}, {-0.010022818474308609`, \
-2.4556679965276027`}, {-0.07940327550463405, -2.3837809686419305`}, \
{-0.12977563293188324`, -2.3287906659314137`}, {-0.14123593519545033`, \
-2.315776728604215}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.14989423299352678`, -2.3059446541690924`}, \
{-0.1789592241590297, -2.2729394188145307`}, {-0.25668866158116, \
-2.180496071603417}, {-0.33112761010512837`, -2.0867488090488155`}, \
{-0.4022941785061973, -1.992282110085869}, {-0.47020647555962947`, \
-1.8976804536497232`}, {-0.4729526336447868, -1.8936863604134682`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.48037512117883435`, -1.8828908758358833`}, \
{-0.5348352607042527, -1.8036824442093007`}, {-0.5961891728480424, \
-1.710903385806503}, {-0.6543431399699818, -1.6197428067359394`}, \
{-0.7093720900490543, -1.5306002352922208`}, {-0.7558270236688822, \
-1.4534323377284393`}, {-0.7628036098051929, -1.4416153680906483`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.7694640993904187, -1.4303338040615317`}, \
{-0.799852804657062, -1.378861292943422}, {-0.8415481644081508, \
-1.3068558749542107`}, {-0.8810118343167062, -1.2373848577778475`}, \
{-0.9183425457772857, -1.170417015431373}, {-0.953639030184447, \
-1.1059211219318295`}, {-0.9870000189327472, -1.0438659512962576`}, \
{-1.018524243416744, -0.9842202775416989}, {-1.0245574524728651`, \
-0.9726470715985204}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.0306135889102628`, -0.9610298851960567}, \
{-1.051446322627763, -0.9210674845185238}, {-1.0823529892792982`, \
-0.8610687629805542}, {-1.1381200849039186`, -0.7505335343602318}, \
{-1.1866411885650017`, -0.6517494375113636}, {-1.2287319585369452`, \
-0.5638513182645813}, {-1.2625781899441972`, -0.4911853130458951}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.2680363660839147`, -0.47927570478049714`}, \
{-1.2963430271404597`, -0.41667673590266113`}, {-1.3083470342021415`, \
-0.3896407110825636}, {-1.3195721247718901`, -0.3639779472488718}, \
{-1.3342220652678463`, -0.3290453358343185}, {-1.3474283438973045`, \
-0.29660984357546705`}, {-1.3711482878769332`, -0.2363669815402204}, \
{-1.3898711977688687`, -0.1846049104317645}, {-1.4043010297914813`, \
-0.13989083991675924`}, {-1.424992657334951, -0.05051850284008264}, \
{-1.4284108420154664`, 0.01572896687674693}}]}, 
     {Arrowheads[{{0.009434544027856937, 1.}}], 
      ArrowBox[{{-1.4263285278336038`, 
       0.028633633321901913`}, {-1.4183086702643188`, 
       0.0724225804619889}, {-1.3961244745567534`, 
       0.12281578223848842`}, {-1.3587100378890182`, 
       0.17862863922730804`}, {-1.3068465669990708`, 
       0.24010765511072826`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.9155096781389398`, -3.}, {-1.9504898493519809`, \
-2.9722534061585404`}, {-2.0236302696829727`, -2.9171063869626597`}, \
{-2.0955159825329015`, -2.8649619907559836`}, {-2.166146987901768, \
-2.8158202175385125`}, {-2.2355232857895717`, -2.7696810673102465`}, \
{-2.3037436713251047`, -2.72552999324662}, {-2.3444228814491774`, \
-2.6993783711086037`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.3554430616275175`, -2.692293779568163}, \
{-2.3709069396371563`, -2.6823524485230665`}, {-2.4370130907257286`, \
-2.6401484331395872`}, {-2.5020621245908203`, -2.5989179470961816`}, \
{-2.5727860594536343`, -2.55425683316043}, {-2.6422952178973733`, \
-2.509447109503885}, {-2.7074492931013863`, -2.4634153741315314`}, \
{-2.771352571488109, -2.416411746081264}, {-2.7909093843908863`, \
-2.4012228795522788`}}]}, 
     {Arrowheads[{{0.01722279112112708, 1.}}], 
      ArrowBox[{{-2.801256311037722, -2.393186903107381}, \
{-2.8339035378874415`, -2.367831321212364}, {-2.895136030689419, \
-2.317875734238405}, {-2.9668318638470312`, -2.2589235247464083`}, \
{-3.0365789615930643`, -2.1977629968496335`}, {-3.1043773239275207`, \
-2.134394150548082}, {-3.141592653589793, -2.0973328046163653`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{3.141592653589793, -0.9752069826806885}, {
       3.083942816350567, -0.9144373611880325}, {
       3.026712866558286, -0.8462917441114456}, {
       2.9739745520913443`, -0.7757046859705082}, {
       2.9092354232529685`, -0.676982370813352}, {
       2.853264106564127, -0.5774217295021811}, {
       2.839644985048694, -0.5496829815145671}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.8338710769632476`, -0.5379229732714247}, {
       2.818726539964982, -0.5070773350481406}, {
       2.7885161731026167`, -0.43830271440756546`}, {
       2.7626330059770337`, -0.371097867580456}, {
       2.741077038588231, -0.30546279456681213`}, {
       2.7098279294083074`, -0.1813034433112031}, {
       2.6936500719501835`, -0.0682261339720202}, {
       2.691765973127765, -0.04478207417954025}, {
       2.691351218070507, -0.03711500155601892}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.690643546831642, -0.024033143512314115`}, {
       2.6905292642053333`, -0.02192053950621349}, {2.6917348576138997`, 
       0.021237406793452575`}, {2.6952408391045535`, 0.06184667005112548}, {
       2.711477058806781, 0.16135613569909393`}, {2.7414226021971424`, 
       0.2425541480731876}, {2.782295418727421, 0.30538424047495966`}, {
       2.8313134578494044`, 0.3497899462059636}, {2.9356761788354433`, 
       0.3830140590667778}}]}, 
     {Arrowheads[{{0.008418722350285351, 1.}}], 
      ArrowBox[{{2.948397693014768, 0.3848129539115529}, {2.9841199771040268`,
        0.38157558618194015`}, {3.0245135074601457`, 0.3702967898016626}, {
       3.0633381968043403`, 0.35231860828164774`}, {3.125063665984726, 
       0.3082881289253172}, {3.141592653589793, 0.2906475239230828}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.6318678786403522, -3.}, {-0.6685326606559927, \
-2.951828781487729}, {-0.7216675095665478, -2.881175474521646}, \
{-0.7735258748739902, -2.811518616178759}, {-0.8241356928560344, \
-2.7429841245009365`}, {-0.8735248997903954, -2.6756979175300453`}, \
{-0.9217214319547878, -2.609785913307954}, {-0.9441666347298248, \
-2.57919608103867}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{-0.951916923470039, -2.5686334661682286`}, \
{-0.9828216006140491, -2.5265144931454913`}, {-1.041924618391965, \
-2.4467882700486}, {-1.0991291769695775`, -2.370543056503827}, \
{-1.1545339680279283`, -2.297714664997721}, {-1.208237683248059, \
-2.22823890801683}, {-1.260339014311011, -2.162051598047702}, \
{-1.268909404766884, -2.1513867144306165`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.277115974938169, -2.1411745640947792`}, \
{-1.3109366528978261`, -2.0990885475768857`}, {-1.3601292906895464`, \
-2.0392855690909286`}, {-1.415899779601557, -1.9736157438236777`}, \
{-1.4700351923415846`, -1.9124564767199526`}, {-1.5225355289096296`, \
-1.8558077677797535`}, {-1.5734007893056914`, -1.8036696170030806`}, \
{-1.6228614968533774`, -1.7556634679147185`}, {-1.6271200208161423`, \
-1.7517607103098047`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.6367784708428914`, -1.7429091482138381`}, \
{-1.6711481748762933`, -1.711410764039452}, {-1.7641994423478173`, \
-1.6341656919282062`}, {-1.8532864965263505`, -1.5701282843756192`}, \
{-1.939141242217979, -1.5174924250879671`}, {-1.9837772708628334`, \
-1.492622638337979}, {-2.0276821067532085`, -1.4703472896079366`}, \
{-2.070190646490157, -1.4534737755879852`}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{-2.0823673947657264`, -1.4486402872109039`}, \
{-2.0986064622388616`, -1.4421942851987313`}, {-2.1683461078539104`, \
-1.4181836504444172`}, {-2.237555527421371, -1.395500271123468}, \
{-2.305704494893658, -1.3754714026692498`}, {-2.372879563620584, \
-1.3571060109107445`}, {-2.439167286951962, -1.3394130616769346`}, \
{-2.504561496397799, -1.3215770135458924`}, {-2.569056023468103, \
-1.30278232509569}, {-2.5840063682942263`, -1.2978640574291789`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.5964512352042424`, -1.2937700256694153`}, \
{-2.6906487338186205`, -1.262781542320737}, {-2.807989929262782, \
-1.2131895942372555`}, {-2.9202070242514724`, -1.1512358719337992`}, \
{-3.0260283765687266`, -1.0773188805548493`}, {-3.0564034228925587`, \
-1.0509542939292817`}}]}, 
     {Arrowheads[{{0.0038894293738370566`, 1.}}], 
      ArrowBox[{{-3.066297316272946, -1.0423667050805137`}, \
{-3.124380198852876, -0.9919525864347183}, {-3.141592653589793, \
-0.9738211598567875}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{2.4722138275726597`, -3.}, {
       2.419606053111313, -2.930363232329564}, {
       2.36637606717602, -2.8592421879471095`}, {
       2.3144423857610126`, -2.789334733887446}, {
       2.2637731547909135`, -2.7207570376400345`}, {
       2.214336520190345, -2.653625266694333}, {
       2.166100627883929, -2.5880555885398007`}, {
       2.159667259724073, -2.579373837402723}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.1518672813416093`, -2.5688478625931834`}, {
       2.1034571266655027`, -2.503518954785921}, {
       2.042890538024011, -2.4230216695159195`}, {
       1.9842932135348965`, -2.3464598115663473`}, {
       1.9275575047736004`, -2.273729459773757}, {
       1.8725757633155642`, -2.204726692974702}, {
       1.8314199358626537`, -2.1542774614754188`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{1.8231384681251153`, -2.1441259541700934`}, {
       1.8192403407362288`, -2.139347590005732}, {
       1.7674435886110367`, -2.077488229703402}, {
       1.7170778585154285`, -2.0190446909042628`}, {
       1.6624273726244836`, -1.9579186819403498`}, {
       1.6092755154386114`, -1.9011378889436643`}, {
       1.5576222869578122`, -1.8487023119142079`}, {
       1.5074676871820853`, -1.8006119508519784`}, {
       1.4644816839524812`, -1.7629056514594348`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.4546328171863296`, -1.754266459837497}, {
       1.4107875523921787`, -1.7158064366424346`}, {
       1.3183682897152205`, -1.645060906328264}, {
       1.2295413278515706`, -1.5865143279420741`}, {
       1.1436380955015888`, -1.5383056695164734`}, {
       1.1009329109587873`, -1.5165388706456973`}, {
       1.0588317455304208`, -1.496854717553451}, {
       1.011851682632927, -1.4796591647962754`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.999548901075152, -1.4751561242235474`}, {
       0.97381386924369, -1.4657366370991673`}, {
       0.8903565148898053, -1.4389845343698338`}, {
       0.8060916175745868, -1.4126990613929298`}, {
       0.7233409520018655, -1.3883499449912324`}, {
       0.6420747187586326, -1.3643597576583706`}, {
       0.56226311843188, -1.3391510718879753`}, {
       0.4999732629286994, -1.3172285729962192`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.4876152953966916, -1.3128792688063744`}, {
       0.4840414848978362, -1.3116214900546401`}, {
       0.40754515203273, -1.2806686145329589`}, {
       0.29769374696253903`, -1.2281635174685328`}, {
       0.19288232067720115`, -1.1653353531699808`}, {
       0.09399324711755394, -1.0914322735210213`}, {
       0.041848255167007214`, -1.044251057994892}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.032133629713723334`, -1.0354611853700828`}, {
       0.0019457034835527742`, -1.0081469026273921`}, {-0.08248987597843103, \
-0.9168869877695225}, {-0.15867339834605113`, -0.8199976355135434}, \
{-0.22617226507637966`, -0.7196050152214959}, {-0.28358853182520927`, \
-0.6202278121943142}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.28962542420500126`, -0.6086040772177624}, \
{-0.32013849277357204`, -0.5483206079571479}, {-0.3513250899424042, \
-0.4793560556945671}, {-0.37839893613811637`, -0.4117734796978262}, \
{-0.40137263332440826`, -0.3461549777583126}, {-0.43566281919597716`, \
-0.22157942319036572`}, {-0.45431007519528205`, -0.11393377570742932`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.45588011061888506`, -0.10094627263617925`}, \
{-0.4620694281385494, -0.004190874244861392}, {-0.45691242519307446`, 
       0.0871282746773368}, {-0.44142915069695343`, 
       0.16643779746107307`}, {-0.41709238750197597`, 
       0.2337810107620293}, {-0.371271240101214, 
       0.307443553805891}, {-0.31501892790058544`, 
       0.3579384771425391}, {-0.29483938483083166`, 
       0.36324893407484743`}}]}, 
     {Arrowheads[{{0.0037788513179510767`, 1.}}], 
      ArrowBox[{{-0.28216976366546725`, 
       0.3665830768408536}, {-0.18641653438811095`, 0.3917815364119726}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.8166817522259056, 3.}, {-0.8062390374234628, 
       2.9929495145516}, {-0.7487894822453632, 
       2.954596463062992}, {-0.6921208684468919, 
       2.916981718631658}, {-0.6361768642667213, 
       2.8795192732287433`}, {-0.58091892918275, 
       2.8417531421287983`}, {-0.47253839032493594`, 
       2.765176186880245}, {-0.3862939730729535, 2.70119741223385}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.37577207134011864`, 
       2.69339194028255}, {-0.36713349991651856`, 
       2.6869835809708684`}, {-0.2648585060005664, 
       2.606908052485538}, {-0.17758034778106493`, 
       2.5341144951706682`}, {-0.09291397113508307, 
       2.4584877038718327`}, {-0.010859376062620885`, 2.3800276785890313`}, {
       0.01897468221165324, 2.349498701486493}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.02813122298931897, 2.34012887921257}, {0.06858343743632223,
        2.2987344193222627`}, {0.14526429933666923`, 2.2152714473195463`}, {
       0.21903303961334325`, 2.130302283828899}, {0.2898896582663448, 
       2.043826928850321}, {0.35783415529567375`, 1.9558453823838122`}, {
       0.3681028420065289, 1.9418767741916991`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.3758625883608934, 1.9313211053368189`}, {
       0.4228367036239737, 1.8674216964097272`}, {0.4848674761738879, 
       1.779619922908421}, {0.5439264729454166, 1.6924400618798934`}, {
       0.6000136939385599, 1.6058821133241434`}, {0.6385259402014541, 
       1.5445615964427961`}, {0.6681516433201027, 1.4965982794623116`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.6750363366027059, 1.4854521228663167`}, {
       0.6756431856544477, 1.4844696485158708`}, {0.7113654302975407, 
       1.4256062695433682`}, {0.7456926741307325, 1.3679714595252885`}, {
       0.8101621593674139, 1.2563875463523977`}, {0.8690516413644915, 
       1.1497179089971976`}, {0.9087164865352488, 1.0752520886725696`}, {
       0.9326630345459767, 1.0292508140415892`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9387123564896726, 1.0176300777275908`}, {
       0.9457859892002178, 1.0040416423167455`}, {0.9803763404296912, 
       0.9360899575316379}, {1.012603731293962, 0.8714004219191587}, {
       1.070425897953962, 0.7515718200932493}, {1.0960584860908806`, 
       0.696543102190575}, {1.1197917877823402`, 0.6444332957532288}, {
       1.1497913783129852`, 0.576881087025403}, {1.1637034487454878`, 
       0.5444722814602764}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.1688712655145863`, 0.5324336154918651}, {
       1.1766218610245234`, 0.5143782480960357}, {1.221576208640489, 
       0.4031777471691749}, {1.2563153916825396`, 0.30824130279409895`}, {
       1.2823816716992074`, 0.22678767529533952`}, {1.3122215599638736`, 
       0.10247676034102526`}, {1.3190895370124993`, 0.03282494290220582}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.3203751174164498`, 0.019787186519954317`}, {
       1.3218854353881486`, 0.004470246627095449}, {
       1.3152814247487032`, -0.07683392849526331}, {
       1.3129268502712166`, -0.08946133718595214}, {
       1.3101854880278105`, -0.10182766790311829`}, {
       1.2965509250563774`, -0.13950232668675724`}, {
       1.27928042416114, -0.1763982754253426}, {
       1.2423350746476167`, -0.24214375300141172`}, {
       1.193671501456129, -0.30799634910035895`}, {
       1.1331824785735785`, -0.37590820843258604`}, {
       1.080820586328623, -0.42607984076693645`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.0713610613081779`, -0.4351436807283177}, {
       1.0544673140816596`, -0.4513307747820088}, {
       0.9613173006028013, -0.5286324453858909}, {
       0.8855062449705643, -0.5833501479384686}, {
       0.8024534491780636, -0.6349518444833692}, {
       0.7130255456151151, -0.6803164441999525}, {
       0.6307017112285938, -0.7115393108912303}}]}, 
     {Arrowheads[{{0.016025800792555257`, 1.}}], 
      ArrowBox[{{0.618452154135789, -0.7161851864263774}, {
       0.6180891666715335, -0.7163228562675785}, {
       0.536776095428322, -0.7368316794591812}, {
       0.4537140305293603, -0.7467682439527689}, {
       0.37023724279895265`, -0.7450211492855208}, {
       0.2876800030614032, -0.7304789949946155}, {
       0.20744422822716477`, -0.7033996697206006}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{-2.3559213727785675`, 3.}, {-2.31379016144129, 
       2.9440568304455854`}, {-2.2620005391570785`, 
       2.874952289920121}, {-2.2114128039450702`, 
       2.80726651275243}, {-2.161996466094237, 
       2.7411184970915006`}, {-2.099480843892658, 
       2.658086679181695}, {-2.0407722867995663`, 2.5813186078082437`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.032747520299177, 
       2.570963089472303}, {-1.9801246664086327`, 
       2.5033332039590688`}, {-1.9230904520361003`, 
       2.4314235816756007`}, {-1.8676897145164983`, 
       2.363033392963597}, {-1.8138256243047848`, 
       2.298068655337734}, {-1.7614013518559166`, 
       2.236435386312689}, {-1.7103200676248518`, 
       2.178039603403137}, {-1.6997969158728152`, 2.166436633455814}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.6909956950949792`, 
       2.1567322879715607`}, {-1.6532913450384255`, 
       2.115158959856733}, {-1.5977568520470267`, 
       2.0566524979916485`}, {-1.543716588650656, 
       2.0025202178078825`}, {-1.491170554849313, 
       1.952762119305436}, {-1.4399082845889104`, 
       1.9069524888577456`}, {-1.3897193118153588`, 
       1.8646656128382473`}, {-1.3069743795865203`, 1.8016386278688006`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.2965524222138618`, 
       1.7937002015146388`}, {-1.292561258728812, 
       1.7906601240838282`}, {-1.1990536430602448`, 
       1.7287832757244967`}, {-1.1085537122802296`, 
       1.6770726904425712`}, {-1.0631803156461963`, 
       1.6533003427777506`}, {-1.0184498234898878`, 
       1.6315582643922308`}, {-0.9349101179003291, 
       1.5979584578428738`}, {-0.8529537300522092, 
       1.5677909255899496`}, {-0.8300904762327218, 1.559471733501433}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8177791703344065, 
       1.5549920509751745`}, {-0.764838838749127, 
       1.5357287916348825`}, {-0.67851896705303, 
       1.5050719854924497`}, {-0.5939963603759875, 
       1.4742569589217518`}, {-0.5112732641300686, 
       1.4417201636818902`}, {-0.4305032959774264, 
       1.4064467148520663`}, {-0.35184007358021396`, 
       1.3674217275114815`}, {-0.3333881956559707, 1.3567873997178512`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.322037387030062, 
       1.3502456146406756`}, {-0.24142277988599986`, 
       1.3037851860141485`}, {-0.136663016616871, 
       1.2302525228150558`}, {-0.03836115181618326, 1.14653678080764}, {
       0.052715898057151926`, 1.0546027978247279`}, {0.08140975239585409, 
       1.0206210997870437`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.08986194680464465, 1.0106112936883238`}, {
       0.13593637191362615`, 0.9560460483632474}, {0.21082038982535628`, 
       0.8532185410539223}, {0.2770654083139078, 0.7481839385193747}, {
       0.3346221609311075, 0.6430958244410234}, {0.36996839338215887`, 
       0.5697473500189026}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.37530168178243295`, 0.5577840150161881}, {
       0.40430921785693197`, 0.4902197712324423}, {0.4322674471753415, 
       0.41639655479034887`}, {0.4556917753156216, 0.3451664332368815}, {
       0.4747615542364004, 0.27673239892013174`}, {0.4897344949077197, 
       0.21104920205260264`}, {0.5007703595353543, 0.14838189551628228`}, {
       0.508028910325079, 0.08899553219315884}, {0.5093114746438512, 
       0.054300158716137525`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5097954408127733, 0.04120811589596236}, {
       0.5120584306421685, -0.020009303110933213`}, {
       0.5035117763617278, -0.11611518045454747`}, {
       0.48397914889527105`, -0.19920365549807104`}, {
       0.4550548862772225, -0.2694555378800993}, {
       0.3974236151600774, -0.35084694909963643`}, {
       0.32747264474271337`, -0.40326122935477177`}, {
       0.31045468735537685`, -0.40857956948630647`}}]}, 
     {Arrowheads[{{0.004919559280493173, 1.}}], 
      ArrowBox[{{0.2979501072530303, -0.41248741862898836`}, {
       0.25042029144582834`, -0.4273411241060038}, {
       0.17137082365010062`, -0.4243669520643716}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{3.141592653589793, -2.746340041922184}, {
       3.087534452309603, -2.6909146734932845`}, {
       3.0304121856385695`, -2.6298873872011375`}, {
       2.9746178333161315`, -2.5678176244746833`}, {
       2.8895041900872167`, -2.4689530195549345`}, {
       2.807801617607305, -2.3685885683336814`}, {
       2.7957473457245845`, -2.353012369357952}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.787729237411134, -2.342651590066232}, {
       2.7294902388383333`, -2.2673967560336994`}, {
       2.654550176742242, -2.166050067877766}, {
       2.583015298485268, -2.0653801836734127`}, {
       2.5148764758702105`, -1.9660914275603685`}, {
       2.482237431565977, -1.9170394806587971`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.4749798987210885`, -1.9061324175589833`}, {
       2.450049338813849, -1.8686652512597015`}, {
       2.388449517232965, -1.7735831064924816`}, {
       2.3327718625549387`, -1.6860809683610554`}, {
       2.2799373964847276`, -1.6020707090571429`}, {
       2.229812809649478, -1.521500317412143}, {
       2.1942007136816577`, -1.4636928204029407`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.1873291684491645`, -1.4525385533012545`}, {
       2.182264792676336, -1.4443177822574556`}, {
       2.137160036192449, -1.3704710924244805`}, {
       2.094365230824963, -1.2999082367446178`}, {
       2.0537470672010243`, -1.2325772040492666`}, {
       2.0151722359477793`, -1.168425983169827}, {
       1.9760775508658768`, -1.1035894453158825`}, {
       1.9390119396969734`, -1.0425979790400604`}, {
       1.9155373070557458`, -1.0044944051907005`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.90866553560264, -0.9933402774545554}, {
       1.870967939098165, -0.9321502612227823}, {
       1.810054085071593, -0.835968680490161}, {
       1.755284228537496, -0.7529390876143649}, {
       1.705839805515156, -0.6818516531970942}, {
       1.6609022520238532`, -0.6214965478400488}, {
       1.642316598654039, -0.597553090088273}, {
       1.6244469018381722`, -0.5754226524575674}, {
       1.6122075706186334`, -0.5618711356437095}}]}, 
     {Arrowheads[{{0.014783346794515689`, 1.}}], 
      ArrowBox[{{1.6034264561333855`, -0.5521485929281988}, {
       1.6000665152359983`, -0.5484284308745874}, {
       1.5767473086802586`, -0.5245670160733812}, {
       1.5319822415075632`, -0.48270723334977705`}, {
       1.4904678969334129`, -0.4517516141396386}, {
       1.4512876352739033`, -0.43020471066329935`}, {
       1.3577498096031748`, -0.41065315886424286`}, {
       1.263785687531899, -0.42842468908809894`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{0.7979938711883259, 3.}, {0.8163986099541118, 
       2.9756190390786963`}, {0.8683538807579045, 2.906423229867285}, {
       0.9191148122492163, 2.8386005604365776`}, {0.9687108817707459, 
       2.7722730546868735`}, {1.0315730679666768`, 2.688810097849573}, {
       1.0925094412001668`, 2.6091028946197072`}, {1.1137485159152707`, 
       2.5817791283975393`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{1.1217887365468941`, 2.571435499408989}, {
       1.1516163094590548`, 2.5330627529424508`}, {1.20898998073118, 
       2.4606009807629814`}, {1.2647267630043817`, 2.391628886026475}, {
       1.3189229642664992`, 2.3260577766781068`}, {1.3716748925053714`, 
       2.2637989606630526`}, {1.4230788557088379`, 2.2047637459264884`}, {
       1.4561617226423518`, 2.168098699390788}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.464938171806717, 2.158371945126221}, {1.4809274781828616`, 
       2.140651332715782}, {1.5372488825946955`, 2.080989784538604}, {
       1.5920430689443403`, 2.025779101394957}, {1.645310037231795, 
       1.9750192832848386`}, {1.6972646058178784`, 1.9282805934356375`}, {
       1.7481215930634064`, 1.8851332950747395`}, {1.8465428235328, 
       1.8096128728178567`}, {1.851638243795509, 1.8062141057754382`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.8625371249817981`, 1.798944291655042}, {
       1.9412301250983868`, 1.7464541806385465`}, {2.0328398942185792`, 
       1.693653382661167}, {2.0821955976855753`, 1.6675583035036639`}, {
       2.130791230754877, 1.6438400896991314`}, {2.2192138990243144`, 
       1.6083232968045946`}, {2.305870779870923, 1.5763510643356535`}, {
       2.330423835463279, 1.5673544329035842`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.342725036497469, 1.5628470765193607`}, {
       2.3916713521160387`, 1.54491236530097}, {2.4757593071581696`, 
       1.5145407331348026`}, {2.558122120075459, 1.4838232032378271`}, {
       2.638747265946051, 1.4513468110107202`}, {2.7174892347765454`, 
       1.4161980772118197`}, {2.7942025165735416`, 1.3774635225994638`}, {
       2.8248447007214774`, 1.359513187650314}}]}, 
     {Arrowheads[{{0.014721377852296354`, 1.}}], 
      ArrowBox[{{2.836148877045969, 1.3528911482301071`}, {
       2.9065808436785687`, 1.3116317723945348`}, {3.0130437057959054`, 
       1.2356215164818427`}, {3.1127621365817983`, 1.1492060624473335`}, {
       3.141592653589793, 1.119582330118891}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.4201938136518435`, -3.}, {
       1.3643120674378473`, -2.9504125942924264`}, {
       1.3002469362770683`, -2.8962125777583605`}, {
       1.2372618867968534`, -2.8452240617331044`}, {
       1.1753569189972024`, -2.797447046216659}, {
       1.114532032878115, -2.7528815312090233`}, {
       1.053136662358481, -2.70913039172674}, {
       1.0073913080148589`, -2.677908256634616}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9965704536727075, -2.6705228033808273`}, {
       0.9927167748293622, -2.6678925891618097`}, {
       0.9104113635743774, -2.6160671503474586`}, {
       0.829661984529949, -2.5666540146453234`}, {
       0.7713614749318825, -2.5309529236721042`}, {
       0.713864552951088, -2.4956932963281577`}, {
       0.6571712185875657, -2.4608751326134835`}, {
       0.6012814718413152, -2.4264984325280814`}, {
       0.5510556155552789, -2.3946267903051965`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.5399938234750911, -2.387607348416225}, {
       0.49191814471684936`, -2.3571001366669844`}, {
       0.38577997509390927`, -2.285529122166754}, {
       0.28301100207299235`, -2.2107656893153136`}, {
       0.1837552647545963, -2.1317901384005853`}, {
       0.11925651331636089`, -2.076185994809581}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.10933383154922392`, -2.0676316862457003`}, {
       0.10922223368863011`, -2.067535478128077}, {
       0.037108448685024296`, -2.000748764989937}, {-0.03258609025622129, \
-1.931429998986164}, {-0.09986138313510676, -1.8595791801167587`}, \
{-0.164589966695796, -1.78587461329179}, {-0.2266443776824529, \
-1.7109946034213253`}, {-0.24727927938998925`, -1.6845649891726004`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.2553416113533877, -1.6742385855503357`}, \
{-0.2860246160950776, -1.634939150505366}, {-0.34273068193367007`, \
-1.5577082545439112`}, {-0.39673644774424405`, -1.4801358609992976`}, \
{-0.4480157860728129, -1.4030559153338626`}, {-0.4965686969193767, \
-1.3264684175476058`}, {-0.5423951802839355, -1.2503733676405275`}, \
{-0.5482000215958373, -1.2401477522289859`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5546676785772038, -1.2287545427764504`}, \
{-0.5979443044656758, -1.1525198778016537`}, {-0.6491043509606199, \
-1.0566982396375193`}, {-0.6959268892296901, -0.9639181367581039}, \
{-0.7384634887338078, -0.8751892527733864}, {-0.776899206502949, \
-0.7905626722405786}, {-0.7896557783974585, -0.7606879868440826}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7948005368933672, -0.7486394488217025}, \
{-0.8114953781779766, -0.7095417088295963}, {-0.8424179911361448, \
-0.6323143898194749}, {-0.8698330327547068, -0.5590687424892495}, \
{-0.8939231804062053, -0.489656152005061}, {-0.9148806486033481, \
-0.42373563661139557`}, {-0.9328857304336359, -0.36120667320480726`}, \
{-0.9481187189845702, -0.3019687386818503}, {-0.9585089932677505, \
-0.25178346164517695`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9611650700171948, -0.23895454646270642`}, \
{-0.9707715678447839, -0.19255492873459806`}, {-0.9838454983767998, \
-0.09387215166517437}, {-0.9876514934758425, 
       0.030709429708986595`}, {-0.9761066682872913, 
       0.14033727514080369`}, {-0.9510983950675848, 
       0.2381227888472915}, {-0.9350502016786636, 0.2761818435120013}}]}, 
     {Arrowheads[{{0.01573566158627527, 1.}}], 
      ArrowBox[{{-0.929959988346574, 0.288253526770428}, {-0.913913615881099, 
       0.32630826302849264`}, {-0.865810712688931, 
       0.40634880961291886`}, {-0.8077192922528661, 
       0.4784778042490664}, {-0.7407425381585411, 
       0.542415046482692}, {-0.6659928232157872, 0.5967558916168055}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.045251837481652235`, 3.}, {0.10944702332244384`, 
       2.932949652698355}, {0.1830224146910488, 2.8521818053105505`}, {
       0.23811603450911817`, 2.788936537264758}, {0.29196462382792376`, 
       2.72505653046536}, {0.33880982627872946`, 2.668007767637827}, {
       0.38463801521798147`, 2.6107664350427853`}, {0.38918827584507026`, 
       2.6049457412078927`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.3972569500311251, 2.5946242924075906`}, {
       0.4294582206007085, 2.5534324239760893`}, {0.47327947238193835`, 
       2.4961056257335925`}, {0.5161108005166999, 2.4388859316111486`}, {
       0.5579612349600217, 2.3818732329046104`}, {0.598839805666932, 
       2.3251674209098327`}, {0.638755542592459, 2.2688683869226685`}, {
       0.6776991844916345, 2.213165513566485}, {0.7064152200187198, 
       2.1716067391073675`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.7138627114869401, 2.1608284888185336`}, {
       0.7156681214649424, 2.1582156411637357`}, {0.7887579085267931, 
       2.050779210596468}, {0.8581769595636805, 1.9469677179767269`}, {
       0.9240773303612752, 1.8471897860603705`}, {0.9808712852637268, 
       1.7609748033613022`}, {1.004727173018108, 1.7249322013117572`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.011958051120138, 1.714007449125481}, {1.0349720490027214`, 
       1.6792368140608234`}, {1.0865260459054384`, 1.6018471917751163`}, {
       1.1356797002990575`, 1.5286773101203615`}, {1.1825794365107578`, 
       1.45959854271274}, {1.2273716788677187`, 1.3944822631684337`}, {
       1.27020285169712, 1.333199845103623}, {1.3072837001923052`, 
       1.281147394009558}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.3149495499963555`, 1.270523658943435}, {
       1.3537597634377845`, 1.2174715549838124`}, {1.3945394694298754`, 
       1.1636149674501577`}, {1.470816847055401, 1.0687853512339196`}, {
       1.5411221749399948`, 0.9895884280836527}, {1.6065261158209336`, 
       0.9244788125972353}, {1.6603765304514964`, 0.8784138640709467}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{1.6705098978188757`, 0.8701256830402255}, {
       1.7260596082778057`, 0.8306554281352116}, {1.7514946848718143`, 
       0.8145810405700122}, {1.7764377296986338`, 0.8004690004825336}, {
       1.8135787970599584`, 0.7853751093696905}, {1.8501724815260638`, 
       0.7738287216151033}, {1.9225538905011614`, 0.7570794518040415}, {
       1.9938751119174727`, 0.7517435169565114}, {2.065115626150383, 
       0.7553939636918163}, {2.1629583932683567`, 0.7714267658572818}, {
       2.1652863676836307`, 0.771961188789861}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.178055211053483, 0.7748924764683635}, {2.263300522385907, 
       0.7944618707761368}, {2.366955028209224, 0.8187462054136385}, {
       2.4735395013545785`, 0.8394508826647595}, {2.582384056596834, 
       0.8516990054033668}, {2.6919336208244866`, 0.8510277594470788}, {
       2.69436032765826, 0.8506527587956217}}]}, 
     {Arrowheads[{{0.007828014385837025, 1.}}], 
      ArrowBox[{{2.707307635595035, 0.8486520025265364}, {2.800491688825099, 
       0.8342522076356398}, {2.905777729342116, 0.7996723313027959}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.19865367815627674`, -3.}, {
       0.1628662885966935, -2.968783089290958}, {
       0.08749555225187641, -2.8996174537018837`}, {
       0.013876415845559681`, -2.8285590715233853`}, {-0.0579031770841643, \
-2.7558212261597}, {-0.12775528299920305`, -2.6816172010150665`}, \
{-0.17306784943325604`, -2.631137548080996}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.18181922822758567`, -2.6213882313020562`}, \
{-0.19567990189955645`, -2.6059469960894845`}, {-0.26167703378522394`, \
-2.5288106113829554`}, {-0.32570238252784806`, -2.4508294974789737`}, \
{-0.38771165199906965`, -2.3726251049610356`}, {-0.44770484219888884`, \
-2.294197433829141}, {-0.5056819531273056, -2.2155464840832906`}, \
{-0.5083569857451026, -2.2117828432467768`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5159468038310829, -2.201104338207227}, \
{-0.5663047421198616, -2.1302531673746405`}, {-0.6245561413755126, \
-2.0459501816800754`}, {-0.6873682057327604, -1.952898041263528}, \
{-0.7472775608631115, -1.8620981648453658`}, {-0.8043768532249687, \
-1.7737879873889002`}, {-0.8088990367965895, -1.7666712370749011`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.8159252705305635, -1.7556137577973476`}, \
{-0.858758729276735, -1.6882049438574425`}, {-0.9105006103261635, \
-1.605740613134583}, {-0.959692097801527, -1.5266632589676896`}, \
{-1.0064441083420081`, -1.4510253436157365`}, {-1.0508675585867897`, \
-1.378879329337699}, {-1.0906377014771713`, -1.3143720114083595`}, \
{-1.0928833155580857`, -1.3107485929981926`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.0997847343652913`, -1.2996127846797314`}, \
{-1.128530349563412, -1.2532301973038873`}, {-1.1990750322340045`, \
-1.1405662801374385`}, {-1.2632853484196338`, -1.0399339769741394`}, \
{-1.3219450399413668`, -0.9503796869497759}, {-1.3841384679582451`, \
-0.8595092270968636}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.3916201710855425`, -0.848756184547154}, \
{-1.4507310555089872`, -0.768044504273047}, {-1.5059418897246482`, \
-0.6989592058345313}, {-1.5564562832673923`, -0.6424017462707959}, \
{-1.646730225816836, -0.5613561199391145}, {-1.6641221522112868`, \
-0.548654472995997}, {-1.6811206706880208`, -0.5374084185361361}, \
{-1.701563028894791, -0.5269877828511644}, {-1.721671914679953, \
-0.5183991978408476}, {-1.7613522081608033`, -0.5046651181481755}, \
{-1.7708800364217983`, -0.5028859119408985}}]}, 
     {Arrowheads[{{0.012767683634551785`, 1.}}], 
      ArrowBox[{{-1.78375840457285, -0.500481033103215}, \
{-1.8002129323409615`, -0.49740834989137683`}, {-1.8387321284107745`, \
-0.4958701445831887}, {-1.9646638032983796`, -0.5229879368475995}, \
{-2.0315231979215986`, -0.5501356163237088}, {-2.1022263831131793`, \
-0.5837114064165058}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.4348225296897994`, 3.}, {-1.431000456214914, 
       2.996436164366909}, {-1.3650096865651848`, 
       2.9376215006648816`}, {-1.3002795718871878`, 
       2.8826997650999053`}, {-1.236810112180923, 
       2.8316709576719803`}, {-1.1744569811598304`, 
       2.783893132478762}, {-1.1130758525373496`, 
       2.738724343617905}, {-1.052666726313481, 
       2.69616459108941}, {-1.0232625979158774`, 2.6764005797610526`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.012389519409934, 
       2.6690922302714926`}, {-0.9932296024882247, 
       2.6562138748932766`}, {-0.9344971579977415, 
       2.617711034244009}, {-0.8766158233918929, 
       2.580966020646207}, {-0.7982513242866665, 
       2.5335214641900325`}, {-0.7213187433802289, 
       2.487265779702965}, {-0.6633767754046773, 
       2.45213415295352}, {-0.6062640673437152, 
       2.416913036536226}, {-0.5673569647263035, 2.3925038466290123`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.5562591940081436, 
       2.3855414265364643`}, {-0.5499806191973425, 
       2.3816024304510837`}, {-0.49452643096555915`, 
       2.3462023346980914`}, {-0.386195232693892, 
       2.2735152122830833`}, {-0.28135987097684473`, 
       2.197233207385724}, {-0.1802141076056593, 
       2.116778026574009}, {-0.13396432875432757`, 2.0762609449942993`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.12410995832526227`, 
       2.067628031702442}, {-0.08295170437157778, 
       2.031571376415931}, {-0.001996144509841674, 1.9543142689765511`}, {
       0.07565437892105491, 1.8743465050884118`}, {0.14999986592111197`, 
       1.7916680847515127`}, {0.22104031649032957`, 1.706279007965854}, {
       0.23558630014839924`, 1.6875847525173555`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.2436315969686131, 1.6772450713069593`}, {
       0.28865834383231714`, 1.6193774476610334`}, {0.35273656115068425`, 
       1.532161576766649}, {0.4132749684454308, 1.4446313952827006`}, {
       0.47027356571655665`, 1.3567869032091884`}, {0.523785412714831, 
       1.2696689148353106`}, {0.5385170852710554, 1.244560999188207}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5451469427307359, 1.233261406340574}, {0.5738635691910234, 
       1.1843182444502665`}, {0.6205080351451333, 1.1007348920540556`}, {
       0.663718810577161, 1.0189188576466781`}, {0.7111211712909488, 
       0.9232601797762429}, {0.7539640418715927, 0.8308470593060409}, {
       0.782065757646132, 0.7662667716497594}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.787293111990115, 0.7542538379938866}, {0.7924023154676776, 
       0.7425124257284329}, {0.8265908852277877, 0.6590892085357797}, {
       0.8567488433908648, 0.5804190810090655}, {0.8831319673903396, 
       0.505777284308487}, {0.9059501781665319, 0.4351470997452248}, {
       0.9254133966597607, 0.3685118086304587}, {0.9522101806117415, 
       0.2576921820159508}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.9552050081087632, 0.24494095523863285`}, {
       0.9733710426994431, 0.13644382611805156`}, {0.9817130176506087, 
       0.03779104381021689}, {0.9809232307252328, -0.051471376461881393`}, {
       0.9736069795027469, -0.12142348838943462`}, {
       0.9605616514600115, -0.18615112440255158`}, {
       0.942288897142727, -0.24649222734838352`}, {
       0.9323979977377836, -0.27091678966593535`}}]}, 
     {Arrowheads[{{0.009860284917544466, 1.}}], 
      ArrowBox[{{0.9274805667196293, -0.28305988155555123`}, {
       0.9192903670965946, -0.3032847400740819}, {
       0.8600681020698674, -0.40658377378341004`}, {
       0.7847991008839895, -0.49676778336720073`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999987`, 1.}}], 
      ArrowBox[{{-3.0906366475372216`, 3.}, {-3.040033502726344, 
       2.9474009334564255`}, {-2.9668827282496206`, 
       2.8675185448984704`}, {-2.9119869622401238`, 
       2.8047130165122613`}, {-2.85831799238818, 
       2.741245925352043}, {-2.805888263964381, 
       2.6773386220828295`}, {-2.7547039996042884`, 
       2.613101782037454}, {-2.7476865832850987`, 2.6041100519234868`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.739626299761785, 
       2.5937820493101174`}, {-2.709340351279938, 
       2.554975305829673}, {-2.665018602849197, 
       2.4969405331360415`}, {-2.6217259753542805`, 
       2.439086562940756}, {-2.579449689837404, 
       2.3815024942280116`}, {-2.5381769673407826`, 
       2.324277425982004}, {-2.4978950289066324`, 
       2.2675004571869284`}, {-2.458591095577168, 
       2.211260686826981}, {-2.430603598787616, 2.170662502648004}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.4231677636834137`, 
       2.159876207419286}, {-2.420252388394605, 
       2.1556472138863567`}, {-2.346476756340534, 
       2.0470145716502444`}, {-2.2764773450224407`, 
       1.9423871254422331`}, {-2.2100832591362614`, 
       1.8420468485954258`}, {-2.147123603377932, 
       1.7462757144429255`}, {-2.1323932318872103`, 1.7239198671699476`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.125185005452185, 
       1.7129801560165687`}, {-2.0947543611301036`, 
       1.6667964710150565`}, {-2.0447913779060842`, 
       1.59164038982422}, {-1.9971017493328924`, 
       1.5206672591966082`}, {-1.9515525710375465`, 
       1.4537368674584112`}, {-1.908010938647065, 
       1.3907090029358207`}, {-1.8663439477884671`, 
       1.3314434539550273`}, {-1.8293600163144292`, 1.2804852826294526`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.8216648099210404`, 
       1.26988247135031}, {-1.7881022731749951`, 
       1.223638455923598}, {-1.7073652275691757`, 
       1.1191053491890293`}, {-1.6332319021117807`, 
       1.0313653224230626`}, {-1.5646531810013204`, 
       0.9588134653479143}, {-1.5005799484363056`, 
       0.8998448676858012}, {-1.4744733026958536`, 0.8795946526918254}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.464121460070677, 0.8715650099400253}, {-1.440181618167339,
        0.8529955257449259}, {-1.382627603945023, 
       0.8168014358334914}, {-1.3577159830199785`, 
       0.8031027324596782}, {-1.3332219923174444`, 
       0.7912202626646561}, {-1.295286032432208, 
       0.778763354056899}, {-1.257788970075954, 
       0.7697843542319038}, {-1.1833846064055449`, 
       0.7579686927684843}, {-1.109614976403887, 
       0.7570865782052792}, {-1.0355260305614584`, 
       0.7645468524373009}, {-0.9687251267477545, 0.7774634217786318}}]}, 
     {Arrowheads[{{0.01305756200699077, 1.}}], 
      ArrowBox[{{-0.9558623898619739, 0.7799505502966504}, {-0.93621100833853,
        0.783750325712989}, {-0.8341291277007982, 
       0.8077761602108883}, {-0.7287613634981869, 
       0.830868767646463}, {-0.6207631014027502, 0.848191853016042}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{3.141592653589793, -2.4710702118619934`}, {
       3.0740782575182743`, -2.402159194016442}, {
       3.001379226117421, -2.323294836096804}, {
       2.931101286399644, -2.24281306082763}, {
       2.863346739411881, -2.161391146989419}, {
       2.7981155851541333`, -2.0790290945821717`}, {
       2.7966303869803375`, -2.0770561288934437`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.788751222875325, -2.0665892964468893`}, {
       2.7354078236264017`, -1.9957269036058878`}, {
       2.6752290239392837`, -1.912345419413106}, {
       2.6175847552033815`, -1.8297454873563648`}, {
       2.5624750174186937`, -1.7479271074356646`}, {
       2.5098998105852215`, -1.666890279651006}, {
       2.490577790061754, -1.635873464369136}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.4836506571987904`, -1.6247536334910688`}, {
       2.443953390026722, -1.5610293039585743`}, {
       2.3822747728836267`, -1.4585612914874184`}, {
       2.339615650183875, -1.386138938134888}, {
       2.2990967049094957`, -1.3162029168575717`}, {
       2.26064580186196, -1.2487285134576354`}, {
       2.2241908058427393`, -1.1836910137372434`}, {
       2.2182683812823707`, -1.1729501933879969`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.2119424955569906`, -1.1614776619216032`}, {
       2.1896595816533044`, -1.1210657034985616`}, {
       2.156979994095127, -1.0608278685437553`}, {
       2.0968871880784308`, -0.9474157676944293}, {
       2.043321939409638, -0.8437770455773769}, {
       1.9957044931415635`, -0.749817998204078}, {
       1.969472695604021, -0.696957004880854}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.9636490735118335`, -0.6852215358154375}, {
       1.953473807839718, -0.6647168544269082}, {
       1.9160688420696133`, -0.5876518430982428}, {
       1.8742360877472632`, -0.49945360384789483`}, {
       1.838731815112237, -0.4224257608313905}, {
       1.8087968678379376`, -0.3552532593280724}, {
       1.78367208959777, -0.2966210446172828}, {
       1.7483608055035462`, -0.20764826973088935`}}]}, 
     {Arrowheads[{{0.014142814677733317`, 1.}}], 
      ArrowBox[{{1.7436523340290482`, -0.19542362204530858`}, {
       1.7394993351576866`, -0.1841804737463181}, {
       1.733920792775617, -0.16857388918413665`}, {
       1.72565334518148, -0.14266886629469622`}, {
       1.7187615034199906`, -0.11890162640723931`}, {
       1.7075264805636041`, -0.07518150607301811}, {
       1.7009841151185439`, -0.03815286037870501}, {
       1.6984352771137536`, -0.006134415581883327}, {1.7048090015809314`, 
       0.05221366292116874}, {1.7246678354336038`, 0.10390840953447604`}, {
       1.7573874551427544`, 0.15555185307986352`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-3.141592653589793, 1.688624767426354}, {-3.113380125007707, 
       1.6604677475444158`}, {-3.0621428504226693`, 
       1.60608655013594}, {-3.012590063547541, 
       1.5501417930146117`}, {-2.9705041509117427`, 
       1.501130061029025}, {-2.9297489453728622`, 
       1.4512664600543395`}, {-2.8582404879299315`, 
       1.3513282543210885`}, {-2.8125978502141953`, 1.2821959109599868`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.8053795902964955`, 
       1.2712628175176672`}, {-2.792035409888073, 
       1.251051135896351}, {-2.752680884031684, 
       1.1901684293437111`}, {-2.715264737570377, 
       1.1296724502623907`}, {-2.6797869705041535`, 
       1.0695631986523904`}, {-2.646247582833012, 
       1.0098406745137094`}, {-2.5848131267302303`, 
       0.8928226591090704}, {-2.5478171787770245`, 0.8154804325813276}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.5421639173010515`, 
       0.8036619536968754}, {-2.5307905503162864`, 
       0.779885254507238}, {-2.4838797133343675`, 
       0.671664834252919}, {-2.44378047552766, 
       0.5687977718908206}, {-2.4180093297046708`, 
       0.4954748434013309}, {-2.3955473603017863`, 
       0.4252764224229903}, {-2.3763945673190086`, 
       0.3582025089557986}, {-2.3648162581826235`, 0.31146911394347543`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.3616657105040018`, 
       0.2987525948528323}, {-2.3605509507563345`, 
       0.29425310299975566`}, {-2.337665018711622, 
       0.17501549380574907`}, {-2.3257633359879675`, 
       0.06685127502560294}, {-2.323869423302587, -0.031274473288731376`}, \
{-2.331006801372696, -0.12039667108530247`}, {-2.3527750038442674`, \
-0.21965903007677667`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.356083857832571, -0.23230316782076335`}, \
{-2.3922673638137497`, -0.3244145674047427}, {-2.4410279238157377`, \
-0.4073330328108343}, {-2.4999082831728674`, -0.4775370384451772}, \
{-2.5671803149553885`, -0.5346108808710567}, {-2.641094485865067, \
-0.577271743482829}, {-2.701277100808027, -0.5981253729953756}}]}, 
     {Arrowheads[{{0.003367261969407777, 1.}}], 
      ArrowBox[{{-2.7136560015567213`, -0.6024147348024442}, \
{-2.719700639063899, -0.6045092371970611}, {-2.800837290989869, \
-0.615151843868067}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.5817293120030103`, -3.}, {-2.644186754708575, \
-2.9549812351949085`}, {-2.7291548760041016`, -2.892321098604166}, \
{-2.8054308905406082`, -2.835414950112088}, {-2.8802066808320133`, \
-2.777064964006908}, {-2.94449025494636, -2.720504773846123}, \
{-2.9928990164058744`, -2.6758818884714226`}}]}, 
     {Arrowheads[{{0.007466960961219678, 1.}}], 
      ArrowBox[{{-3.0025318243776207`, -2.6670024279564237`}, \
{-3.007396003591852, -2.6625186588002934`}, {-3.0688351026651715`, \
-2.6031058311912556`}, {-3.1288371602007596`, -2.542266553578399}, \
{-3.141592653589793, -2.5294015214092607`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-3.141592653589793, 0.4358562846991656}, {-3.113765137108179,
        0.4077656436460555}, {-3.0687681777488214`, 
       0.35093196409051614`}, {-3.00684438333146, 
       0.2466871156365566}, {-2.9607655592906097`, 
       0.1240165965937488}, {-2.9434708612942684`, 
       0.015187318887067328`}, {-2.9430063162345492`, 
       0.002924096667173526}, {-2.9429166671068105`, -0.00899044252627601}, \
{-2.945106677192101, -0.032509425279631965`}, {-2.9453918742099683`, \
-0.034202656262642864`}}]}, 
     {Arrowheads[{{0.010754795828701246`, 1.}}], 
      ArrowBox[{{-2.9475678699895487`, -0.0471216674796521}, \
{-2.9487474137736003`, -0.054124686290680804`}, {-2.958665985865433, \
-0.09349306679992248}, {-2.973337715171129, -0.12503169611479412`}, \
{-2.9917139348093884`, -0.14867070007388325`}, {-3.004736972959189, \
-0.15955152525263153`}, {-3.0185563387829655`, -0.16745170260027098`}, \
{-3.0329229079107285`, -0.17249408766499885`}, {-3.0513750285438586`, \
-0.17502247146858585`}, {-3.0698871783439334`, -0.1736304594197387}, \
{-3.088064802306548, -0.16871792442933264`}, {-3.134147526843211, \
-0.14092314681298887`}, {-3.141592653589793, -0.1322611544356175}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{3.141592653589793, -1.4747783042433955`}, {
       3.1027054610333122`, -1.435270310057164}, {
       3.0566211760787363`, -1.3853777215755945`}, {
       3.0121468853500315`, -1.3340482232228557`}, {
       2.975372022801978, -1.2902175090160566`}, {
       2.939805448620379, -1.2456559150609248`}, {
       2.8750303842186606`, -1.1522862929591322`}, {
       2.8187683076005285`, -1.0637508696239109`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.811870209106278, -1.0526138883562022`}, {
       2.7473254985260236`, -0.9460547450570211}, {
       2.686718988817911, -0.8348670593722274}, {
       2.6335368783338673`, -0.7262138015863795}, {
       2.587618242730712, -0.6212367782604126}, {
       2.574177205100813, -0.5864718203678282}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.5694528298164565`, -0.5742523241985696}, {
       2.5486774062910547`, -0.5205171332149079}, {
       2.516428693297505, -0.4246360102704471}, {
       2.4964505717865464`, -0.35619347880335345`}, {
       2.479733627286919, -0.29061709631539806`}, {
       2.4662778597986232`, -0.227906862806581}, {
       2.4560832693216588`, -0.16806277827690225`}, {
       2.445484511611491, -0.067165313278817}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.4443460913828448`, -0.05412293692930362}, {
       2.4434756225448577`, 0.04442319842349761}, {2.4523885663468366`, 
       0.1354255442999396}, {2.470086683421181, 0.21710466868890474`}, {
       2.5144801547391173`, 0.3270695865254139}, {2.574736924277921, 
       0.4156827817266667}, {2.5928009736506157`, 0.43257212457212424`}}]}, 
     {Arrowheads[{{0.012636186807803191`, 1.}}], 
      ArrowBox[{{2.602370701853002, 0.44151953260967425`}, {
       2.6469226607552137`, 0.483174274180166}, {2.728135637007132, 
       0.5278793850151695}, {2.814742688332057, 0.5493090474494529}, {
       2.902895514549871, 0.5472024574101871}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.6602951792889313`, 3.}, {2.6726309561493724`, 
       2.9909430603989193`}, {2.762623937487153, 2.923054289114856}, {
       2.8393926768568982`, 2.8643404004322677`}, {2.914619874026215, 
       2.804039177104743}, {2.9786326575028066`, 2.7461241999967227`}, {
       3.041253927845201, 2.6867744867117325`}, {3.0627886726110116`, 
       2.6653932089705603`}}]}, 
     {Arrowheads[{{0.003788611452966374, 1.}}], 
      ArrowBox[{{3.072085535702643, 2.656162599829587}, {3.1023993935186107`, 
       2.626064773251274}, {3.141592653589793, 2.585297902171398}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.4835728414751728`, -3.}, {-1.5215632104952101`, \
-2.959895632824337}, {-1.5882354116265622`, -2.8923912070499878`}, \
{-1.6534250391718746`, -2.829329645842145}, {-1.7171320931311478`, \
-2.77071094920081}, {-1.77953642581232, -2.71604931073774}, \
{-1.8408178895233303`, -2.664858924064692}, {-1.8673289967285966`, \
-2.6438297243954483`}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{-1.8775929944705074`, -2.635688093182232}, \
{-1.9009764842641788`, -2.617139789181668}, {-1.9600122100348645`, \
-2.5728919060886657`}, {-2.0281005148375773`, -2.5233900230849002`}, \
{-2.0948793436602897`, -2.477582779769018}, {-2.1535144160143203`, \
-2.441556407042988}, {-2.211308173393546, -2.407478229808028}, \
{-2.314811710695054, -2.348065583663717}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.326172890611226, -2.341541828933191}, \
{-2.4351604152564645`, -2.278826428003933}, {-2.542713297740054, \
-2.216618032868473}, {-2.647226986282928, -2.153966836961341}, \
{-2.7486875441396554`, -2.0890077357516996`}, {-2.7747409375015826`, \
-2.0709131743919014`}}]}, 
     {Arrowheads[{{0.017650705524086357`, 1.}}], 
      ArrowBox[{{-2.785501320215163, -2.063439890487536}, \
{-2.8469396551603667`, -2.020769835724751}, {-2.9418280031951913`, \
-1.948282243365699}, {-3.0138100146537288`, -1.8883840284781401`}, \
{-3.083391839001056, -1.8258549735881864`}, {-3.141592653589793, \
-1.7694056353869962`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.01956815099901535, 1.}}], 
      ArrowBox[{{3.141592653589793, -0.3285037699243098}, {
       3.128037291389114, -0.31699348120414683`}, {
       3.0656813031701113`, -0.23475286675833293`}, {
       3.0197492216044806`, -0.14116814001861774`}, {
       2.996031533542944, -0.053138852761847974`}, {
       2.9943909710415033`, -0.04263831645797345}, {
       2.9930745486794494`, -0.03236493094601981}, {
       2.9924203340542643`, -0.008431805110926092}, {2.9935092156666556`, 
       0.013591837735651847`}, {2.998848472605448, 0.05368557712350854}, {
       3.009875302811556, 0.08561485387555662}, {3.0252910348883653`, 
       0.10910447336934002`}, {3.0355151040387223`, 0.1186875021206964}, {
       3.046487325537149, 0.12566219492273473`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{-0.39082184024023786`, -3.}, {-0.40976287106293874`, \
-2.976745904669371}, {-0.47396635399579856`, -2.895693746496542}, \
{-0.5363976035312737, -2.815011209062483}, {-0.5970132436161941, \
-2.735124318545094}, {-0.6558567430318982, -2.6561901401870998`}, \
{-0.709044914407484, -2.58371618282066}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.7167625470597542, -2.5731297682592627`}, \
{-0.7684011949810154, -2.501808180920197}, {-0.8221890850771058, \
-2.426674530496739}, {-0.8743787096293365, -2.3531218532035765`}, \
{-0.9250135374190463, -2.2813072142834354`}, {-0.9885440571449672, \
-2.191410537744022}, {-1.0207669143229956`, -2.1462884159654365`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.0283805759973204`, -2.1356268980450426`}, \
{-1.049526661710069, -2.1060157357139238`}, {-1.1080993183840033`, \
-2.025009541304853}, {-1.1643999944364232`, -1.948278687628525}, \
{-1.218566657136981, -1.8757099077966528`}, {-1.2707372737553295`, \
-1.8071899349209508`}, {-1.3210498115611207`, -1.742605502113132}, \
{-1.3422686616820925`, -1.7160724956894022`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.3504510055902033`, -1.7058409241274495`}, \
{-1.3696422378240074`, -1.6818433424849104`}, {-1.419649689923025, \
-1.6214158052709182`}, {-1.4680312009664789`, -1.5654096847475887`}, \
{-1.5147867709543683`, -1.513824980914922}, {-1.5599163998866934`, \
-1.4666616937729182`}, {-1.6462770352926581`, -1.3840301039762246`}, \
{-1.7127226540035532`, -1.3287358595107581`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.7227928541352677`, -1.3203557116740445`}, \
{-1.7280923078923804`, -1.3159456497728348`}, {-1.8061392265775371`, \
-1.2607413892353767`}, {-1.881194800239806, -1.2167503804364792`}, \
{-1.9177969821308454`, -1.1976509506685613`}, {-1.9538248799706122`, \
-1.1808682692441765`}, {-2.0112438050090544`, -1.1615508306073943`}, \
{-2.0679063791779746`, -1.146306384048184}, {-2.1800116822987095`, \
-1.1220054105067427`}, {-2.199390072006144, -1.119405931905675}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.2123747522025927`, -1.1176641257586233`}, \
{-2.2901648845740317`, -1.1072291109030705`}, {-2.3990599481553265`, \
-1.0965611877408572`}, {-2.5222572576166624`, -1.0844747478016543`}, \
{-2.643667162367402, -1.0652677835377624`}, {-2.730095605584577, \
-1.042302202933946}}]}, 
     {Arrowheads[{{0.015073727451715946`, 1.}}], 
      ArrowBox[{{-2.7427572209916984`, -1.038937785638171}, \
{-2.7624757044686605`, -1.0336982324908661`}, {-2.8769486197648075`, \
-0.9877092162895276}, {-2.9855072101763103`, -0.926040585016834}, \
{-3.0862681905913596`, -0.8498215092538366}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{1.6061471479338871`, 3.}, {1.6373453677352248`, 
       2.969441224312872}, {1.7033510981572266`, 2.9076122388081314`}, {
       1.7680188958268765`, 2.8499176435937756`}, {1.8313487607441752`, 
       2.7963574386698045`}, {1.8934996697818036`, 2.7463450649143955`}, {
       1.9546305998124436`, 2.699293963205724}, {2.0057578427084084`, 
       2.6617934513691983`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.0163500783519472`, 2.65408456460875}, {2.073832522852759, 
       2.6140755759285996`}, {2.143519230329809, 2.5669112404137198`}, {
       2.211949200231624, 2.5227665400894526`}, {2.273140081189141, 
       2.4860834268342664`}, {2.3334428083607053`, 2.4507874088793407`}, {
       2.3928956651283326`, 2.415775908423332}, {2.4514858903646846`, 
       2.381416451400022}, {2.4603063119778104`, 2.3761195764616527`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.4715377166420747`, 2.3693748483184653`}, {
       2.5641000964116043`, 2.3137889170396866`}, {2.673437194541298, 
       2.2451932746459904`}, {2.7793850715721122`, 2.174157887704885}, {
       2.8818316143223934`, 2.0992111197023213`}, {2.9071723742346864`, 
       2.0788560700469554`}}]}, 
     {Arrowheads[{{0.011455475490318584`, 1.}}], 
      ArrowBox[{{2.9173862953757808`, 2.0706517039299746`}, {
       2.9805689553145305`, 2.0199000222573407`}, {3.0753892270709104`, 
       1.9357716469889832`}, {3.141592653589793, 1.8713811950702495`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.8754369036223146, -3.}, {-0.9012349396329444, \
-2.965838584482765}, {-0.9517432867674833, -2.8988536383950905`}, \
{-1.013774887454523, -2.8170910385778885`}, {-1.0740190579564732`, \
-2.7387336133237605`}, {-1.1325616498198794`, -2.663714009574828}, \
{-1.189488514591286, -2.5919648742732133`}, {-1.1952209075145954`, \
-2.584871840428668}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.2034557016107301`, -2.574682435409128}, \
{-1.244885503817237, -2.5234188543610383`}, {-1.2988384690442771`, \
-2.4580085967804246`}, {-1.3514332618189513`, -2.395666748473494}, \
{-1.4027557336878034`, -2.3363259563823697`}, {-1.4626328579991943`, \
-2.2693728298510005`}, {-1.5209468568338491`, -2.206929353353198}, \
{-1.5475779279894557`, -2.1797431663644056`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.5567456811765117`, -2.170384314407077}, \
{-1.5776977301917672`, -2.148995526888962}, {-1.6328854780729491`, \
-2.095571350458294}, {-1.686723629153164, -2.0462393058453117`}, \
{-1.7394257121081802`, -2.0005818748341335`}, {-1.841421673642619, \
-1.9202908536171894`}, {-1.9395298623723853`, -1.8526577553746135`}, \
{-1.961445884319514, -1.8394874549784654`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.9726752072448575`, -1.8327392615093718`}, \
{-2.0344067779936, -1.7956420486735578`}, {-2.0862323569351733`, \
-1.766908304041153}, {-2.1372290335137176`, -1.7406709017090936`}, \
{-2.2288563218063686`, -1.7011481906533912`}, {-2.3185372187734363`, \
-1.6651630303314118`}, {-2.4072681815885932`, -1.6296554107986447`}, \
{-2.4476108054454566`, -1.6136019445854555`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-2.459783441686828, -1.6087581098036716`}, \
{-2.4940992760999294`, -1.5951028728443035`}, {-2.5790106262107293`, \
-1.5600634337089945`}, {-2.6619823558242786`, -1.5230951106333255`}, \
{-2.7428637668026727`, -1.483302781916779}, {-2.8215041610080083`, \
-1.4397913258588382`}, {-2.8792009277106034`, -1.4043162491676189`}, \
{-2.9261378465757755`, -1.3725624045006255`}}]}, 
     {Arrowheads[{{0.010236184741277809`, 1.}}], 
      ArrowBox[{{-2.936937736257601, -1.3651491964164462`}, \
{-2.9898043628095703`, -1.3259325853483719`}, {-3.0427110312059424`, \
-1.2830239982203449`}, {-3.093846240488998, -1.2379087798130755`}, \
{-3.141592653589793, -1.1922380012516838`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.2281362772465743`, -3.}, {
       2.1689509693494773`, -2.9220660977805206`}, {
       2.1104955647928536`, -2.845838923370727}, {
       2.0535957432111585`, -2.772468934018809}, {
       1.9981778266923096`, -2.7019223328804696`}, {
       1.9441681373242226`, -2.63416532311141}, {
       1.9058185900405542`, -2.5868419145476254`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.8975702614482637`, -2.576663462607789}, {
       1.8914929971948125`, -2.5691641078673317`}, {
       1.8400787283919975`, -2.506884890303937}, {
       1.789851653003693, -2.447293873576928}, {
       1.7285008403247295`, -2.3766308607759035`}, {
       1.6687729579983555`, -2.310497818260715}, {
       1.610668006024572, -2.2488947460313637`}, {
       1.5541859844033785`, -2.1918216440878497`}, {
       1.548401848564294, -2.186264812441717}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.5389542786794554`, -2.1771885118886805`}, {
       1.4991141812251432`, -2.138914045230552}, {
       1.4452398845802332`, -2.0898074822598494`}, {
       1.3925630944686498`, -2.0445019551757433`}, {
       1.3410838108903924`, -2.002997463978233}, {
       1.241045040154607, -1.9294406467066794`}, {
       1.144450849193629, -1.8671860879088698`}, {
       1.1262435117598182`, -1.8563230427894546`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.1149928176199702`, -1.849610540288185}, {
       1.095381394434417, -1.8379097753798028`}, {
       1.047081039519843, -1.8110011495826532`}, {
       0.9633501078005364, -1.7715554572441743`}, {
       0.8813091800761632, -1.7358996309534394`}, {
       0.7885156579653285, -1.696205143913219}, {
       0.6978231167692885, -1.6586928181605058`}, {
       0.6380037414635498, -1.6337022007591342`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.625915256269994, -1.6286520191601077`}, {
       0.6091987127152172, -1.6216683831372367`}, {
       0.5226096020302884, -1.5834375682853488`}, {
       0.43817948936589646`, -1.5428849653316048`}, {
       0.3560320793734363, -1.4988951660027683`}, {
       0.297768649301433, -1.4647506296414683`}, {
       0.24088873872132954`, -1.4285776308121174`}, {
       0.1854826450475677, -1.3900200469656083`}, {
       0.16804229196769271`, -1.376642812464022}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.1576470795208542, -1.3686693962173273`}, {
       0.1316406656945891, -1.3487217555528337`}, {
       0.07945385702035297, -1.3048526386486663`}, {
       0.029013709064828745`, -1.258883152398824}, {-0.01958883023452682, \
-1.2109080353604675`}, {-0.06626281294025693, -1.1610220260907587`}, \
{-0.1109482657608956, -1.1094949951157491`}, {-0.15360291520268582`, \
-1.0566968883722865`}, {-0.19416236302473433`, -1.0028725575337243`}, \
{-0.20265250177519634`, -0.9907993327201148}}]}, 
     {Arrowheads[{{0.011305780217823243`, 1.}}], 
      ArrowBox[{{-0.21018856835756525`, -0.9800828263433116}, \
{-0.23256221098614785`, -0.9482668542734162}, {-0.3028659350690847, \
-0.8377925384270745}, {-0.36447974293552576`, -0.727436356712286}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.7046831163117178`, -3.}, {
       2.6392127040042714`, -2.91675279934581}, {
       2.5754061883104344`, -2.833588217871316}, {
       2.5134336714898073`, -2.7512664214426925`}, {
       2.4533285158406044`, -2.670290799225491}, {
       2.3950385966326033`, -2.5907865887641695`}, {
       2.3886722637417552`, -2.5820122480393533`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.3809785010103774`, -2.5714083891431203`}, {
       2.338511789135582, -2.5128790276031836`}, {
       2.283695968619318, -2.4366933532869903`}, {
       2.2305390103535907`, -2.3623548033600468`}, {
       2.1789887896081757`, -2.2899886153668096`}, {
       2.1289931816528522`, -2.219720026851735}, {
       2.075715094445194, -2.1454634422053784`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.0680777590348196`, -2.1348188700539295`}, {
       2.0669927915411943`, -2.133306691506398}, {
       2.00741834052774, -2.0517241277502833`}, {
       1.950132665106651, -1.9748140824189384`}, {
       1.894998601772087, -1.9024183023479093`}, {
       1.8418789870182093`, -1.834378534372743}, {
       1.790636657339179, -1.7705365253289862`}, {
       1.7485028866633652`, -1.7196356654460476`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.7401291630846998`, -1.7095603740633638`}, {
       1.6932351991823011`, -1.654812771377886}, {
       1.6444855237395757`, -1.6002159895072412`}, {
       1.597179305620266, -1.5498286536041337`}, {
       1.506897241351895, -1.4616823197005318`}, {
       1.4214791839888983`, -1.388680570677959}, {
       1.3640756031913301`, -1.3467183613933413`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.3534991638395153`, -1.33898694890303}, {
       1.3400153111429864`, -1.3291302075472942`}, {
       1.2618048476528683`, -1.281320259145224}, {
       1.186147018357253, -1.2435397543084359`}, {
       1.149993128779247, -1.2276136126172406`}, {
       1.1143020451727161`, -1.2136060706692622`}, {
       1.0519309948969915`, -1.1961195123156747`}, {
       0.9902851433941192, -1.182280223860674}, {
       0.868204840468715, -1.159426392146146}, {
       0.8671155548832744, -1.1592757413864678`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.8541380954206943, -1.1574809282053675`}, {
       0.7482031919178022, -1.1428298817741436`}, {
       0.6299357003567081, -1.1261737272228707`}, {
       0.5154745178030854, -1.1056812939100813`}, {
       0.40359708637319136`, -1.0759773120927407`}, {
       0.342424611070153, -1.0522115366150802`}}]}, 
     {Arrowheads[{{0.005901287481563651, 1.}}], 
      ArrowBox[{{0.3302128464137155, -1.0474672123814568`}, {
       0.29523603518515185`, -1.03387856751357}, {
       0.1918056373056328, -0.9789700127211618}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{3.141592653589793, -2.9712605990664023`}, {
       3.115805240144504, -2.9456936375210807`}, {
       3.0441818071315794`, -2.8711111139841723`}, {
       2.97439875527673, -2.7951158603068365`}, {
       2.9065269370870936`, -2.7181121312812904`}, {
       2.840566352562671, -2.6400999269075367`}, {
       2.7924961802322548`, -2.5807935070774404`}}]}, 
     {Arrowheads[{{0.020000000000000007`, 1.}}], 
      ArrowBox[{{2.784246822786751, -2.570615888977203}, {
       2.7765170017034606`, -2.561079247185572}, {
       2.728052382249552, -2.4989546761490025`}, {
       2.6807833473995, -2.4367792175341503`}, {
       2.6347065575828488`, -2.374763607557202}, {
       2.589820343014603, -2.313013214326571}, {
       2.5135714471490815`, -2.20576277310158}, {
       2.4739415980795125`, -2.1484557369728967`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{2.466490012585474, -2.1376803166988196`}, {
       2.440934164838544, -2.100725094195663}, {
       2.371791241281698, -1.9983155008538387`}, {
       2.3060254216772527`, -1.8989493163211262`}, {
       2.243548689082632, -1.8033039502622772`}, {
       2.1842496362682873`, -1.7118471432062576`}, {
       2.177121291415099, -1.7008054071213643`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.1700156269325954`, -1.6897988027076474`}, {
       2.1279759230024675`, -1.6246797146944065`}, {
       2.074575209053421, -1.541902484268064}, {
       2.029999970729513, -1.4732050221910487`}, {
       1.9874228104871507`, -1.408286360305934}, {
       1.9467341148810409`, -1.3470133460962042`}, {
       1.9078242704658894`, -1.2892528270453454`}, {
       1.882070577765654, -1.2519877198983032`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.874622211312279, -1.2412100742539984`}, {
       1.8349026814272833`, -1.1837366643541833`}, {
       1.767781135808979, -1.090672652100331}, {
       1.6926073759761047`, -0.9929382846358371}, {
       1.623868124192071, -0.9116323480395154}, {
       1.5604970804928442`, -0.8450771313327161}, {
       1.5473296914022188`, -0.8331551515614134}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.5376180087485865`, -0.8243620276288681}, {
       1.5014279449143912`, -0.7915949235367895}, {
       1.3928599992124922`, -0.7180687220052326}, {
       1.370769850625914, -0.7067004773709286}, {
       1.3490292786583935`, -0.6969448164621772}, {
       1.3140924527493623`, -0.6869594963747635}, {
       1.2794949791800485`, -0.680317649509166}, {
       1.2106869235319555`, -0.6729984539891278}, {
       1.1420957764311772`, -0.6763859267785184}, {
       1.0727356864614366`, -0.6881464486913842}, {
       1.0576363210912703`, -0.6922150947947572}}]}, 
     {Arrowheads[{{0.010629378745864547`, 1.}}], 
      ArrowBox[{{1.0449865256438988`, -0.6956236844734403}, {
       0.9786537687707006, -0.7134975822275387}, {
       0.8807788627866824, -0.7446698226822182}, {
       0.7784346482505368, -0.7762063412332246}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.2647719084145292`, -0.776241133025311}, \
{-1.3284924773019937`, -0.666635196348399}, {-1.383161245650113, \
-0.5753676092203476}, {-1.43041707321634, -0.49989848178798}, \
{-1.4758908736893153`, -0.43165895428893153`}, {-1.5154341767604242`, \
-0.3774249090075085}, {-1.5503661165830058`, -0.3379611781500481}}]}, 
     {Arrowheads[{{0.01773998330470079, 1.}}], 
      ArrowBox[{{-1.5590495150790096`, -0.32815126484678386`}, \
{-1.5814054349747055`, -0.3028950663557866}, {-1.6363293834213346`, \
-0.2627688520699277}, {-1.644607842763525, -0.25860942020555283`}, \
{-1.652755316461736, -0.2550975247920401}, {-1.6552052346594794`, \
-0.25424336821531257`}, {-1.6635499766546324`, -0.2517125462081375}, \
{-1.670447188992514, -0.2500719845761183}, {-1.6773049366775687`, \
-0.2488415290515102}, {-1.7375058701420316`, -0.2533839125861563}, \
{-1.8015716316485082`, -0.28224759674918165`}, {-1.874959555066474, \
-0.3310953259636161}, {-1.9553206717647198`, -0.39189028574788687`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.1240649004682703`, 3.}, {-2.1009322744980565`, 
       2.9702266547132994`}, {-2.0484329122582148`, 
       2.903179198165448}, {-1.9971006711644077`, 
       2.838248348600945}, {-1.9468802299238472`, 
       2.7754543619183405`}, {-1.897716267243745, 
       2.7148174940161804`}, {-1.831748840792161, 
       2.635295851956809}, {-1.7949072409849014`, 2.5923052280038403`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-1.7863822343013467`, 
       2.5823573604181056`}, {-1.7675700093906677`, 
       2.5604052928888796`}, {-1.7051797730392648`, 
       2.490145816812393}, {-1.6445781317379526`, 
       2.424517423727348}, {-1.5855480866023086`, 
       2.363268550738722}, {-1.5278726387479091`, 
       2.306147634951489}, {-1.4715517881747555`, 
       2.2531546763656514`}, {-1.4205312490351014`, 2.2077974150210564`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.4105970331509066`, 
       2.1992583927719265`}, {-1.3627931415327788`, 
       2.1590956141340163`}, {-1.3099938707851453`, 
       2.1171154771599374`}, {-1.2073746970971853`, 
       2.042796974831116}, {-1.1549487794788071`, 
       2.007428533130613}, {-1.1034302582828832`, 
       1.974880554301301}, {-1.0186566703138062`, 
       1.9293327447332613`}, {-0.9764959398937789, 1.9084923028269225`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.9647514509875093, 
       1.9026868925237252`}, {-0.9356891502276596, 
       1.8883211264514543`}, {-0.8385276490586491, 
       1.8414312326051931`}, {-0.7437332093658738, 
       1.797987282395958}, {-0.6512173891486202, 
       1.7561121896595426`}, {-0.5608917464061746, 
       1.7139288682317417`}, {-0.4908544272125171, 1.6791010962790363`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-0.4791237890942025, 
       1.6732677492299481`}, {-0.4728378543340722, 
       1.6701419142485996`}, {-0.38713728612784803`, 
       1.6234559238461603`}, {-0.3259518360604769, 
       1.5874314057320056`}, {-0.2661870477023201, 
       1.5495298362637167`}, {-0.20791748963241335`, 
       1.5093045976348205`}, {-0.15121773042979217`, 
       1.4663090720388445`}, {-0.0961791404184476, 
       1.4206902638846726`}, {-0.04837034119401346, 1.3778354754250084`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.038767387936503625`, 1.3689273151032626`}, {
       0.00852264799237367, 1.3231036524471207`}, {0.05800790624242664, 
       1.2712602516342633`}, {0.1054910345205505, 1.217673433473969}, {
       0.15092536681067767`, 1.162730754689731}, {0.19424500797917463`, 
       1.1066718831467557`}, {0.23538406289240835`, 1.0497364867102492`}, {
       0.2743283407678468, 0.9922047648420321}, {0.2920690996526098, 
       0.9643016541888111}}]}, 
     {Arrowheads[{{0.009640341849507465, 1.}}], 
      ArrowBox[{{0.29909825064558226`, 0.9532460291600777}, {
       0.3110931961664445, 0.9343800779162763}, {0.34565705196979774`, 
       0.8765368351667147}, {0.37799833105950303`, 0.8189494458270803}, {
       0.42260011655339225`, 0.7330270334746031}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.5687679725108117`, 3.}, {-2.548298346392424, 
       2.9733485396720427`}, {-2.49339966739015, 
       2.9009197836567844`}, {-2.4398784732028345`, 
       2.8294954748427688`}, {-2.387701810060431, 
       2.7591766123764856`}, {-2.3368367241928936`, 
       2.6900641954044255`}, {-2.287250261830176, 
       2.622259223073076}, {-2.2561009609830287`, 2.579475368477521}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.2483898655737358`, 
       2.568884107171768}, {-2.238909469202231, 
       2.555862694528927}, {-2.1917813925390135`, 
       2.4909756089184683`}, {-2.1458330780704764`, 
       2.4276989653881893`}, {-2.0827009834500285`, 
       2.341493986141554}, {-2.0218319361961314`, 
       2.259782766708632}, {-1.9631029884751943`, 
       2.182431365245356}, {-1.9363369349327253`, 2.1479185854743594`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.9283081482628253`, 
       2.1375660788664312`}, {-1.9063911924536274`, 
       2.109305839907657}, {-1.8515736002978427`, 
       2.0402722488514713`}, {-1.7985272641742513`, 
       1.9751966502327312`}, {-1.747129236249262, 
       1.913945102207369}, {-1.697256568689287, 
       1.8563836629313184`}, {-1.6452277161536282`, 
       1.7986655217317522`}, {-1.5946572889935857`, 
       1.7452175524920963`}, {-1.5884671025520616`, 1.7390190730393278`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.579209510492582, 1.7297490785561458`}, {-1.54554528720916,
        1.696039755212352}, {-1.4978917108003504`, 
       1.6511321298925183`}, {-1.4060812825699758`, 
       1.5724310501854677`}, {-1.3183474527628556`, 
       1.5074179684238267`}, {-1.2340158576070144`, 
       1.4542867961685957`}, {-1.1622661206053944`, 1.4164305567429307`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.1506413020240445`, 
       1.4103924288881773`}, {-1.1124275633453198`, 
       1.392286841081315}, {-1.0729795137318208`, 
       1.375327355409874}, {-1.0030850482465035`, 
       1.352275454383587}, {-0.9342019985135591, 
       1.3327892382533206`}, {-0.8657748190412442, 
       1.314324108203829}, {-0.7982593800901887, 
       1.2979011503158882`}, {-0.7315966082204555, 
       1.2825306670518555`}, {-0.6657274299921077, 
       1.2672229608740895`}, {-0.6490477385548196, 1.2628832154470835`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6363688706896962, 
       1.2595844098879905`}, {-0.5365182184984386, 
       1.2336051276656674`}, {-0.4227735649052715, 
       1.1970527328391052`}, {-0.3129116081818719, 
       1.1506787096561641`}, {-0.20782736686691572`, 
       1.0924071528518757`}, {-0.1570856259730234, 1.056809750384331}}]}, 
     {Arrowheads[{{0.0017565150750819543`, 1.}}], 
      ArrowBox[{{-0.14636065012488955`, 
       1.0492857420433663`}, {-0.10868348661061568`, 1.0228536738914724`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.0211005974010736`, 3.}, {1.0574661987794873`, 
       2.9533660471910217`}, {1.1127842124055416`, 2.8831838341940585`}, {
       1.166788907174632, 2.8155113590515173`}, {1.2195451340283814`, 
       2.7503354050372866`}, {1.271117743908414, 2.687642755425258}, {
       1.3215715877563543`, 2.6274201934893195`}, {1.3511732994152177`, 
       2.593044401099717}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{1.3597220507682202`, 2.5831169311923086`}, {
       1.3860642753655084`, 2.5525263067624695`}, {1.4488670418694156`, 
       2.4822795990969526`}, {1.5099798872680772`, 2.4166800704927685`}, {
       1.569402811561492, 2.3557277209499174`}, {1.6273509047620571`, 
       2.2990768052618953`}, {1.6840392568821687`, 2.2463815782221968`}, {
       1.7262629872991884`, 2.2092533678794384`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.736101386437062, 2.200602257496265}, {1.7394678679218267`, 
       2.1976420398308227`}, {1.7936367378810312`, 2.152858190087772}, {
       1.8988809297388967`, 2.073134039154028}, {2.000457507636584, 
       2.0051856080283508`}, {2.056984815712995, 1.9700139660479794`}, {
       2.112521066750357, 1.9377730048122568`}, {2.1700809092144278`, 
       1.9092475520761165`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.181819471079397, 1.9034301665980646`}, {
       2.2050837575914612`, 1.8919008733107496`}, {2.295587607051721, 
       1.849951902889922}, {2.385096603265592, 1.8087567069325912`}, {
       2.4726158929866857`, 1.7690690599022536`}, {2.558156960467999, 
       1.729505722459514}, {2.6417312899625287`, 1.6886834552649774`}, {
       2.6562660695859694`, 1.6810184577401353`}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{2.6678543998481428`, 1.6749072868054646`}, {
       2.7232343729296606`, 1.6457023475086152`}, {2.8025617008287815`, 
       1.5996624883803996`}, {2.86318980932514, 1.561450713000713}, {
       2.922312323627305, 1.5211868136488318`}, {2.9798397310732914`, 
       1.478524408124616}, {3.0356825190011123`, 1.4331171142279264`}, {
       3.0897531257112987`, 1.3851562236482116`}, {3.097439600937657, 
       1.3777930400177691`}}]}, 
     {Arrowheads[{{0.001833519301219172, 1.}}], 
      ArrowBox[{{3.106900215347203, 1.368730337139938}, {3.141592653589793, 
       1.3354970558445018`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.5897375744433963, 3.}, {0.6394285242305605, 
       2.934716906833404}, {0.6930296707562544, 2.8634610035865258`}, {
       0.7453026045114366, 2.793260071823601}, {0.7962792374893326, 
       2.724217837699901}, {0.8459914816831686, 2.6564380273706947`}, {
       0.8944712490861711, 2.590024366991252}, {0.9022413241622668, 
       2.5793512157592065`}}]}, 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{0.9099520036520371, 2.5687596516507285`}, {
       0.9417504516915651, 2.525080582716845}, {0.9878610014925768, 
       2.461710400702742}, {1.0519787215848402`, 2.3743197591419705`}, {
       1.1137972670019485`, 2.2914731885741633`}, {1.1734415906328435`, 
       2.2130362595730935`}, {1.223335878349509, 2.1487903611063586`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.231376498585592, 2.13844708583985}, {1.2867073840917604`, 
       2.068853608566274}, {1.3405787596976655`, 2.0028390277080756`}, {
       1.3927757250731234`, 1.9406963707117184`}, {1.4434232331070755`, 
       1.8822912081509788`}, {1.4962509480511246`, 1.8237379017631494`}, {
       1.5475974103290977`, 1.769524320221619}, {1.5744159198216188`, 
       1.7427011601543128`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{1.583678911989916, 1.7334365616984688`}, {
       1.5974626199409951`, 1.7196504635263872`}, {1.645846576886817, 
       1.6741163316774539`}, {1.7390641168646872`, 1.594330449804315}, {
       1.8281434143471635`, 1.5284298818880329`}, {1.913767885102822, 
       1.4745556880183464`}, {1.9966209449002397`, 1.4308489282849943`}, {
       2.0054401304132563`, 1.4266678206352899`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{2.017278116806445, 1.421055522833797}, {2.0392286199638243`, 
       1.410648959038226}, {2.081235094432043, 1.3926380386022954`}, {
       2.156791467590214, 1.3679534052203204`}, {2.2311874538773484`, 
       1.347052543640269}, {2.305052160563372, 1.3271004698542233`}, {
       2.3778543080471737`, 1.3090459716561904`}, {2.449638992412492, 
       1.291698964166506}, {2.519371670570838, 1.2741412013197717`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{2.532008203899815, 1.2706847234247998`}, {2.590215410224783, 
       1.2546450382354122`}, {2.6588554440435326`, 1.2331138629184377`}, {
       2.7737459585408892`, 1.1901200410636237`}, {2.884039264810808, 
       1.1361064416275202`}, {2.988724264602318, 1.0695247952068372`}, {
       3.006085139755606, 1.0557215680791845`}}]}, 
     {Arrowheads[{{0.0034263224011014037`, 1.}}], 
      ArrowBox[{{3.0163398719320402`, 1.0475682695781139`}, {
       3.0866119090788655`, 0.9916966109839439}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{1.0453878191823258`, -3.}, {
       1.00906657989058, -2.974091669313076}, {
       0.9469773933966898, -2.9308259801397676`}, {
       0.8857912233389879, -2.889436629132424}, {
       0.8068975525323754, -2.838312529604725}, {
       0.7293913681379666, -2.788427767404365}, {
       0.6675876491016118, -2.7483452968227193`}, {
       0.6091009043309069, -2.7098256023883924`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.5982002796938563, -2.7025585079421153`}, {
       0.5466732038262364, -2.6680885711560167`}, {
       0.4875624775872156, -2.627914316070958}, {
       0.4293695190882078, -2.5872717081486067`}, {
       0.3721144318034476, -2.5457229893861397`}, {
       0.3157972157329352, -2.503268159783558}, {
       0.26041787087667045`, -2.45990721934086}, {
       0.2060228451597116, -2.415494103418811}, {
       0.17731375022781087`, -2.390955942792089}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{0.16735481480177583`, -2.382443868213114}, {
       0.1526585865071168, -2.369882747378176}, {
       0.10032509491888605`, -2.323073151218953}, {
       0.04902237039501926, -2.2750653149411435`}, {-0.03871281002740529, \
-2.1880821267640638`}, {-0.12287489687738443`, -2.098489384649071}, \
{-0.20037397439229124`, -2.009822277662781}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.20876372386044176`, -1.999762630137737}, \
{-0.28047978986000677`, -1.911475238605347}, {-0.3538333221987736, \
-1.8154638299989498`}, {-0.423435213377342, -1.7196628580993076`}, \
{-0.48928546339571233`, -1.6240723229064213`}, {-0.5192814102324049, \
-1.5780001738506702`}}]}, 
     {Arrowheads[{{0.020000000000000004`, 1.}}], 
      ArrowBox[{{-0.5264295094702478, -1.5670210807303842`}, \
{-0.5513840722538844, -1.5286922244202903`}, {-0.6098296658405742, \
-1.4346623082556516`}, {-0.6647208700444975, -1.3431223200272424`}, \
{-0.7160576848656545, -1.2540722597350624`}, {-0.7638401103040449, \
-1.167512127379112}, {-0.7913891423885248, -1.115121548476039}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7974865535207699, -1.103525972339325}, \
{-0.8142645558104595, -1.0716188893573018`}, {-0.8604568440985609, \
-0.9795439117759606}, {-0.9026043971900851, -0.8920427745444455}, \
{-0.9408946371067667, -0.8098710575721144}, {-0.9755452365396459, \
-0.7328301236228044}, {-1.0067911542765076`, -0.6601760685200557}, \
{-1.0195668519497838`, -0.6290596957759013}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-1.024542749711826, -0.6169404445647223}, \
{-1.0348457414842045`, -0.5918465717627789}, {-1.059922349329591, \
-0.5277793128498852}, {-1.1018469433052065`, -0.41128788210850076`}, \
{-1.133975568946904, -0.3084145233984057}, {-1.1574959289927698`, \
-0.21736355350237666`}, {-1.1732987520276046`, -0.13638368666126469`}, \
{-1.1755716111594383`, -0.11652756919184852`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-1.1770615053558724`, -0.10351157811389394`}, \
{-1.1832966399456448`, -0.04904028989452545}, {-1.1842725991212837`, 
       0.028438993615045236`}, {-1.1772455586964234`, 
       0.09838562030034606}, {-1.1628721654438632`, 
       0.16263801732984834`}, {-1.1141615222285068`, 
       0.2799804574022967}, {-1.0422682737567874`, 0.3865311758624386}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.01999999999999999, 1.}}], 
      ArrowBox[{{1.7107212811303276`, -3.}, {
       1.6594017367895604`, -2.9445970549179328`}, {
       1.5929415192176133`, -2.875665900991506}, {
       1.5280133829674891`, -2.811133808297396}, {
       1.4644154737488628`, -2.7507107568128104`}, {
       1.4021477915617346`, -2.694396746537749}, {
       1.341210336406104, -2.6421917774722132`}, {
       1.333994242761545, -2.6363199999028772`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{1.3238323846158822`, -2.628051236543983}, {
       1.2814402344377784`, -2.59355649620488}, {
       1.2226746118125642`, -2.5479515493244285`}, {
       1.1649134685304614`, -2.505376936830859}, {
       1.10815680459147, -2.465832658724171}, {
       1.0502552194878525`, -2.4266900342882662`}, {
       0.993272489318154, -2.389972522067499}, {
       0.9111611229304986, -2.341816331752308}, {
       0.8927133958952695, -2.3313691725633525`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{0.8813135117933761, -2.3249132875797613`}, {
       0.8306503549215857, -2.2962221613589615`}, {
       0.7220774589671906, -2.234737567150935}, {
       0.6164207013771297, -2.174907377048675}, {
       0.5136850801911929, -2.114884012131788}, {
       0.42822334342895413`, -2.061741695266467}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{0.4170978879616429, -2.0548235994950255`}, {
       0.4138755934491698, -2.0528198934798807`}, {
       0.3171365949441809, -1.9877034111632783`}, {
       0.22361243846934653`, -1.9185229552523069`}, {
       0.15464941326549117`, -1.863006667316999}, {
       0.08785218004434552, -1.8049938851093565`}, {
       0.023220738805909486`, -1.74448460862938}, {
       0.007899504335941776, -1.729030896098429}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.0013243273440361903`, -1.7197273087474447`}, \
{-0.039244910449817025`, -1.6814788378770682`}, {-0.09940505048213795, \
-1.616502215633465}, {-0.15711996405035789`, -1.550080384679613}, \
{-0.21238965115447658`, -1.4822133450155115`}, {-0.2652141117944941, \
-1.4129010966411608`}, {-0.3155396909580699, -1.3428695596094196`}, \
{-0.3339820479914805, -1.315837069345691}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.34136535232440585`, -1.3050147486340613`}, \
{-0.3633127336328634, -1.272844653973146}, {-0.4085332398188748, \
-1.20282637973234}, {-0.4512012095161038, -1.1328147368870016`}, \
{-0.5016348907428196, -1.044437885247549}, {-0.548094311091602, \
-0.9572192550100753}, {-0.5905831308621142, -0.8720329261690711}, \
{-0.6007531631513792, -0.8503104730239227}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.6063081260215462, -0.8384454742473098}, \
{-0.6291050103540194, -0.7897529787190275}, {-0.6638008427174962, \
-0.7105028653382653}, {-0.6948899398744455, -0.6339771088101521}, \
{-0.7224935902821152, -0.5604063942867475}, {-0.7467330823977528, \
-0.49002140692011065`}, {-0.7677588524965698, -0.42276380085339715`}, \
{-0.7857379927497565, -0.35841006965324557`}, {-0.7883245203888405, \
-0.3478663891740243}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-0.7914458461878201, -0.3351426659094061}, \
{-0.8008167754585298, -0.2969431576069404}, {-0.813141472924106, \
-0.23834600900176622`}, {-0.8299924686191338, -0.12920160058240196`}, \
{-0.8372186928217732, -0.02985804133033525}, {-0.8331235235966997, 
       0.09091514047333363}, {-0.8171967985511763, 0.1834970295083858}}]}, 
     {Arrowheads[{{0.007393981885007767, 1.}}], 
      ArrowBox[{{-0.8149756815662736, 
       0.19640835971860574`}, {-0.8147616487724696, 
       0.19765253014970127`}, {-0.7838664039638651, 
       0.29204601239574896`}, {-0.74185101140441, 0.37518616925032966`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-3.141592653589793, 0.7594248183487416}, {-3.087367663502493,
        0.7014631867978675}, {-3.0666153052098375`, 
       0.677509731251647}, {-3.046571575705253, 
       0.653047317451749}, {-2.9980574337959958`, 
       0.5807932306297958}, {-2.955631628755264, 
       0.5079273101657653}, {-2.8968883675468877`, 
       0.39488229650736695`}, {-2.866159099156711, 0.31820557505391606`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.8612855073659103`, 
       0.30604482213665796`}, {-2.852625339718017, 
       0.28443567563677014`}, {-2.8223693852820673`, 
       0.1797999418098653}, {-2.8064407428238036`, 
       0.09177885518329326}, {-2.8004040892097692`, 
       0.011601793241348387`}, {-2.8032919882540104`, -0.05964981541493644}, \
{-2.8140606205791228`, -0.12180689559733904`}, {-2.848331364596588, \
-0.20241345695776108`}}]}, 
     {Arrowheads[{{0.0061029583035894135`, 1.}}], 
      ArrowBox[{{-2.8534573335359585`, -0.21447000086099338`}, \
{-2.8548014187360984`, -0.21763135872656775`}, {-2.913561171331194, \
-0.2752867620255733}, {-2.948093575929261, -0.29066219869593474`}, \
{-2.9839275930575355`, -0.29677693152334667`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-3.141592653589793, 1.9554853685603093`}, {-3.13669365483359,
        1.950828927651117}, {-3.0835826526052617`, 
       1.897453143343769}, {-3.0350811312948007`, 
       1.8421040670142268`}, {-2.988084885297151, 
       1.7857597183095135`}, {-2.942628846891847, 
       1.7289050450656944`}, {-2.8987013719857115`, 
       1.671378398004081}, {-2.846826581138788, 
       1.6035070308875066`}, {-2.808836946772671, 1.5514803363642777`}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.8011111091315954`, 
       1.5408998240325564`}, {-2.7971048939173033`, 
       1.5354133238693908`}, {-2.7495363103212584`, 
       1.4670972769497337`}, {-2.7041208303506523`, 
       1.3985588901285353`}, {-2.6608427382080637`, 
       1.3303241855911645`}, {-2.619686318096071, 
       1.2629191855229902`}, {-2.5806515700146746`, 
       1.1963438899240129`}, {-2.543738493963874, 
       1.130598298794232}, {-2.5250109108041388`, 1.0959022253717554`}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.5187881264652305`, 
       1.084373445578152}, {-2.5088753774264285`, 
       1.066008370622387}, {-2.4759905078850983`, 
       1.002900063897217}, {-2.4450838853398826`, 
       0.9412733786187218}, {-2.4161555097907814`, 
       0.8811283147869018}, {-2.3813015867861234`, 
       0.8048557494611546}, {-2.3495654373924233`, 
       0.7312707299876436}, {-2.320810346881619, 
       0.6606695622843638}, {-2.3006606717854288`, 0.6083169028775424}}]}, 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{-2.2959548366005955`, 
       0.5960902547812265}, {-2.294899600525648, 
       0.5933485522693103}, {-2.2511298459375393`, 
       0.4679143934047742}, {-2.217293584946763, 
       0.35370302959581973`}, {-2.1924741109491577`, 
       0.24993611883894956`}, {-2.1758333817035256`, 
       0.15541328313984065`}, {-2.1687860172061786`, 
       0.08932627204088563}}]}, 
     {Arrowheads[{{0.019999999999999993`, 1.}}], 
      ArrowBox[{{-2.167396835042947, 
       0.07629914720939193}, {-2.1666308585129883`, 
       0.06911616420121018}, {-2.164262838406468, -0.010002594572597457`}, \
{-2.1693099591548823`, -0.09271791942983237}, {-2.1820326038678184`, \
-0.16821034388412193`}, {-2.2016334648021316`, -0.2377802642205677}, \
{-2.2273152342146765`, -0.3027280767242714}, {-2.278478793151393, \
-0.395167843479564}, {-2.2972261395502502`, -0.4191772088773742}}]}, 
     {Arrowheads[{{0.002306209390822491, 1.}}], 
      ArrowBox[{{-2.3052890198515463`, -0.42950318436179874`}, \
{-2.3424784003873986`, -0.47713090762496413`}}]}}, 
    {RGBColor[0.2947336, 0.4054232, 0.5678384000000001], 
     {Arrowheads[{{0.02, 1.}}], 
      ArrowBox[{{3.141592653589793, -0.6119915437512397}, {
       3.0978040686128283`, -0.5684692193329333}, {
       3.0807261360161027`, -0.5487645630003916}, {
       3.064240148813006, -0.528631395942723}, {
       3.0198979895691087`, -0.46114718097902896`}, {
       2.9820860679149215`, -0.3932070100300926}, {
       2.9401607940881687`, -0.30918788143905235`}, {
       2.908159202146592, -0.22694173754137045`}, {
       2.8890607619375914`, -0.1600649645744638}}]}}}},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "TransparentPolygonMesh" -> True},
  PlotRange->{{-3.275246254653621, 3.275246254653621}, {-3.133653601063828, 
   3.133653601063828}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.711961466691098*^9, 3.7119615494182377`*^9}, {
   3.711961620153002*^9, 3.711961622704782*^9}, 3.711990757279461*^9, {
   3.7119911418654346`*^9, 3.71199116515057*^9}, {3.711991195447315*^9, 
   3.711991220846673*^9}, {3.71199747712735*^9, 3.711997492595489*^9}, 
   3.712030531216538*^9, 3.714930991892376*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
},
WindowSize->{1313, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 141, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[723, 27, 119, 2, 67, "Title"],
Cell[CellGroupData[{
Cell[867, 33, 108, 1, 66, "Chapter"],
Cell[978, 36, 1737, 48, 101, "Input"],
Cell[2718, 86, 3920, 113, 237, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6687, 205, 88, 1, 67, "Title"],
Cell[CellGroupData[{
Cell[6800, 210, 192, 2, 66, "Chapter"],
Cell[6995, 214, 2574, 74, 397, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9606, 293, 102, 1, 66, "Chapter"],
Cell[9711, 296, 990, 19, 170, "Input"],
Cell[CellGroupData[{
Cell[10726, 319, 292, 4, 114, "Subchapter"],
Cell[CellGroupData[{
Cell[11043, 327, 190, 2, 46, "Subsubsection"],
Cell[CellGroupData[{
Cell[11258, 333, 207, 5, 119, "Input"],
Cell[11468, 340, 317, 4, 70, "Output"],
Cell[11788, 346, 304, 4, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12165, 358, 96, 1, 66, "Chapter"],
Cell[12264, 361, 1483, 42, 201, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13784, 408, 112, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[13921, 413, 3134, 83, 283, "Input"],
Cell[17058, 498, 1052, 19, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18159, 523, 156, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[18340, 530, 359, 9, 32, "Input"],
Cell[18702, 541, 592, 10, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19343, 557, 96, 1, 66, "Chapter"],
Cell[19442, 560, 3269, 88, 262, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22748, 653, 99, 1, 66, "Chapter"],
Cell[22850, 656, 8707, 213, 576, "Input"],
Cell[CellGroupData[{
Cell[31582, 873, 123, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[31730, 878, 6892, 189, 456, "Input"],
Cell[38625, 1069, 1326, 23, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40012, 1099, 130, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[40167, 1104, 606, 20, 34, "Input"],
Cell[40776, 1126, 509, 8, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41334, 1140, 124, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[41483, 1145, 6113, 181, 316, "Input"],
Cell[47599, 1328, 424, 8, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48084, 1343, 146, 2, 67, "Title"],
Cell[48233, 1347, 101, 1, 66, "Chapter"]
}, Closed]],
Cell[CellGroupData[{
Cell[48371, 1353, 151, 2, 67, "Title"],
Cell[48525, 1357, 111, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[48661, 1362, 191, 4, 55, "Chapter"],
Cell[48855, 1368, 2580, 71, 124, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51472, 1444, 352, 11, 66, "Chapter"],
Cell[51827, 1457, 1025, 37, 181, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52889, 1499, 166, 3, 66, "Chapter"],
Cell[53058, 1504, 2473, 78, 157, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55568, 1587, 118, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[55711, 1592, 135, 1, 45, "Subsection"],
Cell[55849, 1595, 4474, 125, 292, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60360, 1725, 130, 1, 45, "Subsection"],
Cell[60493, 1728, 2723, 77, 193, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63253, 1810, 152, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[63430, 1816, 5294, 153, 335, "Input"],
Cell[68727, 1971, 635, 9, 70, "Output"],
Cell[69365, 1982, 881, 16, 70, "Output"],
Cell[70249, 2000, 652, 10, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70950, 2016, 282, 5, 45, "Subsection"],
Cell[CellGroupData[{
Cell[71257, 2025, 2443, 78, 103, "Input"],
Cell[73703, 2105, 727, 10, 70, "Output"],
Cell[74433, 2117, 727, 10, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[75233, 2135, 121, 1, 67, "Title"],
Cell[CellGroupData[{
Cell[75379, 2140, 134, 1, 66, "Chapter"],
Cell[75516, 2143, 2350, 65, 208, "Input"],
Cell[77869, 2210, 1883, 49, 99, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79789, 2264, 105, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[79919, 2269, 2328, 58, 126, "Input"],
Cell[82250, 2329, 642, 13, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82941, 2348, 231, 5, 66, "Chapter"],
Cell[83175, 2355, 15148, 389, 701, "Input"],
Cell[CellGroupData[{
Cell[98348, 2748, 7403, 203, 149, "Input"],
Cell[105754, 2953, 922, 17, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106725, 2976, 108, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[106858, 2981, 610, 18, 34, "Input"],
Cell[107471, 3001, 398, 9, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[107930, 3017, 152, 2, 67, "Title"],
Cell[108085, 3021, 2605, 58, 148, "Input"],
Cell[CellGroupData[{
Cell[110715, 3083, 218, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[110958, 3090, 4836, 123, 423, "Input"],
Cell[115797, 3215, 1355, 22, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117201, 3243, 103, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[117329, 3248, 4344, 132, 432, "Input"],
Cell[121676, 3382, 402, 8, 50, "Output"],
Cell[122081, 3392, 645, 17, 41, "Output"],
Cell[122729, 3411, 1759, 53, 78, "Output"]
}, Open  ]],
Cell[124503, 3467, 907, 30, 50, "Item"],
Cell[CellGroupData[{
Cell[125435, 3501, 5481, 167, 192, "Input"],
Cell[130919, 3670, 505, 15, 41, "Output"],
Cell[131427, 3687, 641, 19, 32, "Output"],
Cell[132071, 3708, 666, 20, 32, "Output"]
}, Open  ]],
Cell[132752, 3731, 1982, 49, 319, "Input"],
Cell[134737, 3782, 2041, 49, 332, "Input"],
Cell[CellGroupData[{
Cell[136803, 3835, 138, 1, 44, "Subsection"],
Cell[136944, 3838, 576, 18, 55, "Input"],
Cell[CellGroupData[{
Cell[137545, 3860, 5501, 154, 475, "Input"],
Cell[143049, 4016, 215, 3, 32, "Output"],
Cell[143267, 4021, 219, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143535, 4030, 597, 18, 53, "Subsection"],
Cell[CellGroupData[{
Cell[144157, 4052, 931, 29, 41, "Input"],
Cell[145091, 4083, 731, 22, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145871, 4111, 179, 4, 45, "Subsection"],
Cell[146053, 4117, 2661, 74, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148751, 4196, 125, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[148901, 4201, 5087, 159, 273, "Input"],
Cell[153991, 4362, 91, 1, 32, "Output"],
Cell[154085, 4365, 93, 1, 32, "Output"],
Cell[154181, 4368, 91, 1, 32, "Output"],
Cell[154275, 4371, 91, 1, 32, "Output"],
Cell[154369, 4374, 91, 1, 32, "Output"],
Cell[154463, 4377, 91, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154615, 4385, 184, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[154824, 4391, 10292, 256, 747, "Input"],
Cell[165119, 4649, 1171, 18, 34, "Output"],
Cell[CellGroupData[{
Cell[166315, 4671, 1007, 13, 24, "Print"],
Cell[167325, 4686, 974, 13, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[168326, 4703, 7997, 183, 345, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176360, 4891, 135, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[176520, 4896, 3641, 102, 262, "Input"],
Cell[180164, 5000, 556, 11, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180769, 5017, 137, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[180931, 5024, 3008, 86, 262, "Input"],
Cell[183942, 5112, 659, 12, 34, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[184662, 5131, 177, 2, 67, "Title"],
Cell[CellGroupData[{
Cell[184864, 5137, 102, 1, 66, "Chapter"],
Cell[184969, 5140, 1490, 47, 109, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186496, 5192, 123, 1, 66, "Chapter"],
Cell[186622, 5195, 4161, 115, 464, "Input"],
Cell[190786, 5312, 369, 10, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191192, 5327, 108, 1, 66, "Chapter"],
Cell[191303, 5330, 1865, 54, 131, "Input"],
Cell[CellGroupData[{
Cell[193193, 5388, 1532, 41, 104, "Input"],
Cell[194728, 5431, 440, 9, 23, "Message"],
Cell[195171, 5442, 10753, 190, 232, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205973, 5638, 106, 1, 66, "Chapter"],
Cell[206082, 5641, 1892, 53, 87, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208011, 5699, 106, 1, 66, "Chapter"],
Cell[208120, 5702, 823, 25, 57, "Input"],
Cell[208946, 5729, 81, 1, 33, "Text"],
Cell[209030, 5732, 3770, 105, 220, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212837, 5842, 156, 3, 66, "Chapter"],
Cell[CellGroupData[{
Cell[213018, 5849, 2441, 68, 343, "Input"],
Cell[215462, 5919, 1021, 17, 34, "Output"]
}, Open  ]],
Cell[216498, 5939, 1839, 46, 260, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218374, 5990, 104, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[218503, 5995, 2050, 62, 165, "Input"],
Cell[220556, 6059, 575, 8, 32, "Output"],
Cell[221134, 6069, 573, 8, 32, "Output"],
Cell[221710, 6079, 589, 9, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[222348, 6094, 95, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[222468, 6099, 4280, 93, 555, "Input"],
Cell[CellGroupData[{
Cell[226773, 6196, 375, 5, 24, "Print"],
Cell[227151, 6203, 375, 5, 24, "Print"],
Cell[227529, 6210, 375, 5, 24, "Print"],
Cell[227907, 6217, 375, 5, 24, "Print"],
Cell[228285, 6224, 375, 5, 24, "Print"],
Cell[228663, 6231, 375, 5, 24, "Print"],
Cell[229041, 6238, 377, 5, 24, "Print"],
Cell[229421, 6245, 375, 5, 24, "Print"],
Cell[229799, 6252, 375, 5, 24, "Print"],
Cell[230177, 6259, 378, 5, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[230582, 6268, 210, 5, 32, "Input"],
Cell[230795, 6275, 497, 16, 34, "Input"],
Cell[231295, 6293, 568, 16, 57, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231900, 6314, 99, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[232024, 6319, 5248, 126, 623, "Input"],
Cell[237275, 6447, 55216, 972, 282, "Output"],
Cell[292494, 7421, 55050, 971, 284, "Output"]
}, Open  ]],
Cell[347559, 8395, 294, 8, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347890, 8408, 101, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[348016, 8413, 3841, 90, 421, "Input"],
Cell[351860, 8505, 43476, 774, 285, "Output"]
}, Open  ]],
Cell[395351, 9282, 269, 8, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395657, 9295, 92, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[395774, 9300, 2032, 48, 284, "Input"],
Cell[397809, 9350, 109517, 1918, 285, "Output"]
}, Open  ]],
Cell[507341, 11271, 310, 9, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507688, 11285, 143, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[507856, 11291, 2506, 51, 282, "Input"],
Cell[510365, 11344, 40176, 716, 300, "Output"]
}, Open  ]],
Cell[550556, 12063, 314, 9, 34, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[550919, 12078, 74, 1, 67, "Title"],
Cell[CellGroupData[{
Cell[551018, 12083, 126, 1, 66, "Chapter"],
Cell[551147, 12086, 1017, 34, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552201, 12125, 109, 1, 66, "Chapter"],
Cell[552313, 12128, 916, 26, 124, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553266, 12159, 101, 1, 66, "Chapter"],
Cell[553370, 12162, 327, 10, 57, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553734, 12177, 166, 2, 66, "Chapter"],
Cell[553903, 12181, 2728, 81, 178, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556668, 12267, 135, 1, 66, "Chapter"],
Cell[556806, 12270, 467, 16, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557310, 12291, 211, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[557546, 12297, 8108, 227, 621, "Input"],
Cell[565657, 12526, 434, 8, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566140, 12540, 163, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[566328, 12546, 2513, 69, 124, "Input"],
Cell[568844, 12617, 571, 11, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569464, 12634, 129, 1, 66, "Chapter"],
Cell[569596, 12637, 622, 21, 60, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570255, 12663, 160, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[570440, 12669, 2747, 65, 217, "Input"],
Cell[573190, 12736, 1398, 26, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574637, 12768, 109, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[574771, 12773, 518, 14, 80, "Input"],
Cell[575292, 12789, 1092, 22, 57, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576433, 12817, 104, 1, 66, "Chapter"],
Cell[576540, 12820, 1629, 45, 79, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578206, 12870, 136, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[578367, 12875, 1069, 32, 218, "Input"],
Cell[579439, 12909, 537, 10, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580025, 12925, 97, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[580147, 12930, 4561, 125, 611, "Input"],
Cell[CellGroupData[{
Cell[584733, 13059, 94, 1, 24, "Print"],
Cell[584830, 13062, 97, 1, 24, "Print"],
Cell[584930, 13065, 94, 1, 24, "Print"],
Cell[585027, 13068, 95, 1, 24, "Print"],
Cell[585125, 13071, 95, 1, 24, "Print"],
Cell[585223, 13074, 97, 1, 24, "Print"],
Cell[585323, 13077, 95, 1, 24, "Print"],
Cell[585421, 13080, 94, 1, 24, "Print"],
Cell[585518, 13083, 95, 1, 24, "Print"],
Cell[585616, 13086, 96, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[585739, 13091, 183, 4, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585959, 13100, 142, 2, 66, "Chapter"],
Cell[586104, 13104, 1936, 51, 194, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588077, 13160, 99, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[588201, 13165, 5197, 125, 623, "Input"],
Cell[593401, 13292, 56376, 992, 278, "Output"],
Cell[649780, 14286, 57093, 1003, 278, "Output"]
}, Open  ]],
Cell[706888, 15292, 215, 7, 34, "Input"],
Cell[707106, 15301, 89, 1, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707232, 15307, 101, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[707358, 15312, 4753, 114, 454, "Input"],
Cell[712114, 15428, 40633, 722, 285, "Output"]
}, Open  ]],
Cell[752762, 16153, 215, 7, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753014, 16165, 92, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[753131, 16170, 6612, 174, 694, "Input"],
Cell[759746, 16346, 39949, 713, 301, "Output"],
Cell[799698, 17061, 109409, 1917, 275, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[909156, 18984, 157, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[909338, 18990, 3335, 80, 389, "Input"],
Cell[912676, 19072, 41064, 726, 304, "Output"]
}, Open  ]],
Cell[953755, 19801, 288, 8, 91, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[954080, 19814, 168, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[954273, 19820, 2506, 51, 282, "Input"],
Cell[956782, 19873, 40184, 717, 300, "Output"]
}, Open  ]],
Cell[996981, 20593, 274, 8, 34, "Input"],
Cell[997258, 20603, 87, 1, 55, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[997394, 20610, 128, 1, 67, "Title"],
Cell[CellGroupData[{
Cell[997547, 20615, 191, 2, 66, "Chapter"],
Cell[CellGroupData[{
Cell[997763, 20621, 166, 3, 45, "Subsection"],
Cell[CellGroupData[{
Cell[997954, 20628, 2650, 76, 141, "Input"],
Cell[1000607, 20706, 282, 6, 70, "Output"]
}, Open  ]],
Cell[1000904, 20715, 10519, 266, 332, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011460, 20986, 96, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[1011581, 20991, 3807, 108, 206, "Input"],
Cell[1015391, 21101, 638, 12, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016066, 21118, 262, 5, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1016353, 21127, 547, 18, 122, "Subsubsection"],
Cell[CellGroupData[{
Cell[1016925, 21149, 5071, 150, 234, "Input"],
Cell[1021999, 21301, 314, 6, 70, "Output"],
Cell[1022316, 21309, 314, 6, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022691, 21322, 171, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1022887, 21328, 2164, 63, 132, "Input"],
Cell[1025054, 21393, 291, 5, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025394, 21404, 375, 7, 71, "Subsection"],
Cell[CellGroupData[{
Cell[1025794, 21415, 620, 19, 98, "Subsubsection"],
Cell[CellGroupData[{
Cell[1026439, 21438, 14721, 429, 661, "Input"],
Cell[1041163, 21869, 493, 9, 70, "Output"],
Cell[1041659, 21880, 493, 9, 70, "Output"],
Cell[1042155, 21891, 493, 9, 70, "Output"],
Cell[1042651, 21902, 491, 9, 70, "Output"],
Cell[1043145, 21913, 491, 9, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043697, 21929, 175, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[1043897, 21935, 3187, 91, 149, "Input"],
Cell[1047087, 22028, 365, 6, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047513, 22041, 96, 1, 65, "Section"],
Cell[1047612, 22044, 220, 7, 58, "Input"],
Cell[CellGroupData[{
Cell[1047857, 22055, 17506, 446, 563, "Input"],
Cell[1065366, 22503, 552, 11, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065967, 22520, 173, 2, 65, "Section"],
Cell[CellGroupData[{
Cell[1066165, 22526, 2056, 66, 198, "Input"],
Cell[1068224, 22594, 263, 4, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1068536, 22604, 3117, 104, 442, "Section"],
Cell[CellGroupData[{
Cell[1071678, 22712, 7536, 197, 321, "Input"],
Cell[1079217, 22911, 404, 8, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1079658, 22924, 104, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1079787, 22929, 12942, 394, 627, "Input"],
Cell[1092732, 23325, 484, 7, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1093277, 23339, 4333, 127, 388, "Section"],
Cell[CellGroupData[{
Cell[1097635, 23470, 4324, 136, 209, "Input"],
Cell[1101962, 23608, 619, 15, 70, "Output"],
Cell[1102584, 23625, 619, 15, 70, "Output"],
Cell[1103206, 23642, 581, 12, 70, "Output"],
Cell[1103790, 23656, 579, 12, 70, "Output"],
Cell[1104372, 23670, 443, 7, 70, "Output"],
Cell[1104818, 23679, 441, 7, 70, "Output"]
}, Open  ]],
Cell[1105274, 23689, 3236, 88, 129, "Input"],
Cell[CellGroupData[{
Cell[1108535, 23781, 2089, 58, 123, "Input"],
Cell[1110627, 23841, 328, 6, 70, "Output"]
}, Open  ]],
Cell[1110970, 23850, 113, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[1111108, 23855, 96, 1, 32, "Input"],
Cell[1111207, 23858, 281, 6, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1111525, 23869, 6336, 184, 451, "Input"],
Cell[1117864, 24055, 258, 4, 70, "Output"],
Cell[1118125, 24061, 238, 3, 70, "Output"],
Cell[1118366, 24066, 327, 6, 70, "Output"],
Cell[1118696, 24074, 239, 3, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118984, 24083, 539, 15, 67, "Section"],
Cell[CellGroupData[{
Cell[1119548, 24102, 176, 5, 34, "Input"],
Cell[1119727, 24109, 806, 18, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1120570, 24132, 6901, 214, 273, "Input"],
Cell[1127474, 24348, 162, 2, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127673, 24355, 248, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1127946, 24363, 811, 22, 53, "Input"],
Cell[1128760, 24387, 16449, 285, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145246, 24677, 1084, 29, 53, "Input"],
Cell[1146333, 24708, 146798, 2586, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

